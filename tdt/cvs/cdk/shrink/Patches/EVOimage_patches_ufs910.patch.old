--- EVO/usr/lib/enigma2/python/Screens/About.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/About.py	2009-04-27 15:44:51.000000000 +0200
@@ -25,7 +25,7 @@
 		self["FPVersion"] = StaticText(fp_version)
 
 		nims = nimmanager.nimList()
-		for count in (0, 1, 2, 3):
+		for count in range(4):
 			if count < len(nims):
 				self["Tuner" + str(count)] = StaticText(nims[count])
 			else:
@@ -33,7 +33,7 @@
 
 		self["HDDHeader"] = StaticText(_("Detected HDD:"))
 		hddlist = harddiskmanager.HDDList()
-		hdd = hddlist and hddlist[0][1] or None
+		hdd = len(hddlist) > 0 and hddlist[0][1] or None
 		if hdd is not None and hdd.model() != "":
 			self["hddA"] = StaticText(_("%s\n(%s, %d MB free)") % (hdd.model(), hdd.capacity(),hdd.free()))
 		else:


--- EVO/usr/lib/enigma2/python/Screens/ChannelSelection.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/ChannelSelection.py	2009-04-28 11:40:35.000000000 +0200
@@ -1,8 +1,9 @@
 from Tools.Profile import profile
-
+from Components.Label import Label
 from Screen import Screen
 from Components.Button import Button
 from Components.ServiceList import ServiceList
+from Components.Sources.StaticText import StaticText
 from Components.ActionMap import NumberActionMap, ActionMap, HelpableActionMap
 from Components.MenuList import MenuList
 from Components.ServiceEventTracker import ServiceEventTracker, InfoBarBase
@@ -76,7 +77,7 @@
 class ChannelContextMenu(Screen):
 	def __init__(self, session, csel):
 		Screen.__init__(self, session)
-		#raise Exception("we need a better summary screen here")
+		#raise "we need a better summary screen here"
 		self.csel = csel
 		self.bsel = None
 
@@ -95,7 +96,7 @@
 		inBouquet = csel.getMutableList() is not None
 		haveBouquets = config.usage.multibouquet.value
 
-		if not (current_sel_path or current_sel_flags & (eServiceReference.isDirectory|eServiceReference.isMarker)):
+		if not (len(current_sel_path) or current_sel_flags & (eServiceReference.isDirectory|eServiceReference.isMarker)):
 			append_when_current_valid(current, menu, (_("show transponder info"), self.showServiceInformations), level = 2)
 		if csel.bouquet_mark_edit == OFF and not csel.movemode:
 			if not inBouquetRootList:
@@ -317,24 +318,11 @@
 
 	def showEPGList(self):
 		ref=self.getCurrentSelection()
-		if ref:
-			self.savedService = ref
-			self.session.openWithCallback(self.SingleServiceEPGClosed, EPGSelection, ref, serviceChangeCB=self.changeServiceCB)
-
-	def SingleServiceEPGClosed(self, ret=False):
-		self.setCurrentSelection(self.savedService)
-
-	def changeServiceCB(self, direction, epg):
-		beg = self.getCurrentSelection()
-		while True:
-			if direction > 0:
-				self.moveDown()
-			else:
-				self.moveUp()
-			cur = self.getCurrentSelection()
-			if cur == beg or not (cur.flags & eServiceReference.isMarker):
-				break
-		epg.setService(ServiceReference(self.getCurrentSelection()))
+		ptr=eEPGCache.getInstance()
+		if ptr.startTimeQuery(ref) != -1:
+			self.session.open(EPGSelection, ref)
+		else:
+			print 'no epg for service', ref.toString()
 
 class ChannelSelectionEdit:
 	def __init__(self):
@@ -345,6 +333,7 @@
 		self.__marked = [ ]
 		self.saved_title = None
 		self.saved_root = None
+		self["title"] = StaticText()
 
 		class ChannelSelectionEditActionMap(ActionMap):
 			def __init__(self, csel, contexts = [ ], actions = { }, prio=0):
@@ -539,6 +528,7 @@
 			else:
 				new_title += ' ' + _("[favourite edit]")
 		self.setTitle(new_title)
+		self["title"].setText(new_title)
 		self.__marked = self.servicelist.getRootServices()
 		for x in self.__marked:
 			self.servicelist.addMarked(eServiceReference(x))
@@ -565,13 +555,14 @@
 		self.bouquet_mark_edit = OFF
 		self.mutableList = None
 		self.setTitle(self.saved_title)
+		self["title"].setText(self.saved_title)
 		self.saved_title = None
 		# self.servicePath is just a reference to servicePathTv or Radio...
 		# so we never ever do use the asignment operator in self.servicePath
 		del self.servicePath[:] # remove all elements
 		self.servicePath += self.savedPath # add saved elements
 		del self.savedPath
-		self.setRoot(self.servicePath[-1])
+		self.setRoot(self.servicePath[len(self.servicePath)-1])
 
 	def clearMarks(self):
 		self.servicelist.clearMarks()
@@ -618,6 +609,7 @@
 			self.mutableList.flushChanges() # FIXME add check if changes was made
 			self.mutableList = None
 			self.setTitle(self.saved_title)
+			self["title"].setText(self.saved_title)
 			self.saved_title = None
 			cur_root = self.getRoot()
 			if cur_root and cur_root == self.bouquet_root:
@@ -631,6 +623,7 @@
 			pos = self.saved_title.find(')')
 			new_title = self.saved_title[:pos+1] + ' ' + _("[move mode]") + self.saved_title[pos+1:]
 			self.setTitle(new_title);
+			self["title"].setText(new_title)
 
 	def handleEditCancel(self):
 		if self.movemode: #movemode active?
@@ -667,6 +660,9 @@
 		self["key_blue"] = Button(_("Favourites"))
 
 		self["list"] = ServiceList()
+#		self["title"] = StaticText()
+		self["favonly"] = Label(_("Channel Selection"))
+
 		self.servicelist = self["list"]
 
 		self.numericalTextInput = NumericalTextInput()
@@ -758,6 +754,7 @@
 			title = title[:pos]
 		title += " (TV)"
 		self.setTitle(title)
+		self["title"].setText(title)
 
 	def setRadioMode(self):
 		self.mode = MODE_RADIO
@@ -769,6 +766,7 @@
 			title = title[:pos]
 		title += " (Radio)"
 		self.setTitle(title)
+		self["title"].setText(title)
 
 	def setRoot(self, root, justSet=False):
 		path = root.getPath()
@@ -794,13 +792,13 @@
 
 	def getServiceName(self, ref):
 		str = self.removeModeStr(ServiceReference(ref).getServiceName())
-		if not str:
+		if not len(str):
 			pathstr = ref.getPath()
-			if 'FROM PROVIDERS' in pathstr:
+			if pathstr.find('FROM PROVIDERS') != -1:
 				return _("Provider")
-			if 'FROM SATELLITES' in pathstr:
+			if pathstr.find('FROM SATELLITES') != -1:
 				return _("Satellites")
-			if ') ORDER BY name' in pathstr:
+			if pathstr.find(') ORDER BY name') != -1:
 				return _("All")
 		return str
 
@@ -828,6 +826,7 @@
 					nameStr = self.getServiceName(end_ref)
 					titleStr += nameStr
 				self.setTitle(titleStr)
+				self["favonly"].setText(nameStr)
 
 	def moveUp(self):
 		self.servicelist.moveUp()
@@ -844,8 +843,9 @@
 
 	def pathUp(self, justSet=False):
 		prev = self.servicePath.pop()
-		if self.servicePath:
-			current = self.servicePath[-1]
+		length = len(self.servicePath)
+		if length:
+			current = self.servicePath[length-1]
 			self.setRoot(current, justSet)
 			if not justSet:
 				self.setCurrentSelection(prev)
@@ -939,6 +939,10 @@
 							ref = eServiceReference(refstr)
 							ref.setName(_("Current Transponder"))
 							self.servicelist.addService(ref)
+						hdref = eServiceReference('1:7:1:0:0:0:0:0:0:0:(type == 25) ORDER BY name')
+						if hdref:
+							hdref.setName("%s - %s" % (_("HDTV"), _("Services")))
+							self.servicelist.addService(hdref)
 						self.servicelist.finishFill()
 						if prev is not None:
 							self.setCurrentSelection(prev)
@@ -973,7 +977,7 @@
 				self.enterPath(ref)
 
 	def inBouquet(self):
-		if self.servicePath and self.servicePath[0] == self.bouquet_root:
+		if len(self.servicePath) > 0 and self.servicePath[0] == self.bouquet_root:
 			return True
 		return False
 
@@ -1247,7 +1251,8 @@
 		del self.servicePath[:]
 		self.servicePath += path
 		self.saveRoot()
-		root = path[-1]
+		plen = len(path)
+		root = path[plen-1]
 		cur_root = self.getRoot()
 		if cur_root and cur_root != root:
 			self.setRoot(root)
@@ -1260,7 +1265,7 @@
 		for i in self.servicePath:
 			path += i.toString()
 			path += ';'
-		if path and path != self.lastroot.value:
+		if len(path) and path != self.lastroot.value:
 			self.lastroot.value = path
 			self.lastroot.save()
 
@@ -1270,7 +1275,7 @@
 		tmp = re.findall(self.lastroot.value)
 		cnt = 0
 		for i in tmp:
-			self.servicePath.append(eServiceReference(i[:-1]))
+			self.servicePath.append(eServiceReference(i[:len(i)-1]))
 			cnt += 1
 		if cnt:
 			path = self.servicePath.pop()
@@ -1280,7 +1285,7 @@
 			self.saveRoot()
 
 	def preEnterPath(self, refstr):
-		if self.servicePath and self.servicePath[0] != eServiceReference(refstr):
+		if len(self.servicePath) and self.servicePath[0] != eServiceReference(refstr):
 			pathstr = self.lastroot.value
 			if pathstr is not None and pathstr.find(refstr) == 0:
 				self.restoreRoot()
@@ -1300,14 +1305,16 @@
 			self.lastservice.save()
 
 	def setCurrentServicePath(self, path):
-		if self.history:
+		hlen = len(self.history)
+		if hlen > 0:
 			self.history[self.history_pos] = path
 		else:
 			self.history.append(path)
 		self.setHistoryPath()
 
 	def getCurrentServicePath(self):
-		if self.history:
+		hlen = len(self.history)
+		if hlen > 0:
 			return self.history[self.history_pos]
 		return None
 
@@ -1420,7 +1427,7 @@
 		for i in self.servicePathRadio:
 			path += i.toString()
 			path += ';'
-		if path and path != config.radio.lastroot.value:
+		if len(path) and path != config.radio.lastroot.value:
 			config.radio.lastroot.value = path
 			config.radio.lastroot.save()
 
@@ -1430,7 +1437,7 @@
 		tmp = re.findall(config.radio.lastroot.value)
 		cnt = 0
 		for i in tmp:
-			self.servicePathRadio.append(eServiceReference(i[:-1]))
+			self.servicePathRadio.append(eServiceReference(i[:len(i)-1]))
 			cnt += 1
 		if cnt:
 			path = self.servicePathRadio.pop()
@@ -1440,7 +1447,7 @@
 			self.saveRoot()
 
 	def preEnterPath(self, refstr):
-		if self.servicePathRadio and self.servicePathRadio[0] != eServiceReference(refstr):
+		if len(self.servicePathRadio) and self.servicePathRadio[0] != eServiceReference(refstr):
 			pathstr = config.radio.lastroot.value
 			if pathstr is not None and pathstr.find(refstr) == 0:
 				self.restoreRoot()
@@ -1496,6 +1503,7 @@
 
 	def __onExecCallback(self):
 		self.setTitle(self.title)
+		self["title"].setText(self.title)
 		self.setModeTv()
 
 	def channelSelected(self): # just return selected service


--- EVO/usr/lib/enigma2/python/Screens/InfoBarGenerics.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/InfoBarGenerics.py	2009-09-18 12:21:55.456788890 +0200
@@ -290,6 +290,8 @@
 				"zapDown": (self.zapDown, _("next channel")),
 				"historyBack": (self.historyBack, _("previous channel in history")),
 				"historyNext": (self.historyNext, _("next channel in history")),
+				"prevBouquet": (self.prevBouquet, _("previous bouquet")),
+				"nextBouquet": (self.nextBouquet, _("next bouquet")),
 				"openServiceList": (self.openServiceList, _("open servicelist")),
 			})
 
@@ -328,6 +330,16 @@
 	def openServiceList(self):
 		self.session.execDialog(self.servicelist)
 
+	def prevBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.prevBouquet()
+			self.servicelist.zap()
+
+	def nextBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.nextBouquet()
+			self.servicelist.zap()
+
 	def zapUp(self):
 		if self.servicelist.inBouquet():
 			prev = self.servicelist.getCurrentSelection()
@@ -1275,7 +1287,17 @@
 		self["InstantExtensionsActions"] = HelpableActionMap(self, "InfobarExtensions",
 			{
 				"extensions": (self.showExtensionSelection, _("view extensions...")),
-			}, 1) # lower priority
+# ------------------ Extra-Menu Patch Red----------------
+				"evopanel": (self.callEVOPanelRed, _("view EVOPanel...")),
+			}, 1)
+
+	def callEVOPanelRed(self):
+                from Plugins.Extensions.EVOPanel.plugin import EVOPanelButton, EVOPanelServiceList, EVOPanel
+	        EVOPanelButton(self,"red")
+	        EVOPanelServiceList(self,self.servicelist)
+		self.session.open(EVOPanel)
+                EVOPanelButton(self,"")
+# ------------------ Extra-Menu Patch Red----------------
 
 	def addExtension(self, extension, key = None, type = EXTENSION_SINGLE):
 		self.list.append((type, extension, key))
@@ -2102,8 +2124,8 @@
 				if aspect[1] == "resolution":
 					self.ExGreen_toggleGreen()
 				else:
-					open("/proc/stb/video/policy", "w").write(service[1]) 
-					self.ExGreen_toggleGreen()
+					open("/proc/stb/video/policy", "w").write(aspect[1]) 
+					self.ExGreen_doHide()
 		return 

 class InfoBarResolutionSelection: 
@@ -2128,16 +2150,20 @@
 		tlist.append(("Auto(not available)", "auto")) 
 		tlist.append(("Video: " + str(xres) + "x" + str(yres) + "@" + str(fpsFloat) + "hz", "")) 
 		tlist.append(("--", "")) 
-		tlist.append(("576i", "576i50")) 
-		tlist.append(("576p", "576p50")) 
-		tlist.append(("720p", "720p50")) 
-		tlist.append(("1080i", "1080i50")) 
-		tlist.append(("1080p@23.976hz", "1080p23")) 
-		tlist.append(("1080p@24hz", "1080p24")) 
+#		tlist.append(("576i", "576i50")) 
+		tlist.append(("576p@50hz", "576p50")) 
+		tlist.append(("720p@50hz", "720p50")) 
+#		tlist.append(("720p@60hz", "720p60")) 
+		tlist.append(("1080i@50hz", "1080i50")) 
+#		tlist.append(("1080i@60hz", "1080i60")) 
+#		tlist.append(("1080p@24hz", "1080p24")) 
 		tlist.append(("1080p@25hz", "1080p25")) 
+		tlist.append(("1080p@30hz", "1080p30")) 
+		tlist.append(("1080p@23.976hz", "1080p23")) 
 		
 
-		keys = ["green", "yellow", "blue", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ] 
+		keys = ["green", "yellow", "blue", "", "0", "1", "2", "3", "4", "5" ] 
+#		keys = ["green", "yellow", "blue", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ] 
 
 		mode = open("/proc/stb/video/videomode").read()[:-1] 
 		print mode 
@@ -2145,7 +2171,7 @@
 			if tlist[x][1] == mode: 
 				selection = x 
 
-		self.session.openWithCallback(self.ResolutionSelected, ChoiceBox, title=_("Please select an aspect ratio..."), list = tlist, selection = selection, keys = keys) 
+		self.session.openWithCallback(self.ResolutionSelected, ChoiceBox, title=_("Please select an a/v ratio..."), list = tlist, selection = selection, keys = keys) 
 
 	def ResolutionSelected(self, Resolution): 
 		if not Resolution is None: 
@@ -2568,7 +2594,6 @@
 			eDVBServicePMTHandler.eventNoResources: _("No free tuner!"),
 			eDVBServicePMTHandler.eventTuneFailed: _("Tune failed!"),
 			eDVBServicePMTHandler.eventNoPAT: _("No data on transponder!\n(Timeout reading PAT)"),
-			eDVBServicePMTHandler.eventNoPATEntry: _("Service not found!\n(SID not found in PAT)"),
 			eDVBServicePMTHandler.eventNoPMT: _("Service invalid!\n(Timeout reading PMT)"),
 			eDVBServicePMTHandler.eventNewProgramInfo: None,
 			eDVBServicePMTHandler.eventTuned: None,


--- EVO/usr/lib/enigma2/python/Screens/LocationBox.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/LocationBox.py	2009-06-02 12:15:22.000000000 +0200
@@ -504,13 +504,13 @@
 
 class MovieLocationBox(LocationBox):
 	def __init__(self, session, text, dir, minFree = None):
-		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr", "/var"]
+		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr"]
 		LocationBox.__init__(self, session, text = text, currDir = dir, bookmarks = config.movielist.videodirs, autoAdd = True, editDir = True, inhibitDirs = inhibitDirs, minFree = minFree)
 		self.skinName = "LocationBox"
 
 class TimeshiftLocationBox(LocationBox):
 	def __init__(self, session):
-		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr", "/var"]
+		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr"]
 		LocationBox.__init__(
 				self,
 				session,

--- EVO/usr/lib/enigma2/python/Screens/Volume.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/Volume.py	2009-04-08 11:23:44.000000000 +0200
@@ -1,14 +1,27 @@
+
+#   Volume.py-Screen with Text-Value 
+#   by Vali 18.07.2008
+
+#         Usage in skin.xml:
+
+#	<screen name="Volume" ..................... backgroundColor="transparent" flags="wfNoBorder">
+#		<ePixmap position="0,0" ..................... />
+#		<widget name="Volume" zPosition="2" ................... transparent="1" />
+#		<widget name="VolumeText" zPosition="3" position="0,0" size="30,20" font="Regular;16" transparent="1" foregroundColor="#f0f0f0" backgroundColor="#0f0f0f"/>
+#	</screen>
+
 from Screen import Screen
 from Components.VolumeBar import VolumeBar
+from Components.Label import Label #NEW LINE
 		
 class Volume(Screen):
 	def __init__(self, session):
 		Screen.__init__(self, session)
-		
 		self.volumeBar = VolumeBar()
-		
 		self["Volume"] = self.volumeBar
+		self["VolumeText"] = Label("") #NEW LINE
 		
 	def setValue(self, vol):
-		print "setValue", vol
 		self.volumeBar.setValue(vol)
+		self["VolumeText"].setText(str(vol)) #NEW LINE
+


--- EVO/usr/lib/enigma2/python/Components/About.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/About.py	2009-04-27 16:15:51.000000000 +0200
@@ -23,7 +23,7 @@
 					month = version[8:10]
 					day = version[10:12]
 
-					return '-'.join(("dev", year, month, day))
+					return '-'.join(["cvs", year, month, day])
 			file.close()
 		except IOError:
 			pass

--- EVO/usr/lib/enigma2/python/Components/Language.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/Language.py	2009-09-18 13:48:22.991763818 +0200
@@ -1,54 +1,21 @@
 import gettext
-
 from Tools.Directories import SCOPE_LANGUAGE, resolveFilename
-
 import language_cache
-
 class Language:
 	def __init__(self):
 		gettext.install('enigma2', resolveFilename(SCOPE_LANGUAGE, ""), unicode=0, codeset="utf-8")
 		self.activeLanguage = 0
 		self.lang = {}
 		self.langlist = []
-		# FIXME make list dynamically
-		# name, iso-639 language, iso-3166 country. Please don't mix language&country!
-		# also, see "precalcLanguageList" below on how to re-create the language cache after you added a language
 		self.addLanguage(_("English"), "en", "EN")
 		self.addLanguage(_("German"), "de", "DE")
-		self.addLanguage(_("Arabic"), "ar", "AE")
-		self.addLanguage(_("Catalan"), "ca", "AD")
-		self.addLanguage(_("Croatian"), "hr", "HR")
-		self.addLanguage(_("Czech"), "cs", "CZ")
-		self.addLanguage(_("Danish"), "da", "DK")
-		self.addLanguage(_("Dutch"), "nl", "NL")
-		self.addLanguage(_("Finnish"), "fi", "FI")
-		self.addLanguage(_("Estonian"), "et", "EE")
-		self.addLanguage(_("French"), "fr", "FR")
-		self.addLanguage(_("Greek"), "el", "GR")
-		self.addLanguage(_("Hungarian"), "hu", "HU")
-		self.addLanguage(_("Lithuanian"), "lt", "LT")
-		self.addLanguage(_("Latvian"), "lv", "LV")
-		self.addLanguage(_("Icelandic"), "is", "IS")
-		self.addLanguage(_("Italian"), "it", "IT")
-		self.addLanguage(_("Norwegian"), "no", "NO")
-		self.addLanguage(_("Polish"), "pl", "PL")
-		self.addLanguage(_("Portuguese"), "pt", "PT")
-		self.addLanguage(_("Russian"), "ru", "RU")
-		self.addLanguage(_("Spanish"), "es", "ES")
-		self.addLanguage(_("Swedish"), "sv", "SE")
-		self.addLanguage(_("Turkish"), "tr", "TR")
-		self.addLanguage(_("Ukrainian"), "uk", "UA")
-		self.addLanguage(_("Frisian"), "fy", "x-FY") # there is no separate country for frisian
-
 		self.callbacks = []
-
 	def addLanguage(self, name, lang, country):
 		try:
 			self.lang[str(lang + "_" + country)] = ((_(name), lang, country))
 			self.langlist.append(str(lang + "_" + country))
 		except:
 			print "Language " + str(name) + " not found"
-
 	def activateLanguage(self, index):
 		try:
 			lang = self.lang[index]
@@ -59,37 +26,28 @@
 				x()
 		except:
 			print "Selected language does not exist!"
-
 	def activateLanguageIndex(self, index):
 		if index < len(self.langlist):
 			self.activateLanguage(self.langlist[index])
-
 	def getLanguageList(self):
 		return [ (x, self.lang[x]) for x in self.langlist ]
-
 	def getActiveLanguage(self):
 		return self.activeLanguage
-	
 	def getActiveLanguageIndex(self):
 		idx = 0
 		for x in self.langlist:
 			if x == self.activeLanguage:
 				return idx
 			idx += 1
-		return None			
-
+		return None
 	def getLanguage(self):
 		try:
 			return str(self.lang[self.activeLanguage][1]) + "_" + str(self.lang[self.activeLanguage][2])
 		except:
 			return ''
-
 	def addCallback(self, callback):
 		self.callbacks.append(callback)
-
 	def precalcLanguageList(self):
-		# excuse me for those T1, T2 hacks please. The goal was to keep the language_cache.py as small as possible, *and* 
-		# don't duplicate these strings.
 		T1 = _("Please use the UP and DOWN keys to select your language. Afterwards press the OK button.")
 		T2 = _("Language selection")
 		l = open("language_cache.py", "w")
@@ -100,10 +58,8 @@
 			print >>l, '"%s": {' % language
 			for name, lang, country in self.lang.values():
 				print >>l, '\t"%s_%s": "%s",' % (lang, country, _(name))
-
 			print >>l, '\t"T1": "%s",' % (_(T1))
 			print >>l, '\t"T2": "%s",' % (_(T2))
 			print >>l, '},'
 		print >>l, "}"
-
 language = Language()


--- EVO/usr/lib/enigma2/python/Components/Network.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/Network.py	2009-05-18 11:00:06.000000000 +0200
@@ -3,8 +3,6 @@
 from socket import *
 from enigma import eConsoleAppContainer
 from Components.Console import Console
-from Components.PluginComponent import plugins
-from Plugins.Plugin import PluginDescriptor
 
 class Network:
 	def __init__(self):
@@ -24,7 +22,6 @@
 		self.activateConsole = Console()
 		self.resetNetworkConsole = Console()
 		self.DnsConsole = Console()
-		self.config_ready = None
 		self.getInterfaces()
 
 	def getInterfaces(self, callback = None):
@@ -206,7 +203,7 @@
 					ifaces[currif]["gateway"] = map(int, split[1].split('.'))
 					if self.ifaces[currif].has_key("gateway"):
 						if self.ifaces[currif]["gateway"] != ifaces[currif]["gateway"] and ifaces[currif]["dhcp"] == False:
-							self.ifaces[currif]["gateway"] = map(int, split[1].split('.'))
+							self.ifaces[currif]["gateway"] = map(int, split[1].split('.'))					
 				if (split[0] == "pre-up"):
 					if self.ifaces[currif].has_key("preup"):
 						self.ifaces[currif]["preup"] = i
@@ -225,8 +222,6 @@
 				self.loadNameserverConfig()
 				print "read configured interfac:", ifaces
 				print "self.ifaces after loading:", self.ifaces
-				self.config_ready = True
-				self.msgPlugins()
 				if callback is not None:
 					callback(True)
 
@@ -423,8 +418,6 @@
 		
 	def restartNetwork(self,callback = None):
 		self.restartConsole = Console()
-		self.config_ready = False
-		self.msgPlugins()
 		self.commands = []
 		self.commands.append("/etc/init.d/avahi-daemon stop")
 		for iface in self.ifaces.keys():
@@ -433,6 +426,7 @@
 		self.commands.append("/etc/init.d/networking stop")
 		self.commands.append("killall -9 udhcpc")
 		self.commands.append("rm /var/run/udhcpc*")
+		self.commands.append("/etc/init.d/udhcpc start")
 		self.commands.append("/etc/init.d/networking start")
 		self.commands.append("/etc/init.d/avahi-daemon start")
 		self.restartConsole.eBatch(self.commands, self.restartNetworkFinished, callback, debug=True)
@@ -455,34 +449,24 @@
 			
 	def stopLinkStateConsole(self):
 		if self.LinkConsole is not None:
-			if len(self.LinkConsole.appContainers):
-				for name in self.LinkConsole.appContainers.keys():
-					self.LinkConsole.kill(name)
-					
+			self.LinkConsole = None
+
 	def stopDNSConsole(self):
 		if self.DnsConsole is not None:
-			if len(self.DnsConsole.appContainers):
-				for name in self.DnsConsole.appContainers.keys():
-					self.DnsConsole.kill(name)
-					
+			self.DnsConsole = None
+
 	def stopRestartConsole(self):
 		if self.restartConsole is not None:
-			if len(self.restartConsole.appContainers):
-				for name in self.restartConsole.appContainers.keys():
-					self.restartConsole.kill(name)
-					
+			self.restartConsole = None
+			
 	def stopGetInterfacesConsole(self):
 		if self.Console is not None:
-			if len(self.Console.appContainers):
-				for name in self.Console.appContainers.keys():
-					self.Console.kill(name)
-					
+			self.Console = None
+
 	def stopDeactivateInterfaceConsole(self):
-		if self.deactivateInterfaceConsole is not None:
-			if len(self.deactivateInterfaceConsole.appContainers):
-				for name in self.deactivateInterfaceConsole.appContainers.keys():
-					self.deactivateInterfaceConsole.kill(name)
-					
+		if self.deactivateInterfaceConsole:
+			self.deactivateInterfaceConsole = None
+			
 	def checkforInterface(self,iface):
 		if self.getAdapterAttribute(iface, 'up') is True:
 			return True
@@ -564,11 +548,6 @@
 			netmask = str(inet_ntoa(pack('>L', nm)))
 			return netmask
 	
-	def msgPlugins(self):
-		if self.config_ready is not None:
-			for p in plugins.getPlugins(PluginDescriptor.WHERE_NETWORKCONFIG_READ):
-				p(reason=self.config_ready)
-	
 iNetwork = Network()
 
 def InitNetwork():


--- EVO/usr/lib/enigma2/python/Components/UsageConfig.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/UsageConfig.py	2009-09-13 00:05:26.519766000 +0200
@@ -1,5 +1,5 @@
 from Components.Harddisk import harddiskmanager
-from config import ConfigSubsection, ConfigYesNo, config, ConfigSelection, ConfigText, ConfigNumber, ConfigSet, ConfigLocations
+from config import ConfigSubsection, ConfigYesNo, config, ConfigSelection, ConfigText, ConfigNumber, ConfigInteger, ConfigSet, ConfigLocations
 from enigma import Misc_Options, setTunerTypePriorityOrder;
 from SystemInfo import SystemInfo
 import os
@@ -7,16 +7,20 @@
 def InitUsageConfig():
 	config.usage = ConfigSubsection();
 	config.usage.showdish = ConfigYesNo(default = False)
-	config.usage.multibouquet = ConfigYesNo(default = False)
+	config.usage.multibouquet = ConfigYesNo(default = True)
 	config.usage.quickzap_bouquet_change = ConfigYesNo(default = False)
 	config.usage.e1like_radio_mode = ConfigYesNo(default = False)
+	config.audio = ConfigSubsection();
+	config.audio.volume_max = ConfigInteger(default=100, limits=(50,100))
+	config.audio.volume_silenced = ConfigInteger(default=100, limits=(50,100))
+	config.audio.volume_timeout = ConfigInteger(default=2000, limits=(500,5000))
 	config.usage.infobar_timeout = ConfigSelection(default = "5", choices = [
 		("0", _("no timeout")), ("1", "1 " + _("second")), ("2", "2 " + _("seconds")), ("3", "3 " + _("seconds")),
 		("4", "4 " + _("seconds")), ("5", "5 " + _("seconds")), ("6", "6 " + _("seconds")), ("7", "7 " + _("seconds")),
 		("8", "8 " + _("seconds")), ("9", "9 " + _("seconds")), ("10", "10 " + _("seconds"))])
 	config.usage.show_infobar_on_zap = ConfigYesNo(default = True)
 	config.usage.show_infobar_on_skip = ConfigYesNo(default = True)
-	config.usage.show_infobar_on_event_change = ConfigYesNo(default = True)
+	config.usage.show_infobar_on_event_change = ConfigYesNo(default = False)
 	config.usage.hdd_standby = ConfigSelection(default = "600", choices = [
 		("0", _("no standby")), ("10", "10 " + _("seconds")), ("30", "30 " + _("seconds")),
 		("60", "1 " + _("minute")), ("120", "2 " + _("minutes")),
@@ -30,22 +34,22 @@
 		("standard", _("standard")), ("swap", _("swap PiP and main picture")),
 		("swapstop", _("move PiP to main picture")), ("stop", _("stop PiP")) ])
 
-	config.usage.allowed_timeshift_paths = ConfigLocations(default = ["/media/hdd/"])
-	config.usage.timeshift_path = ConfigText(default = "/media/hdd")
+	config.usage.allowed_timeshift_paths = ConfigLocations(default = ["/hdd/timeshift/"])
+	config.usage.timeshift_path = ConfigText(default = "/hdd/timeshift/")
 
-	config.usage.on_movie_start = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_start = ConfigSelection(default = "beginning", choices = [
 		("ask", _("Ask user")), ("resume", _("Resume from last position")), ("beginning", _("Start from the beginning")) ])
-	config.usage.on_movie_stop = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_stop = ConfigSelection(default = "quit", choices = [
 		("ask", _("Ask user")), ("movielist", _("Return to movie list")), ("quit", _("Return to previous service")) ])
-	config.usage.on_movie_eof = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_eof = ConfigSelection(default = "quit", choices = [
 		("ask", _("Ask user")), ("movielist", _("Return to movie list")), ("quit", _("Return to previous service")), ("pause", _("Pause movie at end")) ])
 
-	config.usage.setup_level = ConfigSelection(default = "intermediate", choices = [
+	config.usage.setup_level = ConfigSelection(default = "expert", choices = [
 		("simple", _("Simple")),
 		("intermediate", _("Intermediate")),
 		("expert", _("Expert")) ])
 
-	config.usage.on_long_powerpress = ConfigSelection(default = "show_menu", choices = [
+	config.usage.on_long_powerpress = ConfigSelection(default = "shutdown", choices = [
 		("show_menu", _("show shutdown menu")),
 #+++>
 		("standby", _("immediate standby")),
@@ -54,11 +58,7 @@
 
 	config.usage.alternatives_priority = ConfigSelection(default = "0", choices = [
 		("0", "DVB-S/-C/-T"),
-		("1", "DVB-S/-T/-C"),
-		("2", "DVB-C/-S/-T"),
-		("3", "DVB-C/-T/-S"),
-		("4", "DVB-T/-C/-S"),
-		("5", "DVB-T/-S/-C") ])
+		("1", "DVB-S/-T/-C")])
 
 	config.usage.blinking_display_clock_during_recording = ConfigYesNo(default = False)
 	config.usage.load_length_of_movies_in_moviellist = ConfigYesNo(default = True)
@@ -81,7 +81,7 @@
 
 	SystemInfo["12V_Output"] = Misc_Options.getInstance().detected_12V_output()
 
-	config.usage.keymap = ConfigText(default = "/usr/share/enigma2/keymap.xml")
+	config.usage.keymap = ConfigText(default = "/var/usr/local/share/enigma2/keymap.xml")
 
 	config.seek = ConfigSubsection()
 	config.seek.selfdefined_13 = ConfigNumber(default=15)


--- EVO/usr/lib/enigma2/python/Components/VolumeControl.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/VolumeControl.py	2009-09-13 00:05:39.507765000 +0200
@@ -7,23 +7,34 @@
 
 profile("VolumeControl")
 #TODO .. move this to a own .py file
+#
+# gutemine optimized this a little bit for silenzio
+#
 class VolumeControl:
 	"""Volume control, handles volUp, volDown, volMute actions and display
 	a corresponding dialog"""
 	def __init__(self, session):
+	        global is_silenced
+	        global pre_silence
+	        global post_silence
 		global globalActionMap
 		globalActionMap.actions["volumeUp"]=self.volUp
 		globalActionMap.actions["volumeDown"]=self.volDown
 		globalActionMap.actions["volumeMute"]=self.volMute
+		globalActionMap.actions["volumeCorrect"]=self.volCorrect
 
+                is_silenced = 0
 		config.audio = ConfigSubsection()
 		config.audio.volume = ConfigInteger(default = 100, limits = (0, 100))
+		config.audio.volume_silenced = ConfigInteger(default = 100, limits = (50, 100))
+		config.audio.volume_max = ConfigInteger(default = 100, limits = (50, 100))
+		config.audio.volume_timeout = ConfigInteger(default = 2000, limits = (500, 5000))
 
 		self.volumeDialog = session.instantiateDialog(Volume)
 		self.muteDialog = session.instantiateDialog(Mute)
 
 		self.hideVolTimer = eTimer()
-		self.hideVolTimer.callback.append(self.volHide)
+		self.hideVolTimer.timeout.get().append(self.volHide)
 
 		vol = config.audio.volume.value
 		self.volumeDialog.setValue(vol)
@@ -37,6 +48,84 @@
 			config.audio.volume.value = self.volctrl.getVolume()
 		config.audio.volume.save()
 
+	def volCorrect(self):
+	        global is_silenced
+	        global pre_silence
+	        global post_silence
+		is_muted = self.volctrl.isMuted()
+		newvol=0
+		vol = self.volctrl.getVolume()
+		self.volumeDialog.show()
+                volcorr = config.audio.volume_silenced.value
+		maxvol = config.audio.volume_max.value
+                if volcorr == 100:
+                   # act like normal mute
+		   if is_muted:
+			self.volMute() # unmute
+	           else:
+			self.volMute(True, True) # mute and show mute symbol
+ 		   if self.volctrl.isMuted():
+ 			self.volumeDialog.setValue(0)
+		   else:
+		      if maxvol > vol:
+			 self.volumeDialog.setValue(self.volctrl.getVolume())
+		      else:
+			 self.volumeDialog.setValue(maxvol)
+	        else:
+                   # act as silencer
+		   if is_muted:
+		      self.volMute() # unmute
+                      if is_silenced:
+                         # switch back to pre silenced
+                         if vol == post_silence:
+                            # toggle volume back
+                            newvol = pre_silence 
+                         else:
+                            # volume was changed after silenced
+	                    newvol=int(vol*100/volcorr)
+	                 # remember that unsilenced
+	   	         is_silenced = 0
+		      else:
+		         newvol = vol
+		   elif not vol:
+		      self.volMute(False, True) # mute but dont show mute symbol
+ 		   else:
+                      volcorr = config.audio.volume_silenced.value
+                      if is_silenced:
+                         # do unsilence
+                         if vol == post_silence:
+                            # toggle volume back
+                            newvol = pre_silence 
+                         else:
+                            # volume was changed after silenced
+	                    newvol=int(vol*100/volcorr)
+	                 # remember that unsilenced
+	                 is_silenced = 0
+	              else:
+	                 # do silence
+	                 newvol=int(vol*volcorr/100)
+	                 # remember that silenced
+	                 is_silenced = 1
+                   pre_silence = vol
+		   if newvol > maxvol:
+		      newvol = maxvol
+	      	   while (vol > newvol):
+		      self.volctrl.volumeDown()
+		      vol = self.volctrl.getVolume()
+	      	   while (vol < newvol):
+		      self.volctrl.volumeUp()
+		      vol = self.volctrl.getVolume()
+		   self.volumeDialog.show()
+		   self.volumeDialog.setValue(self.volctrl.getVolume())
+	        self.volSave()
+	        post_silence = self.volctrl.getVolume()
+                hidevoltimeout = config.audio.volume_timeout.value
+                if hidevoltimeout < 500:
+                   hoidevoltimeout=2000
+                if hidevoltimeout > 5000:
+                   hoidevoltimeout=5000
+		self.hideVolTimer.start(hidevoltimeout, True)
+		
 	def volUp(self):
 		self.setVolume(+1)
 
@@ -44,11 +133,17 @@
 		self.setVolume(-1)
 
 	def setVolume(self, direction):
-		oldvol = self.volctrl.getVolume()
+		maxvol = config.audio.volume_max.value
+		vol = self.volctrl.getVolume()
+		while (vol > maxvol):
+			self.volctrl.volumeDown()
+		        vol = self.volctrl.getVolume()
 		if direction > 0:
+		   if (vol < maxvol):
 			self.volctrl.volumeUp()
 		else:
 			self.volctrl.volumeDown()
+			
 		is_muted = self.volctrl.isMuted()
 		vol = self.volctrl.getVolume()
 		self.volumeDialog.show()
@@ -59,9 +154,18 @@
 		if self.volctrl.isMuted():
 			self.volumeDialog.setValue(0)
 		else:
+		   if maxvol > vol:
 			self.volumeDialog.setValue(self.volctrl.getVolume())
+		   else:
+			self.volumeDialog.setValue(maxvol)
+		   
 		self.volSave()
-		self.hideVolTimer.start(3000, True)
+                hidevoltimeout = config.audio.volume_timeout.value
+                if hidevoltimeout < 500:
+                   hoidevoltimeout=2000
+                if hidevoltimeout > 5000:
+                   hoidevoltimeout=5000
+		self.hideVolTimer.start(hidevoltimeout, True)
 
 	def volHide(self):
 		self.volumeDialog.hide()
@@ -77,3 +181,8 @@
 			else:
 				self.muteDialog.hide()
 				self.volumeDialog.setValue(vol)
+
+#
+# gutemine ends here for silenzio
+#
+				self.volumeDialog.setValue(vol)


--- EVO/usr/lib/enigma2/python/Components/Converter/ServiceInfo.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/Converter/ServiceInfo.py	2009-06-04 08:13:05.000000000 +0200
@@ -18,7 +18,7 @@
 	TSID = 12
 	ONID = 13
 	SID = 14
-	
+	IS_HD = 15	
 
 	def __init__(self, type):
 		Converter.__init__(self, type)
@@ -38,6 +38,7 @@
 				"TsId": (self.TSID, (iPlayableService.evUpdatedInfo,)),
 				"OnId": (self.ONID, (iPlayableService.evUpdatedInfo,)),
 				"Sid": (self.SID, (iPlayableService.evUpdatedInfo,)),
+				"IsHD": (self.IS_HD, (iPlayableService.evVideoSizeChanged,)),
 			}[type]
 
 	def getServiceInfoString(self, info, what):
@@ -78,6 +79,13 @@
 		elif self.type == self.SUBSERVICES_AVAILABLE:
 			subservices = service.subServices()
 			return subservices and subservices.getNumberOfSubservices() > 0
+		elif self.type == self.IS_HD:
+			xresol = info.getInfo(iServiceInformation.sVideoWidth)
+			yresol = info.getInfo(iServiceInformation.sVideoHeight)
+			if (xresol > 750) or (yresol > 600):
+				return True
+			else:
+				return False
 
 	boolean = property(getBoolean)
 	
 	
--- EVO/usr/lib/enigma2/python/Plugins/Extensions/MediaPlayer/plugin.py	2009-09-17 22:05:50.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/MediaPlayer/plugin.py	2009-09-18 14:01:08.476767000 +0200
@@ -1101,11 +1101,6 @@
 def main(session, **kwargs):
 	session.open(MediaPlayer)
 
-def menu(menuid, **kwargs):
-	if menuid == "mainmenu":
-		return [(_("Media player"), main, "media_player", 45)]
-	return []
-
 def filescan_open(list, session, **kwargs):
 	from enigma import eServiceReference
 
@@ -1183,6 +1178,6 @@
 from Plugins.Plugin import PluginDescriptor
 def Plugins(**kwargs):
 	return [
-		PluginDescriptor(name = "MediaPlayer", description = "Play back media files", where = PluginDescriptor.WHERE_MENU, fnc = menu),
+		PluginDescriptor(name = "MediaPlayer", description = "Play back media files", where = PluginDescriptor.WHERE_PLUGINMENU, fnc = main),
 		PluginDescriptor(name = "MediaPlayer", where = PluginDescriptor.WHERE_FILESCAN, fnc = filescan)
 	]


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/DVDPlayer/plugin.py	2009-09-17 22:05:50.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/DVDPlayer/plugin.py	2009-09-18 14:08:18.235765077 +0200
@@ -701,11 +701,6 @@
 def main(session, **kwargs):
 	session.open(DVDPlayer)
 
-def menu(menuid, **kwargs):
-	if menuid == "mainmenu":
-		return [(_("DVD Player"), main, "dvd_player", 46)]
-	return []
-
 from Plugins.Plugin import PluginDescriptor
 
 def filescan_open(list, session, **kwargs):
@@ -748,5 +743,5 @@
 		)]		
 
 def Plugins(**kwargs):
-	return [PluginDescriptor(name = "DVDPlayer", description = "Play DVDs", where = PluginDescriptor.WHERE_MENU, fnc = menu),
+	return [PluginDescriptor(name = "DVDPlayer", description = "Play DVDs", where = PluginDescriptor.WHERE_PLUGINMENU, fnc = main),
 		 	PluginDescriptor(where = PluginDescriptor.WHERE_FILESCAN, fnc = filescan)]


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/__init__.py	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/__init__.py	2009-08-05 12:26:28.000000000 +0200
@@ -10,25 +10,20 @@
 from Components.config import ConfigYesNo
 from Components.Language import language
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_LANGUAGE
-import os,gettext
-
-__version__ = "1.5rc1"
-
+import os, gettext
+__version__ = "1.5beta3-EVOmod"
 PluginLanguageDomain = "WebInterface"
 PluginLanguagePath = "Extensions/WebInterface/locale"
-
 def localeInit():
-	lang = language.getLanguage()[:2] # getLanguage returns e.g. "fi_FI" for "language_country"
-	os.environ["LANGUAGE"] = lang # Enigma doesn't set this (or LC_ALL, LC_MESSAGES, LANG). gettext needs it!
+	lang = language.getLanguage()[:2]
+	os.environ["LANGUAGE"] = lang
 	print "[WebInterface] set language to ", lang
 	gettext.bindtextdomain(PluginLanguageDomain, resolveFilename(SCOPE_PLUGINS, PluginLanguagePath))
-
 def _(txt):
 	t = gettext.dgettext(PluginLanguageDomain, txt)
 	if t == txt:
 		print "[WebInterface] fallback to default translation for", txt
 		t = gettext.gettext(txt)
 	return t
-
 localeInit()
 language.addCallback(localeInit)


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/plugin.py	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/plugin.py	2009-08-05 12:40:21.000000000 +0200
@@ -1,52 +1,39 @@
-Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/plugin.py,v 1.88 2009-05-08 08:48:34 sreichholf Exp $';
+Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/plugin.py,v 1.87 2009-02-25 21:32:33 ritzmo Exp $';
 from Plugins.Plugin import PluginDescriptor
 from Components.config import config, getConfigListEntry, ConfigSubsection, ConfigInteger, ConfigYesNo, ConfigText, ConfigSelection, ConfigSubList
 from Screens.MessageBox import MessageBox
 from WebIfConfig import WebIfConfigScreen, initConfig, updateConfig
 from WebChilds.Toplevel import Toplevel
-from twisted.internet import reactor, defer, ssl
+from twisted.internet import reactor, defer
 from twisted.internet.error import CannotListenError
 from twisted.web2 import server, channel, http
-from twisted.web2.auth import digest, basic, wrapper
 from twisted.python.log import startLogging
 from twisted.cred.portal import Portal, IRealm
 from twisted.cred import checkers, credentials, error
 from zope.interface import Interface, implements
 from socket import gethostname as socket_gethostname
-from OpenSSL import SSL
-
 from __init__ import _, __version__
-
-DEBUG_TO_FILE = False # PLEASE DONT ENABLE LOGGING BY DEFAULT (OR COMMIT TO PLUGIN CVS)
-
-DEBUGFILE = "/tmp/twisted.log"
-
-#CONFIG INIT
-
-#init the config
+DEBUG_TO_FILE=False
+DEBUGFILE= "/tmp/twisted.log"
 config.plugins.Webinterface = ConfigSubsection()
-config.plugins.Webinterface.enable = ConfigYesNo(default=True)
-config.plugins.Webinterface.allowzapping = ConfigYesNo(default=True)
-config.plugins.Webinterface.includemedia = ConfigYesNo(default=False)
-config.plugins.Webinterface.autowritetimer = ConfigYesNo(default=False)
-config.plugins.Webinterface.loadmovielength = ConfigYesNo(default=False)
-config.plugins.Webinterface.version = ConfigText(__version__) # used to make the versioninfo accessible enigma2-wide, not confgurable in GUI.
+config.plugins.Webinterface.enable = ConfigYesNo(default = False)
+config.plugins.Webinterface.allowzapping = ConfigYesNo(default = True)
+config.plugins.Webinterface.includemedia = ConfigYesNo(default = False)
+config.plugins.Webinterface.autowritetimer = ConfigYesNo(default = False)
+config.plugins.Webinterface.loadmovielength = ConfigYesNo(default = False)
+config.plugins.Webinterface.version = ConfigText(__version__)
 config.plugins.Webinterface.interfacecount = ConfigInteger(0)
 config.plugins.Webinterface.interfaces = ConfigSubList()
 initConfig()
-config.plugins.Webinterface.warningsslsend = ConfigYesNo(default=False)
-
-global running_defered, waiting_shutdown
+global running_defered,waiting_shutdown
 running_defered = []
 waiting_shutdown = 0
-server.VERSION = "Enigma2 WebInterface Server $Revision: 1.88 $".replace("$Revi", "").replace("sion: ", "").replace("$", "")
-
+server.VERSION = "Enigma2 WebInterface Server $Revision: 1.87 $".replace("$Revi","").replace("sion: ","").replace("$","")
 class Closer:
 	counter = 0
-	def __init__(self, session, callback=None):
+	def __init__(self,session, callback = None):
 		self.callback = callback
 		self.session = session
-
 	def stop(self):
 		global running_defered
 		for d in running_defered:
@@ -54,20 +41,18 @@
 			x = d.stopListening()
 			try:
 				x.addCallback(self.isDown)
-				self.counter += 1
+				self.counter +=1
 			except AttributeError:
 				pass
 		running_defered = []
-		if self.counter < 1:
+		if self.counter <1:
 			if self.callback is not None:
 				self.callback(self.session)
-
-	def isDown(self, s):
-		self.counter -= 1
-		if self.counter < 1:
+	def isDown(self,s):
+		self.counter-=1
+		if self.counter <1:
 			if self.callback is not None:
 				self.callback(self.session)
-
 def restartWebserver(session):
 	try:
 		del session.mediaplayer
@@ -76,31 +61,26 @@
 		pass
 	except AttributeError:
 		pass
-
 	global running_defered
-	if len(running_defered) > 0:
-		Closer(session, startWebserver).stop()
+	if len(running_defered) >0:
+		Closer(session,startWebserver).stop()
 	else:
 		startWebserver(session)
-
 def startWebserver(session):
 	global running_defered
 	session.mediaplayer = None
 	session.messageboxanswer = None
-
 	if config.plugins.Webinterface.enable.value is not True:
 		print "not starting Werbinterface"
 		return False
 	if DEBUG_TO_FILE:
 		print "start twisted logfile, writing to %s" % DEBUGFILE
-		startLogging(open(DEBUGFILE, 'w'))
-
+		startLogging(open(DEBUGFILE,'w'))
 	for c in config.plugins.Webinterface.interfaces:
 		if c.disabled.value is False:
-			startServerInstance(session, c.address.value, c.port.value, c.useauth.value, c.usessl.value)
+			startServerInstance(session,c.address.value,c.port.value)
 		else:
-			print "[Webinterface] not starting disabled interface on %s:%i" % (c.address.value, c.port.value)
-
+			print "[Webinterface] not starting disabled interface on %s:%i"%(c.address.value,c.port.value)
 def stopWebserver(session):
 	try:
 		del session.mediaplayer
@@ -109,290 +89,53 @@
 		pass
 	except AttributeError:
 		pass
-
 	global running_defered
 	if len(running_defered) > 0:
 		Closer(session).stop()
-
-def startServerInstance(session, ipaddress, port, useauth=False, usessl=False):
+def startServerInstance(session,ipaddress,port):
 	try:
 		toplevel = Toplevel(session)
-		if useauth:
-			portal = Portal(HTTPAuthRealm())
-			portal.registerChecker(PasswordDatabase())
-			root = wrapper.HTTPAuthResource(toplevel, (basic.BasicCredentialFactory(socket_gethostname()),), portal, (IHTTPUser,))
-			site = server.Site(root)
-		else:
-			site = server.Site(toplevel)
+		site = server.Site(toplevel)
 		try:
-			if usessl:
-				ctx = ssl.DefaultOpenSSLContextFactory('/etc/enigma2/server.pem', '/etc/enigma2/cacert.pem', sslmethod=SSL.SSLv23_METHOD)
-				d = reactor.listenSSL(port, channel.HTTPFactory(site), ctx, interface=ipaddress)
-			else:
-				d = reactor.listenTCP(port, channel.HTTPFactory(site), interface=ipaddress)
+			d = reactor.listenTCP(port, channel.HTTPFactory(site),interface=ipaddress)
 			running_defered.append(d)
-			print "[Webinterface] started on %s:%i" % (ipaddress, port), "auth=", useauth, "ssl=", usessl
+			print "[Webinterface] started on %s:%i"%(ipaddress,port)
 		except CannotListenError, e:
-			print "[Webinterface] Could not Listen on %s:%i!" % (ipaddress, port)
-			session.open(MessageBox, 'Could not Listen on %s:%i!\n\n%s' % (ipaddress, port, str(e)), MessageBox.TYPE_ERROR)
-	except Exception, e:
-		print "[Webinterface] starting FAILED on %s:%i!" % (ipaddress, port), e
-		session.open(MessageBox, 'starting FAILED on %s:%i!\n\n%s' % (ipaddress, port, str(e)), MessageBox.TYPE_ERROR)
-
-class PasswordDatabase:
-	"""
-		this checks webiflogins agains /etc/passwd
-	"""
-	passwordfile = "/etc/passwd"
-	implements(checkers.ICredentialsChecker)
-	credentialInterfaces = (credentials.IUsernamePassword, credentials.IUsernameHashedPassword)
-
-	def _cbPasswordMatch(self, matched, username):
-		if matched:
-			return username
-		else:
-			return failure.Failure(error.UnauthorizedLogin())
-
-	def requestAvatarId(self, credentials):
-		if check_passwd(credentials.username, credentials.password, self.passwordfile) is True:
-			return defer.maybeDeferred(credentials.checkPassword, credentials.password).addCallback(self._cbPasswordMatch, str(credentials.username))
-		else:
-			return defer.fail(error.UnauthorizedLogin())
-
+			print "[Webinterface] Could not Listen on %s:%i!"%(ipaddress,port)
+			session.open(MessageBox,'Could not Listen on %s:%i!\n\n%s'%(ipaddress,port,str(e)), MessageBox.TYPE_ERROR)
+	except Exception,e:
+		print "[Webinterface] starting FAILED on %s:%i!"%(ipaddress,port),e
+		session.open(MessageBox,'starting FAILED on %s:%i!\n\n%s'%(ipaddress,port,str(e)), MessageBox.TYPE_ERROR)
 class IHTTPUser(Interface):
 	pass
-
 class HTTPUser(object):
 	implements(IHTTPUser)
 	username = None
-	def __init__(self, username):
+	def __init__(self,username):
 		self.username = username
-
-class HTTPAuthRealm(object):
-	implements(IRealm)
-	def requestAvatar(self, avatarId, mind, *interfaces):
-		if IHTTPUser in interfaces:
-			return IHTTPUser, HTTPUser(avatarId)
-		raise NotImplementedError("Only IHTTPUser interface is supported")
-
-from hashlib import md5 as md5_new
-from crypt import crypt
-
-DES_SALT = list('./0123456789' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz')
-def getpwnam(name, pwfile=None):
-	"""Return pasword database entry for the given user name.
-
-	Example from the Python Library Reference.
-	"""
-
-	if not pwfile:
-		pwfile = '/etc/passwd'
-
-	f = open(pwfile)
-	while 1:
-		line = f.readline()
-		if not line:
-			f.close()
-			raise KeyError, name
-		entry = tuple(line.strip().split(':', 6))
-		if entry[0] == name:
-			f.close()
-			return entry
-
-def passcrypt(passwd, salt=None, method='des', magic='$1$'):
-	"""Encrypt a string according to rules in crypt(3)."""
-	if method.lower() == 'des':
-		return crypt(passwd, salt)
-	elif method.lower() == 'md5':
-		return passcrypt_md5(passwd, salt, magic)
-	elif method.lower() == 'clear':
-		return passwd
-
-def check_passwd(name, passwd, pwfile=None):
-	"""Validate given user, passwd pair against password database."""
-
-	if not pwfile or type(pwfile) == type(''):
-		getuser = lambda x, pwfile = pwfile: getpwnam(x, pwfile)[1]
-	else:
-		getuser = pwfile.get_passwd
-
-	try:
-		enc_passwd = getuser(name)
-	except (KeyError, IOError):
-		return 0
-	if not enc_passwd:
-		return 0
-	elif len(enc_passwd) >= 3 and enc_passwd[:3] == '$1$':
-		salt = enc_passwd[3:enc_passwd.find('$', 3)]
-		return enc_passwd == passcrypt(passwd, salt, 'md5')
-	else:
-		return enc_passwd == passcrypt(passwd, enc_passwd[:2])
-
-def _to64(v, n):
-	r = ''
-	while (n - 1 >= 0):
-		r = r + DES_SALT[v & 0x3F]
-		v = v >> 6
-		n = n - 1
-	return r
-
-def passcrypt_md5(passwd, salt=None, magic='$1$'):
-	"""Encrypt passwd with MD5 algorithm."""
-
-	if not salt:
-		pass
-	elif salt[:len(magic)] == magic:
-		# remove magic from salt if present
-		salt = salt[len(magic):]
-
-	# salt only goes up to first '$'
-	salt = salt.split('$')[0]
-	# limit length of salt to 8
-	salt = salt[:8]
-
-	ctx = md5_new(passwd)
-	ctx.update(magic)
-	ctx.update(salt)
-
-	ctx1 = md5_new(passwd)
-	ctx1.update(salt)
-	ctx1.update(passwd)
-
-	final = ctx1.digest()
-
-	for i in range(len(passwd), 0 , -16):
-		if i > 16:
-			ctx.update(final)
-		else:
-			ctx.update(final[:i])
-
-	i = len(passwd)
-	while i:
-		if i & 1:
-			ctx.update('\0')
-		else:
-			ctx.update(passwd[:1])
-		i = i >> 1
-	final = ctx.digest()
-
-	for i in range(1000):
-		ctx1 = md5_new()
-		if i & 1:
-			ctx1.update(passwd)
-		else:
-			ctx1.update(final)
-		if i % 3: ctx1.update(salt)
-		if i % 7: ctx1.update(passwd)
-		if i & 1:
-			ctx1.update(final)
-		else:
-			ctx1.update(passwd)
-		final = ctx1.digest()
-
-	rv = magic + salt + '$'
-	final = map(ord, final)
-	l = (final[0] << 16) + (final[6] << 8) + final[12]
-	rv = rv + _to64(l, 4)
-	l = (final[1] << 16) + (final[7] << 8) + final[13]
-	rv = rv + _to64(l, 4)
-	l = (final[2] << 16) + (final[8] << 8) + final[14]
-	rv = rv + _to64(l, 4)
-	l = (final[3] << 16) + (final[9] << 8) + final[15]
-	rv = rv + _to64(l, 4)
-	l = (final[4] << 16) + (final[10] << 8) + final[5]
-	rv = rv + _to64(l, 4)
-	l = final[11]
-	rv = rv + _to64(l, 2)
-
-	return rv
-
-#### stuff for SSL Support
-def makeSSLContext(myKey, trustedCA):
-	 '''Returns an ssl Context Object
-	@param myKey a pem formated key and certifcate with for my current host
-			the other end of this connection must have the cert from the CA
-			that signed this key
-	@param trustedCA a pem formated certificat from a CA you trust
-			you will only allow connections from clients signed by this CA
-			and you will only allow connections to a server signed by this CA
-	 '''
-
-	 # our goal in here is to make a SSLContext object to pass to connectSSL
-	 # or listenSSL
-
-	 # Why these functioins... Not sure...
-	 fd = open(myKey, 'r')
-	 ss = fd.read()
-	 theCert = ssl.PrivateCertificate.loadPEM(ss)
-	 fd.close()
-	 fd = open(trustedCA, 'r')
-	 theCA = ssl.Certificate.loadPEM(fd.read())
-	 fd.close()
-	 #ctx = theCert.options(theCA)
-	 ctx = theCert.options()
-
-	 # Now the options you can set look like Standard OpenSSL Library options
-
-	 # The SSL protocol to use, one of SSLv23_METHOD, SSLv2_METHOD,
-	 # SSLv3_METHOD, TLSv1_METHOD. Defaults to TLSv1_METHOD.
-	 ctx.method = ssl.SSL.TLSv1_METHOD
-
-	 # If True, verify certificates received from the peer and fail
-	 # the handshake if verification fails. Otherwise, allow anonymous
-	 # sessions and sessions with certificates which fail validation.
-	 ctx.verify = True
-
-	 # Depth in certificate chain down to which to verify.
-	 ctx.verifyDepth = 1
-
-	 # If True, do not allow anonymous sessions.
-	 ctx.requireCertification = True
-
-	 # If True, do not re-verify the certificate on session resumption.
-	 ctx.verifyOnce = True
-
-	 # If True, generate a new key whenever ephemeral DH parameters are used
-	 # to prevent small subgroup attacks.
-	 ctx.enableSingleUseKeys = True
-
-	 # If True, set a session ID on each context. This allows a shortened
-	 # handshake to be used when a known client reconnects.
-	 ctx.enableSessions = True
-
-	 # If True, enable various non-spec protocol fixes for broken
-	 # SSL implementations.
-	 ctx.fixBrokenPeers = False
-
-	 return ctx
-
 global_session = None
-
 def sessionstart(reason, session):
 	global global_session
 	global_session = session
-
+	autostart(True)
 def autostart(reason, **kwargs):
 	if reason is True:
 		try:
 			updateConfig()
 			startWebserver(global_session)
-		except ImportError, e:
+		except ImportError,e:
 			print "[Webinterface] twisted not available, not starting web services", e
 	elif reason is False:
 		stopWebserver(global_session)
-
 def openconfig(session, **kwargs):
 	session.openWithCallback(configCB, WebIfConfigScreen)
-
 def configCB(result, session):
 	if result is True:
 		print "[WebIf] config changed"
 		restartWebserver(session)
 	else:
 		print "[WebIf] config not changed"
-
 def Plugins(**kwargs):
-	return [PluginDescriptor(where=[PluginDescriptor.WHERE_SESSIONSTART], fnc=sessionstart),
-			PluginDescriptor(where=[PluginDescriptor.WHERE_NETWORKCONFIG_READ], fnc=autostart),
+	return [PluginDescriptor(where = [PluginDescriptor.WHERE_SESSIONSTART], fnc = sessionstart),
 			PluginDescriptor(name=_("Webinterface"), description=_("Configuration for the Webinterface"),
-							where=[PluginDescriptor.WHERE_PLUGINMENU], icon="plugin.png", fnc=openconfig)]
+							where = [PluginDescriptor.WHERE_PLUGINMENU], icon="plugin.png",fnc = openconfig)]


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/webif.py	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/webif.py	2009-09-07 15:35:53.772831000 +0200
@@ -1,42 +1,248 @@
 # -*- coding: UTF-8 -*-
-Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/webif.py,v 1.104 2009-05-10 00:26:57 sreichholf Exp $';
-
-# things to improve:
-#	- nicer code
-#	- screens need to be defined somehow else.
-#	  I don't know how, yet. Probably each in an own file.
-#	- better error handling
-#	- use namespace parser
-
+Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/webif.py,v 1.95 2009-02-27 17:42:50 sreichholf Exp $';
+from enigma import eServiceReference
+from Screens.Screen import Screen
+from Screens.ChannelSelection import service_types_tv, service_types_radio
 from Tools.Import import my_import
-
 from Components.Sources.Source import ObsoleteSource
+from Components.Sources.Clock import Clock
+from Components.Sources.ServiceList import ServiceList
+from WebComponents.Sources.ServiceListRecursive import ServiceListRecursive
+from WebComponents.Sources.Volume import Volume
+from WebComponents.Sources.EPG import EPG
+from WebComponents.Sources.Timer import Timer
+from WebComponents.Sources.Movie import Movie
+from WebComponents.Sources.Message import Message
+from WebComponents.Sources.PowerState import PowerState
+from WebComponents.Sources.RemoteControl import RemoteControl
+from WebComponents.Sources.Settings import Settings
+from WebComponents.Sources.SubServices import SubServices
+from WebComponents.Sources.ParentControl import ParentControl
+from WebComponents.Sources.About import About
+from WebComponents.Sources.RequestData import RequestData
+from WebComponents.Sources.AudioTracks import AudioTracks
+from WebComponents.Sources.WAPfunctions import WAPfunctions
+from WebComponents.Sources.MP import MP
+from WebComponents.Sources.ServiceListReload import ServiceListReload
+from WebComponents.Sources.AT import AT
+from WebComponents.Sources.CurrentService import CurrentService
+from WebComponents.Sources.LocationsAndTags import LocationsAndTags
+from Components.Sources.FrontendStatus import FrontendStatus
 from Components.Converter.Converter import Converter
 from Components.Element import Element
-
 from xml.sax import make_parser
 from xml.sax.handler import ContentHandler, feature_namespaces
 from xml.sax.saxutils import escape as escape_xml
 from twisted.python import util
 from urllib2 import quote
-
-#DO NOT REMOVE THIS IMPORT
-#It IS used (dynamically)
-from WebScreens import *
-#DO NOT REMOVE THIS IMPORT
-		
-# implements the 'render'-call.
-# this will act as a downstream_element, like a renderer.
+class WebScreen(Screen):
+	def __init__(self, session, request):
+		Screen.__init__(self, session)
+		self.stand_alone = True
+		self.request = request
+		self.instance = None
+class DummyWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+class UpdateWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["CurrentTime"] = Clock()
+class MessageWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["Message"] = Message(session,func = Message.PRINT)
+		self["GetAnswer"] = Message(session,func = Message.ANSWER)
+class ServiceListReloadWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["ServiceListReload"] = ServiceListReload(session)
+class AudioWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["AudioTracks"] = AudioTracks(session, func=AudioTracks.GET)
+		self["SelectAudioTrack"] = AudioTracks(session, func=AudioTracks.SET)
+class AboutWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["About"] = About(session)
+class VolumeWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["Volume"] = Volume(session)
+class SettingsWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["Settings"] = Settings(session)
+class SubServiceWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["SubServices"] = SubServices(session)
+class ServiceWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		fav = eServiceReference(service_types_tv + ' FROM BOUQUET "bouquets.tv" ORDER BY bouquet')
+		self["SwitchService"] = ServiceList(fav, command_func = self.zapTo, validate_commands=False)
+		self["ServiceList"] = ServiceList(fav, command_func = self.getServiceList, validate_commands=False)
+		self["ServiceListRecursive"] = ServiceListRecursive(session, func=ServiceListRecursive.FETCH)
+		self["localip"] = RequestData(request,what=RequestData.HOST)
+	def getServiceList(self, sRef):
+		self["ServiceList"].root = sRef
+	def zapTo(self, reftozap):
+		from Components.config import config
+		pc = config.ParentalControl.configured.value
+		if pc:
+			config.ParentalControl.configured.value = False
+		if config.plugins.Webinterface.allowzapping.value:
+			self.session.nav.playService(reftozap)
+		if pc:
+			config.ParentalControl.configured.value = pc
+		""
+class LocationsAndTagsWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["CurrentLocation"] = LocationsAndTags(session,LocationsAndTags.CURRLOCATION)
+		self["Locations"] = LocationsAndTags(session,LocationsAndTags.LOCATIONS)
+		self["Tags"] = LocationsAndTags(session,LocationsAndTags.TAGS)
+class EPGWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["EPGTITLE"] = EPG(session,func=EPG.TITLE)
+		self["EPGSERVICE"] = EPG(session,func=EPG.SERVICE)
+		self["EPGBOUQUETNOW"] = EPG(session,func=EPG.BOUQUETNOW)
+		self["EPGBOUQUETNEXT"] = EPG(session,func=EPG.BOUQUETNEXT)
+		self["EPGSERVICENOW"] = EPG(session,func=EPG.SERVICENOW)
+		self["EPGSERVICENEXT"] = EPG(session,func=EPG.SERVICENEXT)
+		self["EPGBOUQUET"] = EPG(session,func=EPG.BOUQUET)
+	def getServiceList(self, sRef):
+		self["ServiceList"].root = sRef
+class MovieWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		from Components.MovieList import MovieList
+		from Tools.Directories import resolveFilename,SCOPE_HDD
+		movielist = MovieList(eServiceReference("2:0:1:0:0:0:0:0:0:0:" + resolveFilename(SCOPE_HDD)))
+		self["MovieList"] = Movie(session,movielist,func = Movie.LIST)
+		self["MovieFileDel"] = Movie(session,movielist,func = Movie.DEL)
+		self["MovieTags"] = Movie(session,movielist,func = Movie.TAGS)
+		self["localip"] = RequestData(request,what=RequestData.HOST)
+class MediaPlayerWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["FileList"] = MP(session,func = MP.LIST)
+		self["PlayFile"] = MP(session,func = MP.PLAY)
+		self["Command"] = MP(session,func = MP.COMMAND)
+		self["WritePlaylist"] = MP(session,func = MP.WRITEPLAYLIST)
+class AutoTimerWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["AutoTimerList"] = AT(session,func = AT.LIST)
+		self["AutoTimerWrite"] = AT(session,func = AT.WRITE)
+class TimerWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["TimerList"] = Timer(session,func = Timer.LIST)
+		self["TimerAddEventID"] = Timer(session,func = Timer.ADDBYID)
+		self["TimerAdd"] = Timer(session,func = Timer.ADD)
+		self["TimerDel"] = Timer(session,func = Timer.DEL)
+		self["TimerChange"] = Timer(session,func = Timer.CHANGE)
+		self["TimerListWrite"] = Timer(session,func = Timer.WRITE)
+		self["TVBrowser"] = Timer(session,func = Timer.TVBROWSER)
+		self["RecordNow"] = Timer(session,func = Timer.RECNOW)
+class RemoteWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["RemoteControl"] = RemoteControl(session)
+class PowerWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["PowerState"] = PowerState(session)
+class ParentControlWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["ParentControlList"] = ParentControl(session)
+class WAPWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["WAPFillOptionListYear"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListDay"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListMonth"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListShour"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListSmin"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListEhour"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListEmin"] = WAPfunctions(session,func = WAPfunctions.LISTTIME)
+		self["WAPFillOptionListRecord"] = WAPfunctions(session,func = WAPfunctions.OPTIONLIST)
+		self["WAPFillOptionListAfterEvent"] = WAPfunctions(session,func = WAPfunctions.OPTIONLIST)
+		self["WAPFillValueName"] = WAPfunctions(session,func = WAPfunctions.FILLVALUE)
+		self["WAPFillValueDescr"] = WAPfunctions(session,func = WAPfunctions.FILLVALUE)
+		self["WAPFillLocation"] = WAPfunctions(session,func = WAPfunctions.LOCATIONLIST)
+		self["WAPFillTags"] = WAPfunctions(session,func = WAPfunctions.TAGLIST)
+		self["WAPFillOptionListRepeated"] = WAPfunctions(session,func = WAPfunctions.REPEATED)
+		self["WAPServiceList"] = WAPfunctions(session, func = WAPfunctions.SERVICELIST)
+		self["WAPdeleteOldOnSave"] = WAPfunctions(session,func = WAPfunctions.DELETEOLD)
+class StreamingWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		from Components.Sources.StreamService import StreamService
+		self["StreamService"] = StreamService(self.session.nav)
+class M3UStreamingWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		from Components.Sources.StaticText import StaticText
+		from Components.Sources.Config import Config
+		from Components.config import config
+		self["ref"] = StaticText()
+		self["localip"] = RequestData(request,what=RequestData.HOST)
+class M3UStreamingCurrentServiceWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		self["CurrentService"] = CurrentService(session)
+		self["localip"] = RequestData(request,what=RequestData.HOST)
+class TsM3U(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		from Components.Sources.StaticText import StaticText
+		from Components.Sources.Config import Config
+		from Components.config import config
+		self["file"] = StaticText()
+		self["localip"] = RequestData(request,what=RequestData.HOST)
+class RestartWebScreen(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		import plugin
+		plugin.restartWebserver(session)
+class GetPid(WebScreen):
+	def __init__(self, session, request):
+		 WebScreen.__init__(self, session, request)
+		 from Components.Sources.StaticText import StaticText
+		 from enigma import iServiceInformation
+		 pids = self.session.nav.getCurrentService()
+		 if pids is not None:
+		 	pidinfo = pids.info()
+		 	VPID = hex(pidinfo.getInfo(iServiceInformation.sVideoPID))
+			APID = hex(pidinfo.getInfo(iServiceInformation.sAudioPID))
+			PPID = hex(pidinfo.getInfo(iServiceInformation.sPMTPID))
+			self["pids"] = StaticText("%s,%s,%s"%(PPID.lstrip("0x"),VPID.lstrip("0x"),APID.lstrip("0x")))
+		 else:
+			self["pids"] = StaticText("0x,0x,0x")
+		 self["localip"] = RequestData(request,what=RequestData.HOST)
+class About2(WebScreen):
+	def __init__(self, session, request):
+		WebScreen.__init__(self, session, request)
+		from WebComponents.Sources.Network import Network
+		from WebComponents.Sources.Hdd import Hdd
+		from WebComponents.Sources.Frontend import Frontend
+		self["Network"] = Network()
+		self["Hdd"] = Hdd()
+		self["Frontends"] = Frontend()
 class OneTimeElement(Element):
 	def __init__(self, id):
 		Element.__init__(self)
 		self.source_id = id
-
-	# CHECKME: is this ok performance-wise?
 	def handleCommand(self, args):
-		if self.source_id.find(",") >= 0:
+		if self.source_id.find(",") >=0:
 			paramlist = self.source_id.split(",")
-			list = {}
+			list={}
 			for key in paramlist:
 				arg = args.get(key, [])
 				if len(arg) == 0:
@@ -49,171 +255,80 @@
 		else:
 			for c in args.get(self.source_id, []):
 				self.source.handleCommand(c)
-
 	def render(self, stream):
 		t = self.source.getHTML(self.source_id)
 		stream.write(t)
-
 	def execBegin(self):
 		self.suspended = False
-
 	def execEnd(self):
 		self.suspended = True
-
 	def onShow(self):
 		pass
-
 	def onHide(self):
 		pass
-
 	def destroy(self):
 		pass
-
 class MacroElement(OneTimeElement):
 	def __init__(self, id, macro_dict, macro_name):
 		OneTimeElement.__init__(self, id)
 		self.macro_dict = macro_dict
 		self.macro_name = macro_name
-
 	def render(self, stream):
 		self.macro_dict[self.macro_name] = self.source.getHTML(self.source_id)
-
 class StreamingElement(OneTimeElement):
 	def __init__(self, id):
 		OneTimeElement.__init__(self, id)
 		self.stream = None
-
 	def changed(self, what):
 		if self.stream:
 			self.render(self.stream)
-
 	def setStream(self, stream):
 		self.stream = stream
-
-# a to-be-filled list item
 class ListItem:
 	def __init__(self, name, filternum):
 		self.name = name
 		self.filternum = filternum
-
 class ListMacroItem:
 	def __init__(self, macrodict, macroname):
 		self.macrodict = macrodict
 		self.macroname = macroname
-
 class TextToHTML(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
-		return self.source.text # encode & etc. here!
-
+		return self.source.text
 class TextToXML(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
 		return escape_xml(self.source.text).replace("\x19", "").replace("\x1c", "").replace("\x1e", "")
-
 class TextToURL(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
-		return self.source.text.replace(" ", "%20")
-
+		return self.source.text.replace(" ","%20")
 class ReturnEmptyXML(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
 		return "<rootElement></rootElement>"
-
-# a null-output. Useful if you only want to issue a command.
 class Null(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
 		return ""
-
 class JavascriptUpdate(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-
 	def getHTML(self, id):
-		# 3c5x9, added parent. , this is because the ie loads this in a iframe. an the set is in index.html.xml
-		#		 all other will replace this in JS
-		return '<script>parent.set("%s", "%s");</script>\n' % (id, self.source.text.replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"').replace('\xb0', '&deg;'))
-
-# the performant 'one-dimensonial listfiller' engine (podlfe)
-class SimpleListFiller(Converter):
-	def __init__(self, arg):
-		Converter.__init__(self, arg)
-		
-	def getText(self):
-		l = self.source.simplelist
-		conv_args = self.converter_arguments		
-		
-		list = [ ]
-		for element in conv_args:
-			if isinstance(element, basestring):
-				list.append((element, None))
-			elif isinstance(element, ListItem):
-				list.append((element, element.filternum))
-			elif isinstance(element, ListMacroItem):
-				list.append(element.macrodict[element.macroname], None)
-			else:
-				raise Exception("neither string, ListItem nor ListMacroItem")
-			
-		strlist = [ ]
-		append = strlist.append
-		for item in l:
-			if item is None:
-				item = ""
-				
-			for (element, filternum) in list:
-				if not filternum:
-					append(element)
-				elif filternum == 2:
-					append(str(item).replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"'))
-				elif filternum == 3:					
-					append(escape_xml(str(item)))
-				elif filternum == 4:
-					append(str(item).replace("%", "%25").replace("+", "%2B").replace('&', '%26').replace('?', '%3f').replace(' ', '+'))
-				elif filternum == 5:
-					append(quote(str(item)))
-				elif filternum == 6:
-					time = parseint(item) or 0
-					t = localtime(time)
-					append("%02d:%02d" % (t.tm_hour, t.tm_min))
-				elif filternum == 7:
-					time = parseint(item) or 0
-					t = localtime(time)
-					append("%d min" % (time / 60))
-				else:
-					append(str(item))
-		# (this will be done in c++ later!)
-
-		return ''.join(strlist)		
-	
-	text = property(getText)
-		
-				
-
-# the performant 'listfiller'-engine (plfe)
+		return '<script>parent.set("%s", "%s");</script>\n'%(id, self.source.text.replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"').replace('\xb0', '&deg;'))
 class ListFiller(Converter):
 	def __init__(self, arg):
 		Converter.__init__(self, arg)
-#		print "ListFiller-arg: ",arg
-
 	def getText(self):
 		l = self.source.list
 		lut = self.source.lut
 		conv_args = self.converter_arguments
-
-		# now build a ["string", 1, "string", 2]-styled list, with indices into the
-		# list to avoid lookup of item name for each entry
 		lutlist = [ ]
 		for element in conv_args:
 			if isinstance(element, basestring):
@@ -224,50 +339,24 @@
 				lutlist.append((element.macrodict[element.macroname], None))
 			else:
 				raise Exception("neither string, ListItem nor ListMacroItem")
-
-		# now, for the huge list, do:
 		strlist = [ ]
 		append = strlist.append
 		for item in l:
-			for (element, filternum) in lutlist:			
-				#None becomes ""
-				curitem = ""
-				if filternum:
-					curitem = item[element]
-					if curitem is None:
-						curitem = ""
-				else:
-					if element is None:
-						element = ""
-						
+			for (element, filternum) in lutlist:
 				if not filternum:
 					append(element)
 				elif filternum == 2:
-					append(str(curitem).replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"'))
+					append(str(item[element]).replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"'))
 				elif filternum == 3:
-					append(escape_xml(str(curitem)))
+					append(escape_xml(str(item[element])))
 				elif filternum == 4:
-					append(str(curitem).replace("%", "%25").replace("+", "%2B").replace('&', '%26').replace('?', '%3f').replace(' ', '+'))
+					append(str(item[element]).replace("%", "%25").replace("+", "%2B").replace('&', '%26').replace('?', '%3f').replace(' ', '+'))
 				elif filternum == 5:
-					append(quote(str(curitem)))
-				elif filternum == 6:
-					from time import localtime
-					time = int(float(curitem)) or 0
-					t = localtime(time)
-					append("%02d:%02d" % (t.tm_hour, t.tm_min))
-				elif filternum == 7:
-					from time import localtime
-					time = int(float(curitem)) or 0
-					t = localtime(time)
-					append("%d min" % (time / 60))					
+					append(quote(str(item[element])))
 				else:
-					append(str(curitem))
-		# (this will be done in c++ later!)
-
+					append(str(item[element]))
 		return ''.join(strlist)
-
 	text = property(getText)
-
 class webifHandler(ContentHandler):
 	def __init__(self, session, request):
 		self.res = [ ]
@@ -277,12 +366,9 @@
 		self.screens = [ ]
 		self.request = request
 		self.macros = { }
-
 	def start_element(self, attrs):
 		scr = self.screen
-
 		wsource = attrs["source"]
-
 		path = wsource.split('.')
 		while len(path) > 1:
 			scr = self.screen.getRelatedScreen(path[0])
@@ -290,28 +376,20 @@
 				print "[webif.py] Parent Screen not found!"
 				print wsource
 			path = path[1:]
-
 		source = scr.get(path[0])
-
 		if isinstance(source, ObsoleteSource):
-			# however, if we found an "obsolete source", issue warning, and resolve the real source.
 			print "WARNING: WEBIF '%s' USES OBSOLETE SOURCE '%s', USE '%s' INSTEAD!" % (name, wsource, source.new_source)
 			print "OBSOLETE SOURCE WILL BE REMOVED %s, PLEASE UPDATE!" % (source.removal_date)
 			if source.description:
 				print source.description
-
 			wsource = source.new_source
 		else:
 			pass
-			# otherwise, use that source.
-
 		self.source = source
 		self.source_id = str(attrs.get("id", wsource))
 		self.is_streaming = "streaming" in attrs
 		self.macro_name = attrs.get("macro") or None
-
 	def end_element(self):
-		# instatiate either a StreamingElement or a OneTimeElement, depending on what's required.
 		if not self.is_streaming:
 			if self.macro_name is None:
 				c = OneTimeElement(self.source_id)
@@ -320,17 +398,13 @@
 		else:
 			assert self.macro_name is None
 			c = StreamingElement(self.source_id)
-
 		c.connect(self.source)
 		self.res.append(c)
 		self.screen.renderer.append(c)
 		del self.source
-
 	def start_convert(self, attrs):
 		ctype = attrs["type"]
-
-		# TODO: we need something better here
-		if ctype[:4] == "web:": # for now
+		if ctype[:4] == "web:":
 			self.converter = eval(ctype[4:])
 		else:
 			try:
@@ -338,7 +412,6 @@
 			except ImportError:
 				self.converter = my_import('.'.join(["Plugins", "Extensions", "WebInterface", "WebComponents", "Converter", ctype])).__dict__.get(ctype)
 		self.sub = [ ]
-
 	def end_convert(self):
 		if len(self.sub) == 1:
 			self.sub = self.sub[0]
@@ -346,36 +419,31 @@
 		c.connect(self.source)
 		self.source = c
 		del self.sub
-
 	def parse_item(self, attrs):
 		if "name" in attrs:
-			filter = {"": 1, "javascript_escape": 2, "xml": 3, "uri": 4, "urlencode": 5, "time": 6, "minutes": 7}[attrs.get("filter", "")]
+			filter = {"": 1, "javascript_escape": 2, "xml": 3, "uri": 4, "urlencode": 5}[attrs.get("filter", "")]
 			self.sub.append(ListItem(attrs["name"], filter))
 		else:
 			assert "macro" in attrs, "e2:item must have a name= or macro= attribute!"
 			self.sub.append(ListMacroItem(self.macros, attrs["macro"]))
-
 	def startElement(self, name, attrs):
 		if name == "e2:screen":
-			self.screen = eval(attrs["name"])(self.session, self.request) # fixme
+			self.screen = eval(attrs["name"])(self.session,self.request)
 			self.screens.append(self.screen)
 			return
-
 		if name[:3] == "e2:":
 			self.mode += 1
-
-		tag = [' %s="%s"' % (key, val) for (key, val) in attrs.items()]
+		tag = [' %s="%s"' %(key,val) for (key, val) in attrs.items()]
 		tag.insert(0, name)
 		tag.insert(0, '<')
 		tag.append('>')
 		tag = ''.join(tag)#.encode('utf-8')
-
 		if self.mode == 0:
 			self.res.append(tag)
-		elif self.mode == 1: # expect "<e2:element>"
+		elif self.mode == 1:
 			assert name == "e2:element", "found %s instead of e2:element" % name
 			self.start_element(attrs)
-		elif self.mode == 2: # expect "<e2:convert>"
+		elif self.mode == 2:
 			if name[:3] == "e2:":
 				assert name == "e2:convert"
 				self.start_convert(attrs)
@@ -383,73 +451,52 @@
 				self.sub.append(tag)
 		elif self.mode == 3:
 			assert name == "e2:item", "found %s instead of e2:item!" % name
-
 			self.parse_item(attrs)
-
 	def endElement(self, name):
 		if name == "e2:screen":
 			self.screen = None
 			return
-
 		tag = "</" + name + ">"
 		if self.mode == 0:
 			self.res.append(tag)
 		elif self.mode == 2 and name[:3] != "e2:":
 			self.sub.append(tag)
-		elif self.mode == 2: # closed 'convert' -> sub
+		elif self.mode == 2:
 			self.end_convert()
-		elif self.mode == 1: # closed 'element'
+		elif self.mode == 1:
 			self.end_element()
 		if name[:3] == "e2:":
 			self.mode -= 1
-
 	def processingInstruction(self, target, data):
 		self.res.append('<?' + target + ' ' + data + '>')
-
 	def characters(self, ch):
 		ch = ch.encode('utf-8')
 		if self.mode == 0:
 			self.res.append(ch)
 		elif self.mode == 2:
 			self.sub.append(ch)
-
 	def startEntity(self, name):
 		self.res.append('&' + name + ';');
-
 	def execBegin(self):
 		for screen in self.screens:
 			screen.execBegin()
-
 	def cleanup(self):
 		print "screen cleanup!"
 		for screen in self.screens:
 			screen.execEnd()
 			screen.doClose()
 		self.screens = [ ]
-
 def renderPage(stream, path, req, session):
-	# read in the template, create required screens
-	# we don't have persistense yet.
-	# if we had, this first part would only be done once.
-	handler = webifHandler(session, req)
+	handler = webifHandler(session,req)
 	parser = make_parser()
 	parser.setFeature(feature_namespaces, 0)
 	parser.setContentHandler(handler)
 	parser.parse(open(util.sibpath(__file__, path)))
-
-	# by default, we have non-streaming pages
 	finish = True
-
-	# first, apply "commands" (aka. URL argument)
 	for x in handler.res:
 		if isinstance(x, Element):
 			x.handleCommand(req.args)
-
 	handler.execBegin()
-
-	# now, we have a list with static texts mixed
-	# with non-static Elements.
-	# flatten this list, write into the stream.
 	for x in handler.res:
 		if isinstance(x, Element):
 			if isinstance(x, StreamingElement):
@@ -458,28 +505,15 @@
 			x.render(stream)
 		else:
 			stream.write(str(x))
-
 	def ping(s):
 		from twisted.internet import reactor
 		s.write("\n");
 		reactor.callLater(3, ping, s)
-
-	# if we met a "StreamingElement", there is at least one
-	# element which wants to output data more than once,
-	# i.e. on host-originated changes.
-	# in this case, don't finish yet, don't cleanup yet,
-	# but instead do that when the client disconnects.
 	if finish:
 		streamFinish(handler, stream)
 	else:
-		# ok.
-		# you *need* something which constantly sends something in a regular interval,
-		# in order to detect disconnected clients.
-		# i agree that this "ping" sucks terrible, so better be sure to have something
-		# similar. A "CurrentTime" is fine. Or anything that creates *some* output.
 		ping(stream)
 		stream.closed_callback = lambda : streamFinish(handler, stream)
-
 def streamFinish(handler, stream):
 	handler.cleanup()
 	stream.finish()


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/WebIfConfig.py	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/WebIfConfig.py	2009-08-05 12:30:38.000000000 +0200
@@ -1,49 +1,55 @@
-Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/WebIfConfig.py,v 1.38 2009-05-08 08:48:34 sreichholf Exp $';
-
+Version = '$Header: /cvsroot/enigma2-plugins/enigma2-plugins/webinterface/src/WebIfConfig.py,v 1.37 2009-02-26 19:19:11 sreichholf Exp $';
 from __init__ import _
-
-from enigma import eListboxPythonMultiContent, gFont
+from enigma import eListboxPythonMultiContent, gFont, getDesktop
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
-
-from Components.config import config, getConfigListEntry, ConfigSubsection, ConfigInteger, ConfigYesNo, ConfigText, ConfigSelection
+from Components.config import config, getConfigListEntry, ConfigSubsection, ConfigInteger,ConfigYesNo,ConfigText,ConfigSelection
 from Components.ConfigList import ConfigListScreen
 from Components.Label import Label
 from Components.Button import Button
 from Components.MenuList import MenuList
 from Components.MultiContent import MultiContentEntryText
-
 from Components.ActionMap import ActionMap
-
 from Components.Network import iNetwork
-
-def initInterfaceConfig(i=None, new=False):
+try:
+	skin_w = getDesktop(0).size().width()
+	if skin_w == 1280:
+		HDskin = True
+		MDskin = False
+		SDskin = False
+
+	if skin_w == 1024:
+		MDskin = True
+		HDskin = False
+		SDskin = False
+
+	if skin_w == 720:
+		SDskin = True
+		MDskin = False
+		HDskin = False
+except:
+	HDskin = False
+	MDskin = False
+	SDskin = False
+def initInterfaceConfig(i = None, new = False):
 	choices = getConfiguredIPs()
-
 	if i is None and new is True:
 		i = config.plugins.Webinterface.interfacecount.value
 	elif i is None:
 		i = config.plugins.Webinterface.interfacecount.value - 1
-
-	print "[WebIfConfig.initInterfaceConfig] i is %s" % i
+	print "[WebIfConfig.initInterfaceConfig] i is %s" %i
 	config.plugins.Webinterface.interfaces.append(ConfigSubsection())
-	config.plugins.Webinterface.interfaces[i].disabled = ConfigYesNo(default=False)
+	config.plugins.Webinterface.interfaces[i].disabled = ConfigYesNo(default = False)
 	config.plugins.Webinterface.interfaces[i].address = ConfigSelection(choices, default=choices[0])
 	config.plugins.Webinterface.interfaces[i].port = ConfigInteger(80, (0, 65535))
-	config.plugins.Webinterface.interfaces[i].useauth = ConfigYesNo(default=False)
-	config.plugins.Webinterface.interfaces[i].usessl = ConfigYesNo(default=False)
-
-	config.plugins.Webinterface.interfacecount.value = i + 1
-
+	config.plugins.Webinterface.interfacecount.value = i+1
 	return i
-
 def updateConfig():
 	choices = getConfiguredIPs()
 	default = choices[0]
 	for c in config.plugins.Webinterface.interfaces:
-		c.address.setChoices(choices, default=default)
+		c.address.setChoices(choices, default = default)
 		c.address.load()
-
 def getConfiguredIPs():
 	choices = [
 		'0.0.0.0',
@@ -52,50 +58,65 @@
 	for adaptername in iNetwork.ifaces:
 		extip = iNetwork.ifaces[adaptername]['ip']
 		if iNetwork.ifaces[adaptername]['up'] is True:
-			extip = "%i.%i.%i.%i" % (extip[0], extip[1], extip[2], extip[3])
+			extip = "%i.%i.%i.%i"%(extip[0],extip[1],extip[2],extip[3])
 			choices.append(extip)
 	return choices
-
 def initConfig():
 	interfacecount = config.plugins.Webinterface.interfacecount.value
 	if interfacecount == 0:
-		# setting default interface
-		# 0.0.0.0:80 auth=False
 		config.plugins.Webinterface.interfaces.append(ConfigSubsection())
-		config.plugins.Webinterface.interfaces[0].disabled = ConfigYesNo(default=False)
-
-		#needs to be refreshed before each call, because ifaces can be changed since e2 boot
-		config.plugins.Webinterface.interfaces[0].address = ConfigSelection(getConfiguredIPs(), default='0.0.0.0')
-
-		config.plugins.Webinterface.interfaces[0].port = ConfigInteger(80, (0, 65535))
-		config.plugins.Webinterface.interfaces[0].useauth = ConfigYesNo(default=False)
-		config.plugins.Webinterface.interfaces[0].usessl = ConfigYesNo(default=False)
+		config.plugins.Webinterface.interfaces[0].disabled = ConfigYesNo(default = False)
+		config.plugins.Webinterface.interfaces[0].address = ConfigSelection(getConfiguredIPs(),default='0.0.0.0')
+		config.plugins.Webinterface.interfaces[0].port = ConfigInteger(80, (0,65535))
 		config.plugins.Webinterface.interfaces[0].save()
-
 		config.plugins.Webinterface.interfacecount.value = 1
 		config.plugins.Webinterface.interfacecount.save()
 	else:
 		i = 0
 		while i < interfacecount:
-			print "[WebIfConfig.initConfig] i is %s" % i
+			print "[WebIfConfig.initConfig] i is %s" %i
 			initInterfaceConfig(i)
 			i += 1
-
-class WebIfConfigScreen(ConfigListScreen, Screen):
-	skin = """
+class WebIfConfigScreen(ConfigListScreen,Screen):
+	SkinSD = """
 		<screen position="100,100" size="550,400" title="%s">
 			<widget name="config" position="5,5" size="540,360" scrollbarMode="showOnDemand" zPosition="1"/>
-
 			<widget name="key_red" position="0,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
 			<widget name="key_green" position="140,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
 			<widget name="key_yellow" position="280,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<ePixmap name="red" pixmap="skin_default/buttons/red.png" position="0,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+			<ePixmap name="green" pixmap="skin_default/buttons/green.png" position="140,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+			<ePixmap name="yellow" pixmap="skin_default/buttons/yellow.png" position="280,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+		</screen>""" % _("Webinterface: Main Setup")
 
+	SkinHD = """
+		<screen position="100,100" size="550,400" title="%s">
+			<widget name="config" position="5,5" size="540,360" scrollbarMode="showOnDemand" zPosition="1"/>
+			<widget name="key_red" position="0,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<widget name="key_green" position="140,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<widget name="key_yellow" position="280,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
 			<ePixmap name="red" pixmap="skin_default/buttons/red.png" position="0,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
 			<ePixmap name="green" pixmap="skin_default/buttons/green.png" position="140,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
 			<ePixmap name="yellow" pixmap="skin_default/buttons/yellow.png" position="280,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
 		</screen>""" % _("Webinterface: Main Setup")
 
-	def __init__(self, session, args=0):
+	SkinMD = """
+		<screen position="270,100" size="550,400" title="  %s">
+			<widget name="config" position="5,5" size="540,360" scrollbarMode="showOnDemand" zPosition="1"/>
+			<widget name="key_red" position="40,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<widget name="key_green" position="180,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<widget name="key_yellow" position="320,360" size="140,40" valign="center" halign="center" zPosition="5" transparent="1" foregroundColor="white" font="Regular;18"/>
+			<ePixmap name="red" pixmap="skin_default/buttons/red.png" position="40,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+			<ePixmap name="green" pixmap="skin_default/buttons/green.png" position="180,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+			<ePixmap name="yellow" pixmap="skin_default/buttons/yellow.png" position="320,360" size="140,40" zPosition="4" transparent="1" alphatest="on"/>
+		</screen>""" % _("Webinterface: Main Setup")
+	def __init__(self, session, args = 0):
+		if HDskin:
+			self.skin = WebIfConfigScreen.SkinHD
+		if SDskin:
+			self.skin = WebIfConfigScreen.SkinSD
+		if MDskin:
+			self.skin = WebIfConfigScreen.SkinMD
 		Screen.__init__(self, session)
 		l = [
 			getConfigListEntry(_("Start Webinterface"), config.plugins.Webinterface.enable),
@@ -104,7 +125,6 @@
 			getConfigListEntry(_("Autowrite timer"), config.plugins.Webinterface.autowritetimer),
 			getConfigListEntry(_("Load movie-length"), config.plugins.Webinterface.loadmovielength)
 		]
-
 		ConfigListScreen.__init__(self, l)
 		self["key_red"] = Button(_("Cancel"))
 		self["key_green"] = Button(_("OK"))
@@ -118,50 +138,70 @@
 			"cancel": self.cancel,
 			"ok": self.save,
 		}, -2)
-
 	def openIfacesConfig(self):
 		print "yellow"
 		self.session.open(WebIfInterfaceListConfigScreen)
-
 	def save(self):
 		print "saving"
 		for x in self["config"].list:
 			x[1].save()
-		self.close(True, self.session)
-
+		self.close(True,self.session)
 	def cancel(self):
 		print "cancel"
 		for x in self["config"].list:
 			x[1].cancel()
-		self.close(False, self.session)
-
+		self.close(False,self.session)
 class WebIfInterfaceListConfigScreen(Screen):
-	skin = """
+	SkinSD = """
 		<screen position="100,100" size="550,400" title="%s" >
 			<widget name="address" position="5,0" size="150,50" font="Regular;20" halign="left"/>
 			<widget name="port" position="120,0" size="50,50" font="Regular;20" halign="left"/>
-			<widget name="ssl" position="170,0" size="50,50" font="Regular;20" halign="left"/>
-			<widget name="auth" position="230,0" size="170,50" font="Regular;20" halign="left"/>
 			<widget name="disabled" position="400,0" size="160,50" font="Regular;20" halign="left"/>
 			<widget name="ifacelist" position="0,50" size="550,300" scrollbarMode="showOnDemand"/>
+			<widget name="key_red" position="20,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="red" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_yellow" position="300,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="yellow" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<ePixmap name="red" position="20,350" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
+			<ePixmap name="yellow" position="300,350" zPosition="4" size="140,40" pixmap="skin_default/buttons/yellow.png" transparent="1" alphatest="on" />
+		</screen>""" % _("Webinterface: List of configured Interfaces")
 
+	SkinHD = """
+		<screen position="100,100" size="550,400" title="%s" >
+			<widget name="address" position="5,0" size="150,50" font="Regular;20" halign="left"/>
+			<widget name="port" position="120,0" size="50,50" font="Regular;20" halign="left"/>
+			<widget name="disabled" position="400,0" size="160,50" font="Regular;20" halign="left"/>
+			<widget name="ifacelist" position="0,50" size="550,300" scrollbarMode="showOnDemand"/>
 			<widget name="key_red" position="0,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="red" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
 			<widget name="key_yellow" position="280,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="yellow" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
 			<ePixmap name="red" position="0,350" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
 			<ePixmap name="yellow" position="280,350" zPosition="4" size="140,40" pixmap="skin_default/buttons/yellow.png" transparent="1" alphatest="on" />
 		</screen>""" % _("Webinterface: List of configured Interfaces")
 
+	SkinMD = """
+		<screen position="270,100" size="550,400" title="  %s" >
+			<widget name="address" position="5,0" size="150,50" font="Regular;20" halign="left"/>
+			<widget name="port" position="120,0" size="50,50" font="Regular;20" halign="left"/>
+			<widget name="disabled" position="400,0" size="160,50" font="Regular;20" halign="left"/>
+			<widget name="ifacelist" position="0,50" size="550,300" scrollbarMode="showOnDemand"/>
+			<widget name="key_red" position="40,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="red" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_yellow" position="320,350" size="140,40" zPosition="5" valign="center" halign="center" backgroundColor="yellow" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<ePixmap name="red" position="40,350" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
+			<ePixmap name="yellow" position="320,350" zPosition="4" size="320,40" pixmap="skin_default/buttons/yellow.png" transparent="1" alphatest="on" />
+		</screen>""" % _("Webinterface: List of configured Interfaces")
 	def __init__(self, session):
+		if HDskin:
+			self.skin = WebIfInterfaceListConfigScreen.SkinHD
+		if SDskin:
+			self.skin = WebIfInterfaceListConfigScreen.SkinSD
+		if MDskin:
+			self.skin = WebIfInterfaceListConfigScreen.SkinMD
 		Screen.__init__(self, session)
 		self["address"] = Button(_("Address"))
 		self["port"] = Button(_("Port"))
-		self["auth"] = Button(_("Authorization"))
-		self["ssl"] = Button(_("SSL"))
 		self["disabled"] = Button(_("Disabled"))
 		self["key_red"] = Button(_("Add"))
 		self["key_yellow"] = Button(_("Change"))
 		self["ifacelist"] = WebIfInterfaceList([])
-		self["actions"] = ActionMap(["WizardActions", "MenuActions", "ShortcutActions"],
+		self["actions"] = ActionMap(["WizardActions","MenuActions","ShortcutActions"],
 			{
 			 "ok"	:	self.keyGreen,
 			 "back"	:	self.close,
@@ -174,85 +214,87 @@
 			 "right":	self.right,
 			 }, -1)
 		self.updateList()
-
 	def updateList(self):
 		ifaceguilist = []
 		i = 0
 		for c in config.plugins.Webinterface.interfaces:
 			res = [
-				i, #550,400
+				i,
 				MultiContentEntryText(pos=(5, 0), size=(150, 25), font=0, text=c.address.value),
-				MultiContentEntryText(pos=(120, 0), size=(50, 25), font=0, text=str(c.port.value))
+				MultiContentEntryText(pos=(120, 0),size=(50, 25), font=0,text=str(c.port.value))
 			]
-
-			if c.usessl.value:
-				res.append(MultiContentEntryText(pos=(170, 0), size=(200, 25), font=0, text=_("yes"), color=0x0000FF00))
-			else:
-				res.append(MultiContentEntryText(pos=(170, 0), size=(200, 25), font=0, text=_("no"), color=0x00FF0000))
-
-			if c.useauth.value:
-				res.append(MultiContentEntryText(pos=(230, 0), size=(170, 25), font=0, text=_("yes"), color=0x0000FF00))
-			else:
-				res.append(MultiContentEntryText(pos=(230, 0), size=(170, 25), font=0, text=_("no"), color=0x00FF0000))
-
 			if c.disabled.value:
-				res.append(MultiContentEntryText(pos=(400, 0), size=(160, 25), font=0, text=_("yes"), color=0x0000FF00))
+				res.append(MultiContentEntryText(pos=(400, 0),size=(160, 25), font=0,text=_("yes"),color=0x0000FF00))
 			else:
-				res.append(MultiContentEntryText(pos=(400, 0), size=(160, 25), font=0, text=_("no"), color=0x00FF0000))
+				res.append(MultiContentEntryText(pos=(400, 0),size=(160, 25), font=0,text=_("no"),color=0x00FF0000))
 			ifaceguilist.append(res)
 			i += 1
-
 		ifaceguilist.sort()
 		self["ifacelist"].l.setList(ifaceguilist)
-
 	def keyRed(self):
 		print "KEYRED"
-		self.session.openWithCallback(self.updateList, WebIfInterfaceConfigScreen, None)
-
+		self.session.openWithCallback(self.updateList,WebIfInterfaceConfigScreen,None)
 	def keyGreen(self):
 		print "KEYGREEN"
-
 	def keyYellow(self):
 		x = self["ifacelist"].getCurrent()[0]
-		print "current list index", x
-		self.session.openWithCallback(self.updateList, WebIfInterfaceConfigScreen, int(x))
-
+		print "current list index",x
+		self.session.openWithCallback(self.updateList,WebIfInterfaceConfigScreen,int(x))
 	def up(self):
 		self["ifacelist"].up()
-
 	def down(self):
 		self["ifacelist"].down()
-
 	def left(self):
 		self["ifacelist"].pageUp()
-
 	def right(self):
 		self["ifacelist"].pageDown()
-
 class WebIfInterfaceList(MenuList):
-	def __init__(self, list, enableWrapAround=False):
+	def __init__(self, list, enableWrapAround = False):
 		MenuList.__init__(self, list, enableWrapAround, eListboxPythonMultiContent)
 		self.l.setFont(0, gFont("Regular", 20))
-		#self.l.setFont(1, gFont("Regular", 25))
-
 	def postWidgetCreate(self, instance):
 		MenuList.postWidgetCreate(self, instance)
 		instance.setItemHeight(25)
-
 class WebIfInterfaceConfigScreen(Screen, ConfigListScreen):
-	skin = """
+	SkinSD = """
 		<screen name="Interface Config" position="80,148" size="560,280" title="%s">
 			<widget name="config" position="10,10" size="520,210" scrollbarMode="showOnDemand" />
 			<ePixmap name="red"	position="0,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
 			<ePixmap name="green" position="140,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/green.png" transparent="1" alphatest="on" />
 			<ePixmap name="blue" position="420,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/blue.png" transparent="1" alphatest="on" />
+			<widget name="key_red" position="0,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_green" position="140,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_blue" position="420,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+		</screen>""" % _("Webinterface: Edit Interface")
 
+	SkinHD = """
+		<screen name="Interface Config" position="80,148" size="560,280" title="%s">
+			<widget name="config" position="10,10" size="520,210" scrollbarMode="showOnDemand" />
+			<ePixmap name="red"	position="0,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
+			<ePixmap name="green" position="140,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/green.png" transparent="1" alphatest="on" />
+			<ePixmap name="blue" position="420,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/blue.png" transparent="1" alphatest="on" />
 			<widget name="key_red" position="0,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
 			<widget name="key_green" position="140,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
 			<widget name="key_blue" position="420,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
 		</screen>""" % _("Webinterface: Edit Interface")
 
+	SkinMD = """
+		<screen name="Interface Config" position="270,148" size="560,280" title="  %s">
+			<widget name="config" position="10,10" size="520,210" scrollbarMode="showOnDemand" />
+			<ePixmap name="red"	position="40,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/red.png" transparent="1" alphatest="on" />
+			<ePixmap name="green" position="180,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/green.png" transparent="1" alphatest="on" />
+			<ePixmap name="blue" position="320,240" zPosition="4" size="140,40" pixmap="skin_default/buttons/blue.png" transparent="1" alphatest="on" />
+			<widget name="key_red" position="40,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_green" position="180,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+			<widget name="key_blue" position="320,240" zPosition="5" size="140,40" valign="center" halign="center" font="Regular;21" transparent="1" foregroundColor="white" shadowColor="black" shadowOffset="-1,-1" />
+		</screen>""" % _("Webinterface: Edit Interface")
 	def __init__(self, session, ifacenum):
+		if HDskin:
+			self.skin = WebIfInterfaceConfigScreen.SkinHD
+		if SDskin:
+			self.skin = WebIfInterfaceConfigScreen.SkinSD
+		if MDskin:
+			self.skin = WebIfInterfaceConfigScreen.SkinMD
 		Screen.__init__(self, session)
 		self["actions"] = ActionMap(["SetupActions", "ColorActions"],
 		{
@@ -261,37 +303,27 @@
 			"blue": self.keyDelete,
 			"cancel": self.keyCancel
 		}, -2)
-
 		self["key_red"] = Button(_("Cancel"))
 		self["key_green"] = Button(_("OK"))
-		#self["key_yellow"] = Button("")
 		self["key_blue"] = Button(_("Delete"))
-
 		if ifacenum is None:
 			i = initInterfaceConfig(None, True)
 		else:
 			i = ifacenum
-
 		try:
 			current = config.plugins.Webinterface.interfaces[i]
-		except IndexError, e:
-			print "[WebIf] iface config %i not found, adding it and setting default values" % i
+		except IndexError,e:
+			print "[WebIf] iface config %i not found, adding it and setting default values"%i
 			initInterfaceConfig()
 			current = config.plugins.Webinterface.interfaces[ifacenum]
-
-		#reloading current network devices
 		current.address = ConfigSelection(getConfiguredIPs(), default=current.address.value)
-
 		cfglist = [
 			getConfigListEntry(_("Disabled"), current.disabled),
 			getConfigListEntry(_("Address"), current.address),
-			getConfigListEntry(_("Port"), current.port),
-			getConfigListEntry(_("Require Authorization"), current.useauth),
-			getConfigListEntry(_("SSL Encryption"), current.usessl)
+			getConfigListEntry(_("Port"), current.port)
 		]
 		ConfigListScreen.__init__(self, cfglist, session)
 		self.ifacenum = i
-
 	def keySave(self):
 		config.plugins.Webinterface.interfacecount.save()
 		for x in self["config"].list:
@@ -300,16 +332,13 @@
 			x[1].save()
 		config.plugins.Webinterface.save()
 		self.close()
-
 	def cancelConfirm(self, result):
 		if result:
 			config.plugins.Webinterface.interfacecount.cancel()
 		self.callback = None
 		ConfigListScreen.cancelConfirm(self, result)
-
 	def keyDelete(self):
 		self.session.openWithCallback(self.deleteConfirm, MessageBox, _("Really delete this Interface?"))
-
 	def deleteConfirm(self, result):
 		if not result:
 			return
@@ -319,4 +348,3 @@
 		config.plugins.Webinterface.interfacecount.save()
 		config.plugins.Webinterface.save()
 		self.close()
-

--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/tplWebRemoteOld.htm	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/tplWebRemoteOld.htm	2009-05-09 19:01:11.000000000 +0200
@@ -1,65 +1,59 @@
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional"
        "http://www.w3.org/TR/html4/loose.dtd">
 <html>
-<!-- tplWebRemoteOld -->
 	<head>
 		<meta content="text/html; charset=UTF-8" http-equiv="content-type">
 		<title>Enigma2 Webremote</title>
 	</head>
 	
 	<body>
-		<center>
-			Get a Screenshoot&nbsp;<input type="checkbox" id="getScreen" name="getScreen" checked><br>
+		<!--<center>
+			Get a Screenshoot&nbsp;<input type="checkbox" id="getScreen" name="getScreen"><br>
 			Grab Picture & OSD&nbsp;<input type="checkbox" id="getVideo" name="getVideo"><br>
 		</center>
-		<br>
+		<br> -->
 		<!--<center><input type="checkbox" id="getScreen" name="getScreen" checked>&nbsp;Show Screenshot</center><br>-->
 		<!-- Old Remote -->
 		<map name="rcold">
-			<area shape="circle" coords="94,24,10" nohref onClick="opener.sendRemoteControlRequest(116)" alt="Power">
-			<area shape="circle" coords="53,54,13" nohref onClick="opener.openGrabPicture()" alt="TV Screenshot">
-			<area shape="circle" coords="37,81,10" nohref onClick="opener.sendRemoteControlRequest(2)" alt="1">
-			<area shape="circle" coords="76,81,10" nohref onClick="opener.sendRemoteControlRequest(3)" alt="2">
-			<area shape="circle" coords="113,81,10" nohref onClick="opener.sendRemoteControlRequest(4)" alt="3">
-			<area shape="circle" coords="38,100,10" nohref onClick="opener.sendRemoteControlRequest(5)" alt="4">
-			<area shape="circle" coords="75,102,10" nohref onClick="opener.sendRemoteControlRequest(6)" alt="5">
-			<area shape="circle" coords="113,101,10" nohref onClick="opener.sendRemoteControlRequest(7)" alt="6">
-			<area shape="circle" coords="37,122,10" nohref onClick="opener.sendRemoteControlRequest(8)" alt="7">
-			<area shape="circle" coords="74,122,10" nohref onClick="opener.sendRemoteControlRequest(9)" alt="8">
-			<area shape="circle" coords="113,122,10" nohref onClick="opener.sendRemoteControlRequest(10)" alt="9">
-			<area shape="circle" coords="35,144,10" nohref onClick="opener.sendRemoteControlRequest(412)" alt="previous">
-			<area shape="circle" coords="76,144,10" nohref onClick="opener.sendRemoteControlRequest(11)" alt="0">
-			<area shape="circle" coords="113,143,10" nohref onClick="opener.sendRemoteControlRequest(407)" alt="next">
-			<area shape="circle" coords="32,180,13" nohref onClick="opener.sendRemoteControlRequest(115)" alt="volume up">
-			<area shape="circle" coords="76,172,10" nohref onClick="opener.sendRemoteControlRequest(113)" alt="mute">
-			<area shape="circle" coords="121,178,13" nohref onClick="opener.sendRemoteControlRequest(402)" alt="bouquet up">
-			<area shape="circle" coords="44,208,13" nohref onClick="opener.sendRemoteControlRequest(114)" alt="volume down">
-			<area shape="circle" coords="76,195,10" nohref onClick="opener.sendRemoteControlRequest(174)" alt="lame">
-			<area shape="circle" coords="113,209,13" nohref onClick="opener.sendRemoteControlRequest(403)" alt="bouquet down">
-			<area shape="circle" coords="26,233,10" nohref onClick="opener.sendRemoteControlRequest(358)" alt="info">
-			<area shape="circle" coords="76,233,13" nohref onClick="opener.sendRemoteControlRequest(103)" alt="up">
-			<area shape="circle" coords="125,234,10" nohref onClick="opener.sendRemoteControlRequest(139)" alt="menu">
-			<area shape="circle" coords="43,263,13" nohref onClick="opener.sendRemoteControlRequest(105)" alt="left">
-			<area shape="circle" coords="76,263,13" nohref onClick="opener.sendRemoteControlRequest(352)" alt="OK">
-			<area shape="circle" coords="110,263,13" nohref onClick="opener.sendRemoteControlRequest(106)" alt="right">
-			<area shape="circle" coords="29,295,10" nohref onClick="opener.sendRemoteControlRequest(392)" alt="audio">
-			<area shape="circle" coords="76,292,13" nohref onClick="opener.sendRemoteControlRequest(108)" alt="down">
-			<area shape="circle" coords="122,296,10" nohref onClick="opener.sendRemoteControlRequest(393)" alt="video">
-			<area shape="circle" coords="35,329,10" nohref onClick="opener.sendRemoteControlRequest(398)" alt="red">
-			<area shape="circle" coords="63,330,10" nohref onClick="opener.sendRemoteControlRequest(399)" alt="green">
-			<area shape="circle" coords="90,331,10" nohref onClick="opener.sendRemoteControlRequest(400)" alt="yellow">
-			<area shape="circle" coords="119,329,10" nohref onClick="opener.sendRemoteControlRequest(401)" alt="blue">
-			<area shape="circle" coords="38,361,10" nohref onClick="opener.sendRemoteControlRequest(377)" alt="tv">
-			<area shape="circle" coords="63,362,10" nohref onClick="opener.sendRemoteControlRequest(385)" alt="radio">
-			<area shape="circle" coords="89,363,10" nohref onClick="opener.sendRemoteControlRequest(388)" alt="text">
-			<area shape="circle" coords="114,362,10" nohref onClick="opener.sendRemoteControlRequest(138)" alt="help">
-		</map>
-		
-		
+			<area shape="circle" coords="37, 35, 14" nohref onclick="opener.sendRemoteControlRequest(113)" alt="mute">
+			<area shape="circle" coords="136, 34, 14" nohref onclick="opener.sendRemoteControlRequest(116)" alt="Power">
+			<area shape="circle" coords="40, 67, 14" nohref onclick="opener.sendRemoteControlRequest(2)" alt="1">
+			<area shape="circle" coords="88, 63, 15" nohref onclick="opener.sendRemoteControlRequest(3)" alt="2">
+			<area shape="circle" coords="137, 66, 15" nohref onclick="opener.sendRemoteControlRequest(4)" alt="3">
+			<area shape="circle" coords="41, 100, 15" nohref onclick="opener.sendRemoteControlRequest(5)" alt="4">
+			<area shape="circle" coords="88, 97, 15" nohref onclick="opener.sendRemoteControlRequest(6)" alt="5">
+			<area shape="circle" coords="137, 105, 15" nohref onclick="opener.sendRemoteControlRequest(7)" alt="6">
+			<area shape="circle" coords="42, 139, 15" nohref onclick="opener.sendRemoteControlRequest(8)" alt="7">
+			<area shape="circle" coords="87, 136, 15" nohref onclick="opener.sendRemoteControlRequest(9)" alt="8">
+			<area shape="circle" coords="135, 141, 15" nohref onclick="opener.sendRemoteControlRequest(10)" alt="9">
+			<area shape="circle" coords="42, 176, 15" nohref onclick="opener.sendRemoteControlRequest(139)" alt="menu">
+			<area shape="circle" coords="88, 172, 15" nohref onclick="opener.sendRemoteControlRequest(11)" alt="0">
+			<area shape="circle" coords="135, 175, 15" nohref onclick="opener.sendRemoteControlRequest(388)" alt="text">
+			<area shape="circle" coords="37, 219, 15" nohref onclick="opener.sendRemoteControlRequest(398)" alt="red">
+			<area shape="circle" coords="71, 215, 15" nohref onclick="opener.sendRemoteControlRequest(399)" alt="green">
+			<area shape="circle" coords="107, 216, 15" nohref onclick="opener.sendRemoteControlRequest(400)" alt="yellow">
+			<area shape="circle" coords="141, 218, 15" nohref onclick="opener.sendRemoteControlRequest(401)" alt="blue">
+			<area shape="circle" coords="47, 261, 15" nohref onclick="opener.sendRemoteControlRequest(115)" alt="volume up">
+			<area shape="circle" coords="88, 265, 15" nohref onclick="opener.sendRemoteControlRequest(138)" alt="info">
+			<area shape="circle" coords="129, 262, 15" nohref onclick="opener.sendRemoteControlRequest(103)" alt="program up">
+			<area shape="circle" coords="44, 305, 15" nohref onclick="opener.sendRemoteControlRequest(114)" alt="volume down">
+			<area shape="circle" coords="87, 305, 15" nohref onclick="opener.sendRemoteControlRequest(103)" alt="up">
+			<area shape="circle" coords="131, 305, 15" nohref onclick="opener.sendRemoteControlRequest(108)" alt="program down">
+			<area shape="circle" coords="46, 350, 15" nohref onclick="opener.sendRemoteControlRequest(105)" alt="left">
+			<area shape="circle" coords="90, 350, 15" nohref onclick="opener.sendRemoteControlRequest(352)" alt="OK">
+			<area shape="circle" coords="132, 350, 15" nohref onclick="opener.sendRemoteControlRequest(106)" alt="right">
+			<area shape="circle" coords="45, 390, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="exit">
+			<area shape="circle" coords="88, 390, 15" nohref onclick="opener.sendRemoteControlRequest(108)" alt="down">
+			<area shape="circle" coords="133, 390, 15" nohref onclick="opener.sendRemoteControlRequest(174)" alt="epg">
+			<area shape="circle" coords="45, 430, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="2xleft">
+			<area shape="circle" coords="90, 430, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="play">
+			<area shape="circle" coords="136, 430, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="2xright">
+			<area shape="circle" coords="43, 460, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="pause">
+			<area shape="circle" coords="89, 460, 15" nohref onclick="opener.sendRemoteControlRequest(102)" alt="rec">
+			<area shape="circle" coords="134, 460, 15" nohref onclick="opener.openGrabPicture()" alt="TV Screenshot">		</map>
 		<center>
-			<img src="/web-data/img/rcold.png" height="474" width="154" border="0" alt="Remote Control" usemap="#rcold">
+			<img src="/web-data/img/rcold.png" height="607" width="178" border="0" alt="Remote Control" usemap="#rcold">
 		</center>
 
 	</body>
-<!-- /tplWebRemoteOld -->
-</html>
\ Kein Zeilenumbruch am Dateiende.
+</html>


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/index.html	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/index.html	2009-08-05 11:40:28.000000000 +0200
@@ -5,27 +5,18 @@
 
 <head>
 	<meta content="text/html; charset=UTF-8" http-equiv="content-type">
-	<title>Dreambox WebControl</title>
+	<title>EVO UFS WebControl</title>
 	
-	<!-- External libs  -->
 	<script type="text/javascript" src="/web-data/lib/prototype-1.6.0.3.js"></script>
-	<script type="text/javascript" src="/web-data/lib/scriptaculous.js?load=effects"></script>
+	<script type="text/javascript" src="/web-data/lib/scriptaculous.js"></script>
 	<script type="text/javascript" src="/web-data/lib/shadedborder.js"></script>
 	<script type="text/javascript" src="/web-data/lib/trimpath-template-1.0.38.js"></script>
-	
-	<!-- userprefs Object -->
-	<script type="text/javascript" src="/web-data/userprefs.js"></script>
 		
 	<!-- our stuff //-->
 	<script type="text/javascript" src="/web-data/objects.js" ></script>
 	<script type="text/javascript" src="/web-data/config.js" ></script>
 	<script type="text/javascript" src="/web-data/tools.js" ></script>
 	<script type="text/javascript" src="/web-data/timer.js" ></script>
-
-	<!-- Gears-->
-	<script type="text/javascript" src="/web-data/lib/gears_init.js"></script>
-	<script type="text/javascript" src="/web-data/gears_handler.js" ></script>
-
 	
 	<link href="/web-data/tpl/default/style.css" type="text/css" rel="stylesheet">
 	<link rel="shortcut icon" type="/web-data/image/x-icon" href="/web-data/img/favicon.ico">
@@ -87,11 +78,7 @@
 					<li><a href="#" onClick="switchMode('Timer')">Timer</a></li>
 					<!-- <li><a href="#" onClick="switchMode('MediaPlayer')">MediaPlayer</a></li>  -->
 					<li><a href="#" onClick="switchMode('BoxControl')">BoxControl</a></li>
-					<li><a href="#" onClick="switchMode('Extras')">Extras</a></li>
-					<li>
-						<a href="#" onClick="openWebTV();">
-							WebTV
-						</a></li>
+					<li><a href="#" onClick="switchMode('About')">About</a></li>
 				</ul>
 			</div>
 			<div id="bannerRight">
@@ -231,4 +218,4 @@
 	</script>
 
 </body>
-</html>
\ Kein Zeilenumbruch am Dateiende.
+</html>


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/tplAbout.htm	2009-09-17 22:05:51.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/WebInterface/web-data/tpl/default/tplAbout.htm	2009-05-09 19:01:11.000000000 +0200
@@ -1,38 +1,174 @@
 
-<!-- tplAbout -->
-			<div id="about">
-				<h1>Authors</h1>
-				<div>
-					_3c5x9<br/>
-					jjbig<br/>
-					reichi<br/>
-					tmbinc<br/>	
-					... and many contributors
-				</div>
-				<hr />	
-				<h1>Javascript Libraries</h1>						
-				<div>
-					<a href="http://www.prototypejs.org" target="_blank">www.prototypejs.org</a><br />
-					<a href="http://script.aculo.us/" target="_blank">script.aculo.us/</a><br />
-					<a href="http://www.ruzee.com/blog/shadedborder" target="_blank">www.ruzee.com/blog/shadedborder/</a><br />
-					<a href="http://code.google.com/p/trimpath/wiki/JavaScriptTemplates" target="_blank">code.google.com/p/trimpath/wiki/JavaScriptTemplates</a><br />
-					<a href="http://gears.google.com" target="_blank">gears.google.com</a>
-				</div>
-				<hr />			
-				<h1>LICENSE</h1>
-				<pre>
-All Files of this Software are licensed under the Creative Commons 
-Attribution-NonCommercial-ShareAlike 3.0 Unported 
-License if not stated otherwise in a files head. To view a copy of this license, visit
-http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative
-Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
-
-Alternatively, this plugin may be distributed and executed on hardware which
-is licensed by Dream Multimedia GmbH.
-
-This plugin is NOT free software. It is open source, you are allowed to
-modify it (if you keep the license), but it may not be commercially 
-distributed other than under the conditions noted above.
-				</pre>
-			</div>			
-<!-- /tplAbout -->
+						<table id="contentTable">
+							<tr>
+								<td>
+									<table cellspacing="0" cellpadding="0" class="aboutSection">
+										<tr>
+											<td class="aboutSectionLeft">
+												<table class="fullwidth">
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Hard- & Software</th>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Receiver Model:</td>
+																	<td class="aboutElementRight">${about.model}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">E2 - Version:</td>
+																	<td class="aboutElementRight">${about.enigmaVersion}</td>
+																</tr>
+																<!--<tr>
+																	<td class="aboutElementLeft">FrontCPU. - Version:</td>
+																	<td class="aboutElementRight">${about.fpVersion}</td>
+																</tr> -->
+																<tr>
+																	<td class="aboutElementLeft">Webif - Version:</td>
+																	<td class="aboutElementRight">${about.webifversion}</td>
+																</tr>
+															</table>
+														</td>
+													</tr>
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Detected Tuners</th>
+																</tr>
+																{for t in tuner}
+																<tr>
+																	<td class="aboutElementLeft">${t.name}:</td>
+																	<td class="aboutElementRight">${t.type}</td>
+																</tr>
+																{/for}
+															</table>
+														</td>
+													</tr>
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Harddisk</th>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Model:</td>
+																	<td class="aboutElementRight">${about.hddmodel}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Capacity:</td>
+																	<td class="aboutElementRight">${about.hddcapacity}</td>
+																</tr>
+																<!--<tr>
+																	<td class="aboutElementLeft">Free:</td>
+																	<td class="aboutElementRight">${about.hddfree}</td>
+																</tr> -->
+															</table>
+														</td>
+													</tr>
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Internal Network</th>
+																</tr>																													<!--<tr>
+																	<td class="aboutElementLeft">Mac Address:</td>
+																	<td class="aboutElementRight">${about.lanMac}</td>
+																</tr>-->
+																<tr>
+																	<td class="aboutElementLeft">DHCP enabled:</td>
+																	<td class="aboutElementRight">${about.lanDHCP}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">IP:</td>
+																	<td class="aboutElementRight">${about.lanIP}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Netmask:</td>
+																	<td class="aboutElementRight">${about.lanNetmask}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Gateway:</td>
+																	<td class="aboutElementRight">${about.lanGateway}</td>
+																</tr>
+															</table>
+														</td>
+													</tr>
+												</table>
+											</td>
+											<td class="aboutSectionRight">
+												<table class="fullwidth">
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Serviceinfo</th>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Name:</td>
+																	<td class="aboutElementRight">${about.serviceName}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Provider:</td>
+																	<td class="aboutElementRight">${about.serviceProvider}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Videoformat:</td>
+																	<td class="aboutElementRight">${about.serviceAspect}</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">Videosize:</td>
+																	<td class="aboutElementRight">${about.serviceVideosize}</td>
+																</tr>
+															</table>
+														</td>
+													</tr>	 
+													<tr>
+														<td class="fullwidth">
+															<table cellspacing="0" class="about">
+																<tr>
+																	<th colspan="2" class="aboutHeader">Pids</th>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">VideoPid:</td>
+																	<td class="aboutElementRight">${about.vPidh} (${about.vPid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">AudioPid:</td>
+																	<td class="aboutElementRight">${about.aPidh} (${about.aPid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">PCRPid:</td>
+																	<td class="aboutElementRight">${about.pcrPidh} (${about.pcrPid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">PMTPid:</td>
+																	<td class="aboutElementRight">${about.pmtPidh} (${about.pmtPid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">TXTPid:</td>
+																	<td class="aboutElementRight">${about.txtPidh} (${about.txtPid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">TSID:</td>
+																	<td class="aboutElementRight">${about.tsidh} (${about.tsid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">ONID:</td>
+																	<td class="aboutElementRight">${about.onidh} (${about.onid}d)</td>
+																</tr>
+																<tr>
+																	<td class="aboutElementLeft">SID:</td>
+																	<td class="aboutElementRight">${about.sidh} (${about.sid}d)</td>
+																</tr>
+															</table>
+														</td>
+													</tr>
+												</table>
+											</td>
+										</tr>
+									</table>
+								</tr>
+							</td>
+						</table>


--- EVO/usr/local/share/enigma2/keymap.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/keymap.xml	2009-09-13 00:06:49.483807000 +0200
@@ -1,39 +1,20 @@
 <keymap>
 	<map context="ListboxActions">
-		<device name="keyboard">
-			<key id="a" mapto="up" flags="mr" />
-			<key id="b" mapto="down" flags="mr" />
-		</device>
 		<key id="KEY_UP" mapto="moveUp" flags="mr" />
 		<key id="KEY_DOWN" mapto="moveDown" flags="mr" />
-		<key id="KEY_REWIND" mapto="moveTop" flags="mr" />
-		<key id="KEY_FASTFORWARD" mapto="moveEnd" flags="mr" />
-		<key id="KEY_PAGEUP" mapto="pageUp" flags="mr" />
-		<key id="KEY_PAGEDOWN" mapto="pageDown" flags="mr" />
-		<key id="KEY_LEFT" mapto="pageUp" flags="mr" />
-		<key id="KEY_RIGHT" mapto="pageDown" flags="mr" />
-		
+		<key id="KEY_HOME" mapto="back" flags="mr" />
+		<key id="KEY_PAGEUP" mapto="pageUp" flags="mr" />
+		<key id="KEY_PAGEDOWN" mapto="pageDown" flags="mr" /> 
+		<key id="KEY_CHANNELUP" mapto="pageUp" flags="mr" />
+		<key id="KEY_CHANNELDOWN" mapto="pageDown" flags="mr" />
+		<!-- key id="KEY_LEFT" mapto="pageUp" flags="mr" /> -->
+		<!--<key id="KEY_RIGHT" mapto="pageDown" flags="mr" /-->
 		<key id="KEY_1" mapto="moveUp" flags="mr" />
 		<key id="KEY_2" mapto="moveDown" flags="mr" />
 	</map>
 	
-	<map context="KeyboardInputActions">
-		<key id="KEY_LEFT" mapto="left" flags="mr" />
-		<key id="KEY_RIGHT" mapto="right" flags="mr" />
-		<key id="KEY_HOME" mapto="home" flags="mr" />
-		<key id="KEY_END" mapto="end" flags="mr" />
-		<key id="KEY_BACK" mapto="home" flags="mr" />
-		<key id="KEY_FORWARD" mapto="end" flags="mr" />
-		<key id="KEY_DELETE" mapto="deleteForward" flags="mr" />
-		<key id="KEY_BACKSPACE" mapto="deleteBackward" flags="mr" />
-		<key id="KEY_TAB" mapto="tab" flags="mr" />
-		<key id="KEY_INSERT" mapto="toggleOverwrite" flags="m" />
-	</map>
-
 	<map context="SetupActions">
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 		<key id="KEY_LEFT" mapto="left" flags="mr" />
 		<key id="KEY_RIGHT" mapto="right" flags="mr" />
@@ -80,16 +61,17 @@
 	</map>
 
 	<map context="InfobarExtensions">
-		<key id="KEY_RED" mapto="extensions" flags="m" />
+		<key id="KEY_RED" mapto="evopanel" flags="m" />
+		<!--<key id="BTN_1" mapto="extensions" flags="m" /> -->
 	</map>
 	
 	<map context="InfobarChannelSelection">
-		<key id="KEY_LEFT" mapto="zapUp" flags="mr" />
-		<key id="KEY_RIGHT" mapto="zapDown" flags="mr" />
+		<key id="KEY_RIGHT" mapto="nextBouquet" flags="m" />
+		<key id="KEY_LEFT" mapto="prevBouquet" flags="m" />
 		<key id="KEY_PAGEUP" mapto="zapDown" flags="m" />
 		<key id="KEY_PAGEDOWN" mapto="zapUp" flags="m" />
-		<key id="KEY_UP" mapto="switchChannelUp" flags="mr" />
-		<key id="KEY_DOWN" mapto="switchChannelDown" flags="mr" />
+		<key id="KEY_UP" mapto="zapDown" flags="mr" />
+		<key id="KEY_DOWN" mapto="zapUp" flags="mr" />
 		<key id="KEY_REWIND" mapto="historyBack" flags="mr" />
 		<key id="KEY_FASTFORWARD" mapto="historyNext" flags="mr" />
 		<key id="KEY_OK" mapto="openServiceList" flags="m" />
@@ -99,8 +81,6 @@
 		<key id="KEY_UP" mapto="up" flags="mr" />
 		<key id="KEY_DOWN" mapto="down" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 	</map>
 
@@ -114,8 +94,6 @@
 		<key id="KEY_LEFT" mapto="left" flags="mr" />
 		<key id="KEY_RIGHT" mapto="right" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="back" flags="m" />
 		<key id="KEY_HOME" mapto="back" flags="m" />
 
 		<key id="KEY_FASTFORWARD" mapto="deleteForward" flags="mr" />
@@ -139,8 +117,6 @@
 		<key id="KEY_UP" mapto="up" flags="mr" />
 		<key id="KEY_DOWN" mapto="down" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="back" flags="m" />
 		<key id="KEY_HOME" mapto="back" flags="m" />
 	</map>
 	
@@ -154,8 +130,6 @@
 	
 	<map context="InfobarShowHideActions">
 		<key id="KEY_HELP" mapto="toggleShow" flags="m" />
-		<key id="KEY_ENTER" mapto="toggleShow" flags="m" />
-		<key id="KEY_EXIT" mapto="hide" flags="m" />
 		<key id="KEY_HOME" mapto="hide" flags="m" />
 	</map>
 
@@ -165,7 +139,6 @@
 		<!--key id="KEY_BLUE" mapto="showTv" flags="m" /-->
 	</map>
 
-
 	<map context="InfobarExtendedAudioSelectionActions">
 		<key id="KEY_YELLOW" mapto="audioSelection" flags="m" />
 	</map>
@@ -177,23 +150,15 @@
 	<map context="InfobarAspectSelectionActions">
 		<key id="KEY_GREEN" mapto="aspectSelection" flags="m" />
 	</map>
-	<map context="InfobarSubserviceSelectionActions">
-		<key id="KEY_GREEN" mapto="subserviceSelection" flags="b" />
-	</map>
 
 	<map context="InfobarSubserviceQuickzapActions">
-		<key id="KEY_PREVIOUS" mapto="prevSubservice" flags="m" />
-		<key id="KEY_NEXT" mapto="nextSubservice" flags="m" />
-		<key id="KEY_BACK" mapto="prevSubservice" flags="m" />
-		<key id="KEY_FORWARD" mapto="nextSubservice" flags="m" />
-		<key id="KEY_EXIT" mapto="exit" flags="m" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-
 	</map>
 
 	<map context="GlobalActions">
 		<key id="KEY_VOLUMEUP" mapto="volumeUp" flags="mr" />
 		<key id="KEY_VOLUMEDOWN" mapto="volumeDown" flags="mr" />
+		<key id="KEY_MUTE" mapto="volumeCorrect" flags="m" />
 		<key id="KEY_MUTE" mapto="volumeMute" flags="mr" />
 		<key id="KEY_POWER" mapto="power_long" flags="m" />
 	</map>
@@ -283,7 +248,7 @@
 	</map>
 	
 	<map context="MediaPlayerCueSheetActions">
-		<key id="KEY_0" mapto="toggleMark" flags="m" />
+			<key id="KEY_0" mapto="toggleMark" flags="m" />
 	</map>
 	
 	<map context="InfobarTeletextActions">
@@ -300,7 +265,6 @@
 		<key id="KEY_UP" mapto="prevPage" flags="mr" />
 		<key id="KEY_DOWN" mapto="nextPage" flags="mr" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-		<key id="KEY_ESC" mapto="exit" flags="m" />
 	</map>
 
 	<map context="ChannelSelectBaseActions">
@@ -310,6 +274,8 @@
 		<key id="KEY_BLUE" mapto="showFavourites" flags="m" />
 		<key id="KEY_REWIND" mapto="prevBouquet" flags="m" />
 		<key id="KEY_FASTFORWARD" mapto="nextBouquet" flags="m" />
+    		<key id="KEY_LEFT" mapto="prevBouquet" flags="mr" />
+		<key id="KEY_RIGHT" mapto="nextBouquet" flags="mr" />
 	</map>
 
 	<map context="ChannelSelectEPGActions">
@@ -323,6 +289,8 @@
 	<map context="TvRadioActions">
 		<key id="KEY_0" mapto="keyTV" flags="m" />
 		<key id="KEY_TEXT" mapto="keyRadio" flags="m" />
+		<key id="KEY_TV" mapto="keyTV" flags="m" />
+		<key id="KEY_RADIO" mapto="keyRadio" flags="m" />
 	</map>
 
 	<map context="TimerEditActions">
@@ -338,8 +306,6 @@
 		<key id="KEY_MENU" mapto="input_date_time" flags="m" />
 		<key id="KEY_CHANNELUP" mapto="nextBouquet" flags="m" />
 		<key id="KEY_CHANNELDOWN" mapto="prevBouquet" flags="m" />
-		<key id="KEY_NEXT" mapto="nextService" flags="m" />
-		<key id="KEY_PREVIOUS" mapto="prevService" flags="m" />
 	</map>
 
 	<map context="EventViewActions">
@@ -359,14 +325,7 @@
 	</map>
 
 	<map context="OkCancelActions">
-		<key id="\x0a" mapto="ok" flags="m" />
-		<key id="\x1b" mapto="cancel" flags="m" />
-
-		<!-- use this on rcu, ok? -->
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
-
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 	</map>
 	
@@ -375,16 +334,6 @@
 		<key id="KEY_DOWN" mapto="down" flags="m" />
 		<key id="KEY_LEFT" mapto="left" flags="m" />
 		<key id="KEY_RIGHT" mapto="right" flags="m" />
-
-		<key id="KEY_UP" mapto="upRepeated" flags="r" />
-		<key id="KEY_DOWN" mapto="downRepeated" flags="r" />
-		<key id="KEY_LEFT" mapto="leftRepeated" flags="r" />
-		<key id="KEY_RIGHT" mapto="rightRepeated" flags="r" />
-		
-		<key id="KEY_LEFT" mapto="leftUp" flags="b" />
-		<key id="KEY_RIGHT" mapto="rightUp" flags="b" />
-		<key id="KEY_UP" mapto="upUp" flags="b" />
-		<key id="KEY_DOWN" mapto="downUp" flags="b" />
 	</map>
 	
 	<map context="ColorActions">
@@ -397,10 +346,8 @@
 	<map context="MsgBoxActions">
 		<key id="KEY_GREEN" mapto="alwaysOK" flags="m" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_RED" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
-		<key id="KEY_ESC" mapto="cancel" flags="m" />
 	</map>
 
 	<map context="WindowActions">
@@ -408,15 +355,9 @@
 	</map>
 	
 	<map context="HelpActions">
-		<!--key id="KEY_HELP" mapto="displayHelp" flags="m" -->
 	</map>
 
 	<map context="ShortcutActions">
-		<key id="KEY_F1" mapto="red" flags="mr" />
-		<key id="KEY_F2" mapto="yellow" flags="mr" />
-		<key id="KEY_F3" mapto="green" flags="mr" />
-		<key id="KEY_F4" mapto="blue" flags="mr" />
-
 		<key id="KEY_RED" mapto="red" flags="mr" />
 		<key id="KEY_YELLOW" mapto="yellow" flags="mr" />
 		<key id="KEY_GREEN" mapto="green" flags="mr" />
@@ -428,9 +369,7 @@
 	
 	<map context="SleepTimerEditorActions">
 		<key id="KEY_OK" mapto="select" flags="m" />
-		<key id="KEY_ENTER" mapto="select" flags="m" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-		<key id="KEY_ESC" mapto="exit" flags="m" />
 		<key id="KEY_1" mapto="1" flags="m" />
 		<key id="KEY_2" mapto="2" flags="m" />
 		<key id="KEY_3" mapto="3" flags="m" />
@@ -468,9 +407,30 @@
 	</map>
 	
 	<map context="MediaPlayerActions">
+		<device name="dreambox remote control (native)">
+			<key id="KEY_YELLOW" mapto="pause" flags="m" />
+			<key id="KEY_GREEN" mapto="play" flags="m" />
+			<key id="KEY_TV" mapto="stop" flags="b" />
+			<key id="KEY_TV" mapto="shift_stop" flags="l" />
+			<key id="KEY_RADIO" mapto="shift_record" flags="l" />
+			<key id="KEY_PREVIOUS" mapto="previous" flags="m" />
+			<key id="KEY_NEXT" mapto="next" flags="m" />
+		</device>
+		<device name="dreambox advanced remote control (native)">
+			<key id="KEY_PLAYPAUSE" mapto="pause" flags="m" />
+			<key id="KEY_STOP" mapto="stop" flags="b" />
+			<key id="KEY_STOP" mapto="shift_stop" flags="l" />
+			<key id="KEY_RECORD" mapto="shift_record" flags="l" />
+			<key id="KEY_PREVIOUS" mapto="previous" flags="m" />
+			<key id="KEY_NEXT" mapto="next" flags="m" />
+			<key id="KEY_RED" mapto="previous" flags="m" />
+			<key id="KEY_BLUE" mapto="next" flags="m" />
+		</device>
 		<key id="KEY_PAUSE" mapto="pause" flags="m" />
 		<key id="KEY_PLAY" mapto="play" flags="m" />
 		<key id="KEY_STOP" mapto="stop" flags="b" />
+		<key id="KEY_LEFT" mapto="previous" flags="m" />
+		<key id="KEY_RIGHT" mapto="next" flags="m" />
 		
 		<key id="KEY_MENU" mapto="menu" flags="m" />
 
@@ -478,6 +438,6 @@
 		<key id="KEY_8" mapto="skipListend" flags="m" />
 		<key id="KEY_PAGEUP" mapto="nextBouquet" flags="m" />
 		<key id="KEY_PAGEDOWN" mapto="prevBouquet" flags="m" />
-		<key id="KEY_TEXT" mapto="subtitles" flags="m" />
+
 	</map>
 </keymap>


--- EVO/usr/local/share/enigma2/menu.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/menu.xml	2009-09-07 14:36:38.465829000 +0200
@@ -19,7 +19,6 @@
 		<!--<item text="Radio"><code>print "radio mode"</code></item>-->
 		<item level="0" text="Subtitles" entryID="subtitle_selection" weight="40"><screen module="Subtitles" screen="Subtitles" /></item>
 		<item level="0" text="Timer" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
-		<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
 
 		<menu level="0" text="Information" entryID="info_screen">
 			<id val="information" />
@@ -38,7 +37,7 @@
 			<menu weight="0" level="0" text="Service Searching" entryID="service_searching_selection">
 				<id val="scan" />
 				<item text="Tuner configuration" entryID="tuner_setup"><screen module="Satconfig" screen="NimSelection" /></item>
-				<item text="Default services lists" entryID="default_lists"><screen module="ScanSetup" screen="DefaultSatLists" /></item>
+				<!--<item text="Default services lists" entryID="default_lists"><screen module="ScanSetup" screen="DefaultSatLists" /></item>-->
 				<item text="Automatic Scan" entryID="auto_scan"><screen module="ScanSetup" screen="ScanSimple" /></item>
 				<!--<item text="Automatic Scan"><screen module="ServiceScan" /></item>-->
 				<item text="Manual Scan" entryID="manual_scan"><screen module="ScanSetup" /></item>
@@ -73,9 +72,10 @@
 				<item level="2" text="Timeshift path..." entryId="timeshift_path"><screen module="LocationBox" screen="TimeshiftLocationBox" /></item>
 			</menu>
 			<item weight="10" level="1" text="Common Interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection" /></item>
-			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
-			<!--item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
-			<item weight="20" level="0" text="Default settings" entryID="default_wizard">
+			<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
+			<!--<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
+			<item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
+			<!--<item weight="20" level="0" text="Default settings" entryID="default_wizard">
 				<code>
 from Screens.DefaultWizard import DefaultWizard
 self.session.open(DefaultWizard, silent = False)
@@ -92,7 +92,7 @@
 		_exit(0)
 self.session.openWithCallback(msgClosed, FactoryReset)
 </code>
-			</item>
+			</item>-->
 			<!--<item text="Parental Control"><setup id="parental" /></item>-->
 			<!--<item text="Expert -disabled-"><setup id="expert" /></item>-->
 		</menu>


--- EVO/usr/local/share/enigma2/setup.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/setup.xml	2009-09-13 00:06:55.467768000 +0200
@@ -31,6 +31,9 @@
 			<item level="1" text="Alternative radio mode">config.usage.e1like_radio_mode</item>
 			<item level="1" text="Action on long powerbutton press">config.usage.on_long_powerpress</item>
 			<item level="0" text="Infobar timeout">config.usage.infobar_timeout</item>
+			<item level="0" text="maximum Volume">config.audio.volume_max</item>
+			<item level="0" text="silenced Volume">config.audio.volume_silenced</item>
+			<item level="0" text="Volume timeout">config.audio.volume_timeout</item>
 			<item level="1" text="12V output" requires="12V_Output">config.usage.output_12V</item>
 			<item level="2" text="Show infobar on channel change">config.usage.show_infobar_on_zap</item>
 			<item level="2" text="Show infobar on skip forward/backward">config.usage.show_infobar_on_skip</item>


--- EVO/usr/local/share/enigma2/startwizard.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/startwizard.xml	2009-09-07 14:47:51.157685000 +0200
@@ -44,7 +44,7 @@
 self.selectKey("RIGHT")
 			</code>
 		</step>
-		<step id="nimc">
+<!--		<step id="nimc">
 			<condition>
 from Components.NimManager import nimmanager
 self.condition = len(nimmanager.nim_slots) > 2 and not nimmanager.nim_slots[2].empty and config.misc.startwizard.shownimconfig.value
@@ -159,7 +159,7 @@
 			</code>
 
 			<text value="After the start wizard is completed, you need to protect single services. Refer to your dreambox's manual on how to do that." />
-		</step>
+		</step>-->
 		<step id="end">
 			<text value="Thank you for using the wizard. Your box is now ready to use.\nPlease press OK to start using your Dreambox." />
 		</step>

--- EVO/usr/lib/enigma2/python/Plugins/Extensions/GraphMultiEPG/plugin.py	2009-09-21 21:42:04.267784481 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/GraphMultiEPG/plugin.py	2009-09-21 21:41:13.963784395 +0200
@@ -94,5 +94,4 @@
 def Plugins(**kwargs):
 	name = _("Graphical Multi EPG")
 	descr = _("A graphical EPG for all services of an specific bouquet")
- 	return [ PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EVENTINFO, fnc=main),
-	  PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EXTENSIONSMENU, fnc=main) ]
+ 	return [ PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EVENTINFO, fnc=main) ]

