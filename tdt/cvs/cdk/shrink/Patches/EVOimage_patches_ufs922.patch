--- EVO/usr/lib/enigma2/python/Screens/About.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/About.py	2009-04-27 15:44:51.000000000 +0200
@@ -25,7 +25,7 @@
 		self["FPVersion"] = StaticText(fp_version)
 
 		nims = nimmanager.nimList()
-		for count in (0, 1, 2, 3):
+		for count in range(4):
 			if count < len(nims):
 				self["Tuner" + str(count)] = StaticText(nims[count])
 			else:
@@ -33,7 +33,7 @@
 
 		self["HDDHeader"] = StaticText(_("Detected HDD:"))
 		hddlist = harddiskmanager.HDDList()
-		hdd = hddlist and hddlist[0][1] or None
+		hdd = len(hddlist) > 0 and hddlist[0][1] or None
 		if hdd is not None and hdd.model() != "":
 			self["hddA"] = StaticText(_("%s\n(%s, %d MB free)") % (hdd.model(), hdd.capacity(),hdd.free()))
 		else:


--- EVO/usr/lib/enigma2/python/Screens/ChannelSelection.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/ChannelSelection.py	2009-04-28 11:40:35.000000000 +0200
@@ -669,7 +669,7 @@
 		self["key_yellow"] = Button(_("Provider"))
 		self["key_blue"] = Button(_("Favourites"))
 		#+++> TDT
-		self["boquet"] = Label(_("Channel Selection"))
+		self["favonly"] = Label(_("Channel Selection"))
 		#<+++ TDT		
 		self["list"] = ServiceList()
 		self.servicelist = self["list"]
@@ -826,7 +826,7 @@
 				nameStr = self.getServiceName(base_ref)
 				titleStr += ' ' + nameStr
 				#+++> TDT
-				self["boquet"].setText("Channel Selection")
+				self["favonly"].setText("Channel Selection")
 				#<+++ TDT
 				if end_ref is not None:
 					if Len > 2:
@@ -836,7 +836,7 @@
 					nameStr = self.getServiceName(end_ref)
 					titleStr += nameStr
 					#+++> TDT
-					self["boquet"].setText(nameStr)
+					self["favonly"].setText(nameStr)
 					#<+++ TDT
 				self.setTitle(titleStr)


--- EVO/usr/lib/enigma2/python/Screens/LocationBox.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/LocationBox.py	2009-06-02 12:15:22.000000000 +0200
@@ -504,13 +504,13 @@
 
 class MovieLocationBox(LocationBox):
 	def __init__(self, session, text, dir, minFree = None):
-		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr", "/var"]
+		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr"]
 		LocationBox.__init__(self, session, text = text, currDir = dir, bookmarks = config.movielist.videodirs, autoAdd = True, editDir = True, inhibitDirs = inhibitDirs, minFree = minFree)
 		self.skinName = "LocationBox"
 
 class TimeshiftLocationBox(LocationBox):
 	def __init__(self, session):
-		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr", "/var"]
+		inhibitDirs = ["/bin", "/boot", "/dev", "/etc", "/lib", "/proc", "/sbin", "/sys", "/usr"]
 		LocationBox.__init__(
 				self,
 				session,

--- EVO/usr/lib/enigma2/python/Screens/Volume.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/Volume.py	2009-04-08 11:23:44.000000000 +0200
@@ -1,14 +1,27 @@
+
+#   Volume.py-Screen with Text-Value 
+#   by Vali 18.07.2008
+
+#         Usage in skin.xml:
+
+#	<screen name="Volume" ..................... backgroundColor="transparent" flags="wfNoBorder">
+#		<ePixmap position="0,0" ..................... />
+#		<widget name="Volume" zPosition="2" ................... transparent="1" />
+#		<widget name="VolumeText" zPosition="3" position="0,0" size="30,20" font="Regular;16" transparent="1" foregroundColor="#f0f0f0" backgroundColor="#0f0f0f"/>
+#	</screen>
+
 from Screen import Screen
 from Components.VolumeBar import VolumeBar
+from Components.Label import Label #NEW LINE
 		
 class Volume(Screen):
 	def __init__(self, session):
 		Screen.__init__(self, session)
-		
 		self.volumeBar = VolumeBar()
-		
 		self["Volume"] = self.volumeBar
+		self["VolumeText"] = Label("") #NEW LINE
 		
 	def setValue(self, vol):
-		print "setValue", vol
 		self.volumeBar.setValue(vol)
+		self["VolumeText"].setText(str(vol)) #NEW LINE
+


--- EVO/usr/lib/enigma2/python/Components/About.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/About.py	2009-04-27 16:15:51.000000000 +0200
@@ -23,7 +23,7 @@
 					month = version[8:10]
 					day = version[10:12]
 
-					return '-'.join(("dev", year, month, day))
+					return '-'.join(["cvs", year, month, day])
 			file.close()
 		except IOError:
 			pass

--- EVO/usr/lib/enigma2/python/Components/Network.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/Network.py	2009-05-18 11:00:06.000000000 +0200
@@ -3,8 +3,6 @@
 from socket import *
 from enigma import eConsoleAppContainer
 from Components.Console import Console
-from Components.PluginComponent import plugins
-from Plugins.Plugin import PluginDescriptor
 
 class Network:
 	def __init__(self):
@@ -24,7 +22,6 @@
 		self.activateConsole = Console()
 		self.resetNetworkConsole = Console()
 		self.DnsConsole = Console()
-		self.config_ready = None
 		self.getInterfaces()
 
 	def getInterfaces(self, callback = None):
@@ -206,7 +203,7 @@
 					ifaces[currif]["gateway"] = map(int, split[1].split('.'))
 					if self.ifaces[currif].has_key("gateway"):
 						if self.ifaces[currif]["gateway"] != ifaces[currif]["gateway"] and ifaces[currif]["dhcp"] == False:
-							self.ifaces[currif]["gateway"] = map(int, split[1].split('.'))
+							self.ifaces[currif]["gateway"] = map(int, split[1].split('.'))					
 				if (split[0] == "pre-up"):
 					if self.ifaces[currif].has_key("preup"):
 						self.ifaces[currif]["preup"] = i
@@ -225,8 +222,6 @@
 				self.loadNameserverConfig()
 				print "read configured interfac:", ifaces
 				print "self.ifaces after loading:", self.ifaces
-				self.config_ready = True
-				self.msgPlugins()
 				if callback is not None:
 					callback(True)
 
@@ -423,8 +418,6 @@
 		
 	def restartNetwork(self,callback = None):
 		self.restartConsole = Console()
-		self.config_ready = False
-		self.msgPlugins()
 		self.commands = []
 		self.commands.append("/etc/init.d/avahi-daemon stop")
 		for iface in self.ifaces.keys():
@@ -433,6 +426,7 @@
 		self.commands.append("/etc/init.d/networking stop")
 		self.commands.append("killall -9 udhcpc")
 		self.commands.append("rm /var/run/udhcpc*")
+		self.commands.append("/etc/init.d/udhcpc start")
 		self.commands.append("/etc/init.d/networking start")
 		self.commands.append("/etc/init.d/avahi-daemon start")
 		self.restartConsole.eBatch(self.commands, self.restartNetworkFinished, callback, debug=True)
@@ -455,34 +449,24 @@
 			
 	def stopLinkStateConsole(self):
 		if self.LinkConsole is not None:
-			if len(self.LinkConsole.appContainers):
-				for name in self.LinkConsole.appContainers.keys():
-					self.LinkConsole.kill(name)
-					
+			self.LinkConsole = None
+
 	def stopDNSConsole(self):
 		if self.DnsConsole is not None:
-			if len(self.DnsConsole.appContainers):
-				for name in self.DnsConsole.appContainers.keys():
-					self.DnsConsole.kill(name)
-					
+			self.DnsConsole = None
+
 	def stopRestartConsole(self):
 		if self.restartConsole is not None:
-			if len(self.restartConsole.appContainers):
-				for name in self.restartConsole.appContainers.keys():
-					self.restartConsole.kill(name)
-					
+			self.restartConsole = None
+			
 	def stopGetInterfacesConsole(self):
 		if self.Console is not None:
-			if len(self.Console.appContainers):
-				for name in self.Console.appContainers.keys():
-					self.Console.kill(name)
-					
+			self.Console = None
+
 	def stopDeactivateInterfaceConsole(self):
-		if self.deactivateInterfaceConsole is not None:
-			if len(self.deactivateInterfaceConsole.appContainers):
-				for name in self.deactivateInterfaceConsole.appContainers.keys():
-					self.deactivateInterfaceConsole.kill(name)
-					
+		if self.deactivateInterfaceConsole:
+			self.deactivateInterfaceConsole = None
+			
 	def checkforInterface(self,iface):
 		if self.getAdapterAttribute(iface, 'up') is True:
 			return True
@@ -564,11 +548,6 @@
 			netmask = str(inet_ntoa(pack('>L', nm)))
 			return netmask
 	
-	def msgPlugins(self):
-		if self.config_ready is not None:
-			for p in plugins.getPlugins(PluginDescriptor.WHERE_NETWORKCONFIG_READ):
-				p(reason=self.config_ready)
-	
 iNetwork = Network()
 
 def InitNetwork():


--- EVO/usr/lib/enigma2/python/Components/UsageConfig.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/UsageConfig.py	2009-09-13 00:05:26.519766000 +0200
@@ -1,5 +1,5 @@
 from Components.Harddisk import harddiskmanager
-from config import ConfigSubsection, ConfigYesNo, config, ConfigSelection, ConfigText, ConfigNumber, ConfigSet, ConfigLocations
+from config import ConfigSubsection, ConfigYesNo, config, ConfigSelection, ConfigText, ConfigNumber, ConfigInteger, ConfigSet, ConfigLocations
 from enigma import Misc_Options, setTunerTypePriorityOrder;
 from SystemInfo import SystemInfo
 import os
@@ -7,16 +7,20 @@
 def InitUsageConfig():
 	config.usage = ConfigSubsection();
 	config.usage.showdish = ConfigYesNo(default = False)
-	config.usage.multibouquet = ConfigYesNo(default = False)
+	config.usage.multibouquet = ConfigYesNo(default = True)
 	config.usage.quickzap_bouquet_change = ConfigYesNo(default = False)
-	config.usage.e1like_radio_mode = ConfigYesNo(default = False)
+	config.usage.e1like_radio_mode = ConfigYesNo(default = True)
+	config.audio = ConfigSubsection();
+	config.audio.volume_max = ConfigInteger(default=100, limits=(50,100))
+	config.audio.volume_silenced = ConfigInteger(default=100, limits=(50,100))
+	config.audio.volume_timeout = ConfigInteger(default=2000, limits=(500,5000))
 	config.usage.infobar_timeout = ConfigSelection(default = "5", choices = [
 		("0", _("no timeout")), ("1", "1 " + _("second")), ("2", "2 " + _("seconds")), ("3", "3 " + _("seconds")),
 		("4", "4 " + _("seconds")), ("5", "5 " + _("seconds")), ("6", "6 " + _("seconds")), ("7", "7 " + _("seconds")),
 		("8", "8 " + _("seconds")), ("9", "9 " + _("seconds")), ("10", "10 " + _("seconds"))])
 	config.usage.show_infobar_on_zap = ConfigYesNo(default = True)
 	config.usage.show_infobar_on_skip = ConfigYesNo(default = True)
-	config.usage.show_infobar_on_event_change = ConfigYesNo(default = True)
+	config.usage.show_infobar_on_event_change = ConfigYesNo(default = False)
 	config.usage.hdd_standby = ConfigSelection(default = "600", choices = [
 		("0", _("no standby")), ("10", "10 " + _("seconds")), ("30", "30 " + _("seconds")),
 		("60", "1 " + _("minute")), ("120", "2 " + _("minutes")),
@@ -30,22 +34,22 @@
 		("standard", _("standard")), ("swap", _("swap PiP and main picture")),
 		("swapstop", _("move PiP to main picture")), ("stop", _("stop PiP")) ])
 
-	config.usage.allowed_timeshift_paths = ConfigLocations(default = ["/media/hdd/"])
-	config.usage.timeshift_path = ConfigText(default = "/media/hdd")
+	config.usage.allowed_timeshift_paths = ConfigLocations(default = ["/hdd/timeshift/"])
+	config.usage.timeshift_path = ConfigText(default = "/hdd/timeshift")
 
-	config.usage.on_movie_start = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_start = ConfigSelection(default = "beginning", choices = [
 		("ask", _("Ask user")), ("resume", _("Resume from last position")), ("beginning", _("Start from the beginning")) ])
-	config.usage.on_movie_stop = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_stop = ConfigSelection(default = "quit", choices = [
 		("ask", _("Ask user")), ("movielist", _("Return to movie list")), ("quit", _("Return to previous service")) ])
-	config.usage.on_movie_eof = ConfigSelection(default = "ask", choices = [
+	config.usage.on_movie_eof = ConfigSelection(default = "quit", choices = [
 		("ask", _("Ask user")), ("movielist", _("Return to movie list")), ("quit", _("Return to previous service")), ("pause", _("Pause movie at end")) ])
 
-	config.usage.setup_level = ConfigSelection(default = "intermediate", choices = [
+	config.usage.setup_level = ConfigSelection(default = "expert", choices = [
 		("simple", _("Simple")),
 		("intermediate", _("Intermediate")),
 		("expert", _("Expert")) ])
 
-	config.usage.on_long_powerpress = ConfigSelection(default = "show_menu", choices = [
+	config.usage.on_long_powerpress = ConfigSelection(default = "shutdown", choices = [
 		("show_menu", _("show shutdown menu")),
 #+++>
 		("standby", _("immediate standby")),
@@ -54,11 +58,7 @@
 
 	config.usage.alternatives_priority = ConfigSelection(default = "0", choices = [
 		("0", "DVB-S/-C/-T"),
-		("1", "DVB-S/-T/-C"),
-		("2", "DVB-C/-S/-T"),
-		("3", "DVB-C/-T/-S"),
-		("4", "DVB-T/-C/-S"),
-		("5", "DVB-T/-S/-C") ])
+		("1", "DVB-S/-T/-C") ])
 
 	config.usage.blinking_display_clock_during_recording = ConfigYesNo(default = False)
 	config.usage.load_length_of_movies_in_moviellist = ConfigYesNo(default = True)
@@ -81,7 +81,7 @@
 
 	SystemInfo["12V_Output"] = Misc_Options.getInstance().detected_12V_output()
 
-	config.usage.keymap = ConfigText(default = "/usr/share/enigma2/keymap.xml")
+	config.usage.keymap = ConfigText(default = "/var/usr/local/share/enigma2/keymap.xml")
 
 	config.seek = ConfigSubsection()
 	config.seek.selfdefined_13 = ConfigNumber(default=15)

--- EVO/usr/lib/enigma2/python/Components/VolumeControl.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/VolumeControl.py	2009-09-13 00:05:39.507765000 +0200
@@ -11,25 +11,112 @@
 	"""Volume control, handles volUp, volDown, volMute actions and display
 	a corresponding dialog"""
 	def __init__(self, session):
+	        global is_silenced
+	        global pre_silence
+	        global post_silence
 		global globalActionMap
 		globalActionMap.actions["volumeUp"]=self.volUp
 		globalActionMap.actions["volumeDown"]=self.volDown
 		globalActionMap.actions["volumeMute"]=self.volMute
+		globalActionMap.actions["volumeCorrect"]=self.volCorrect
 
+                is_silenced = 0
 		config.audio = ConfigSubsection()
-		config.audio.volume = ConfigInteger(default = 100, limits = (0, 100))
+		config.audio.volume = ConfigInteger(default = 30, limits = (0, 100))
+		config.audio.volume_silenced = ConfigInteger(default = 100, limits = (10, 100))
+		config.audio.volume_max = ConfigInteger(default = 100, limits = (10, 100))
+		config.audio.volume_timeout = ConfigInteger(default = 2000, limits = (500, 5000))
 
 		self.volumeDialog = session.instantiateDialog(Volume)
 		self.muteDialog = session.instantiateDialog(Mute)
 
 		self.hideVolTimer = eTimer()
-		self.hideVolTimer.callback.append(self.volHide)
+		self.hideVolTimer.timeout.get().append(self.volHide)
 
 		vol = config.audio.volume.value
 		self.volumeDialog.setValue(vol)
 		self.volctrl = eDVBVolumecontrol.getInstance()
 		self.volctrl.setVolume(vol, vol)
 
+
+	def volCorrect(self):
+	        global is_silenced
+	        global pre_silence
+	        global post_silence
+		is_muted = self.volctrl.isMuted()
+		newvol=0
+		vol = self.volctrl.getVolume()
+		self.volumeDialog.show()
+                volcorr = config.audio.volume_silenced.value
+		maxvol = config.audio.volume_max.value
+                if volcorr == 100:
+                   # act like normal mute
+		   if is_muted:
+			self.volMute() # unmute
+	           else:
+			self.volMute(True, True) # mute and show mute symbol
+ 		   if self.volctrl.isMuted():
+ 			self.volumeDialog.setValue(0)
+		   else:
+		      if maxvol > vol:
+			 self.volumeDialog.setValue(self.volctrl.getVolume())
+		      else:
+			 self.volumeDialog.setValue(maxvol)
+	        else:
+                   # act as silencer
+		   if is_muted:
+		      self.volMute() # unmute
+                      if is_silenced:
+                         # switch back to pre silenced
+                         if vol == post_silence:
+                            # toggle volume back
+                            newvol = pre_silence 
+                         else:
+                            # volume was changed after silenced
+	                    newvol=int(vol*100/volcorr)
+	                 # remember that unsilenced
+	   	         is_silenced = 0
+		      else:
+		         newvol = vol
+		   elif not vol:
+		      self.volMute(False, True) # mute but dont show mute symbol
+ 		   else:
+                      volcorr = config.audio.volume_silenced.value
+                      if is_silenced:
+                         # do unsilence
+                         if vol == post_silence:
+                            # toggle volume back
+                            newvol = pre_silence 
+                         else:
+                            # volume was changed after silenced
+	                    newvol=int(vol*100/volcorr)
+	                 # remember that unsilenced
+	                 is_silenced = 0
+	              else:
+	                 # do silence
+	                 newvol=int(vol*volcorr/100)
+	                 # remember that silenced
+	                 is_silenced = 1
+                   pre_silence = vol
+		   if newvol > maxvol:
+		      newvol = maxvol
+	      	   while (vol > newvol):
+		      self.volctrl.volumeDown()
+		      vol = self.volctrl.getVolume()
+	      	   while (vol < newvol):
+		      self.volctrl.volumeUp()
+		      vol = self.volctrl.getVolume()
+		   self.volumeDialog.show()
+		   self.volumeDialog.setValue(self.volctrl.getVolume())
+	        self.volSave()
+	        post_silence = self.volctrl.getVolume()
+                hidevoltimeout = config.audio.volume_timeout.value
+                if hidevoltimeout < 500:
+                   hoidevoltimeout=2000
+                if hidevoltimeout > 5000:
+                   hoidevoltimeout=5000
+		self.hideVolTimer.start(hidevoltimeout, True)
+		
 	def volSave(self):
 		if self.volctrl.isMuted():
 			config.audio.volume.value = 0
@@ -44,8 +131,13 @@
 		self.setVolume(-1)
 
 	def setVolume(self, direction):
-		oldvol = self.volctrl.getVolume()
+		maxvol = config.audio.volume_max.value
+		vol = self.volctrl.getVolume()
+		while (vol > maxvol):
+			self.volctrl.volumeDown()
+		        vol = self.volctrl.getVolume()
 		if direction > 0:
+		   if (vol < maxvol):
 			self.volctrl.volumeUp()
 		else:
 			self.volctrl.volumeDown()
@@ -58,10 +150,18 @@
 			self.volMute(False, True) # mute but dont show mute symbol
 		if self.volctrl.isMuted():
 			self.volumeDialog.setValue(0)
-		else:
-			self.volumeDialog.setValue(self.volctrl.getVolume())
+ 		else:
+		   if maxvol > vol:
+ 			self.volumeDialog.setValue(self.volctrl.getVolume())
+		   else:
+			self.volumeDialog.setValue(maxvol)
 		self.volSave()
-		self.hideVolTimer.start(3000, True)
+                hidevoltimeout = config.audio.volume_timeout.value
+                if hidevoltimeout < 500:
+                   hoidevoltimeout=2000
+                if hidevoltimeout > 5000:
+                   hoidevoltimeout=5000
+		self.hideVolTimer.start(hidevoltimeout, True)
 
 	def volHide(self):
 		self.volumeDialog.hide()

--- EVO/usr/lib/enigma2/python/Components/Converter/ServiceInfo.py	2009-09-17 22:05:52.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Components/Converter/ServiceInfo.py	2009-06-04 08:13:05.000000000 +0200
@@ -18,7 +18,7 @@
 	TSID = 12
 	ONID = 13
 	SID = 14
-	
+	IS_HD = 15	
 
 	def __init__(self, type):
 		Converter.__init__(self, type)
@@ -38,6 +38,7 @@
 				"TsId": (self.TSID, (iPlayableService.evUpdatedInfo,)),
 				"OnId": (self.ONID, (iPlayableService.evUpdatedInfo,)),
 				"Sid": (self.SID, (iPlayableService.evUpdatedInfo,)),
+				"IsHD": (self.IS_HD, (iPlayableService.evVideoSizeChanged,)),
 			}[type]
 
 	def getServiceInfoString(self, info, what):
@@ -78,6 +79,13 @@
 		elif self.type == self.SUBSERVICES_AVAILABLE:
 			subservices = service.subServices()
 			return subservices and subservices.getNumberOfSubservices() > 0
+		elif self.type == self.IS_HD:
+			xresol = info.getInfo(iServiceInformation.sVideoWidth)
+			yresol = info.getInfo(iServiceInformation.sVideoHeight)
+			if (xresol > 750) or (yresol > 600):
+				return True
+			else:
+				return False
 
 	boolean = property(getBoolean)
 	
 	
--- EVO/usr/lib/enigma2/python/Plugins/Extensions/MediaPlayer/plugin.py	2009-09-17 22:05:50.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/MediaPlayer/plugin.py	2009-09-18 14:01:08.476767000 +0200
@@ -1101,11 +1101,6 @@
 def main(session, **kwargs):
 	session.open(MediaPlayer)
 
-def menu(menuid, **kwargs):
-	if menuid == "mainmenu":
-		return [(_("Media player"), main, "media_player", 45)]
-	return []
-
 def filescan_open(list, session, **kwargs):
 	from enigma import eServiceReference
 
@@ -1183,6 +1178,6 @@
 from Plugins.Plugin import PluginDescriptor
 def Plugins(**kwargs):
 	return [
-		PluginDescriptor(name = "MediaPlayer", description = "Play back media files", where = PluginDescriptor.WHERE_MENU, fnc = menu),
+		PluginDescriptor(name = "MediaPlayer", description = "Play back media files", where = PluginDescriptor.WHERE_PLUGINMENU, fnc = main),
 		PluginDescriptor(name = "MediaPlayer", where = PluginDescriptor.WHERE_FILESCAN, fnc = filescan)
 	]


--- EVO/usr/lib/enigma2/python/Plugins/Extensions/DVDPlayer/plugin.py	2009-09-17 22:05:50.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/DVDPlayer/plugin.py	2009-09-18 14:08:18.235765077 +0200
@@ -701,11 +701,6 @@
 def main(session, **kwargs):
 	session.open(DVDPlayer)
 
-def menu(menuid, **kwargs):
-	if menuid == "mainmenu":
-		return [(_("DVD Player"), main, "dvd_player", 46)]
-	return []
-
 from Plugins.Plugin import PluginDescriptor
 
 def filescan_open(list, session, **kwargs):
@@ -748,5 +743,5 @@
 		)]		
 
 def Plugins(**kwargs):
-	return [PluginDescriptor(name = "DVDPlayer", description = "Play DVDs", where = PluginDescriptor.WHERE_MENU, fnc = menu),
+	return [PluginDescriptor(name = "DVDPlayer", description = "Play DVDs", where = PluginDescriptor.WHERE_PLUGINMENU, fnc = main),
 		 	PluginDescriptor(where = PluginDescriptor.WHERE_FILESCAN, fnc = filescan)]


--- EVO/usr/local/share/enigma2/keymap.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/keymap.xml	2009-09-13 00:06:49.483807000 +0200
@@ -1,39 +1,20 @@
 <keymap>
 	<map context="ListboxActions">
-		<device name="keyboard">
-			<key id="a" mapto="up" flags="mr" />
-			<key id="b" mapto="down" flags="mr" />
-		</device>
 		<key id="KEY_UP" mapto="moveUp" flags="mr" />
 		<key id="KEY_DOWN" mapto="moveDown" flags="mr" />
-		<key id="KEY_REWIND" mapto="moveTop" flags="mr" />
-		<key id="KEY_FASTFORWARD" mapto="moveEnd" flags="mr" />
-		<key id="KEY_PAGEUP" mapto="pageUp" flags="mr" />
-		<key id="KEY_PAGEDOWN" mapto="pageDown" flags="mr" />
-		<key id="KEY_LEFT" mapto="pageUp" flags="mr" />
-		<key id="KEY_RIGHT" mapto="pageDown" flags="mr" />
-		
+		<key id="KEY_HOME" mapto="back" flags="mr" />
+		<key id="KEY_PAGEUP" mapto="pageUp" flags="mr" />
+		<key id="KEY_PAGEDOWN" mapto="pageDown" flags="mr" /> 
+		<key id="KEY_CHANNELUP" mapto="pageUp" flags="mr" />
+		<key id="KEY_CHANNELDOWN" mapto="pageDown" flags="mr" />
+		<!-- key id="KEY_LEFT" mapto="pageUp" flags="mr" /> -->
+		<!--<key id="KEY_RIGHT" mapto="pageDown" flags="mr" /-->
 		<key id="KEY_1" mapto="moveUp" flags="mr" />
 		<key id="KEY_2" mapto="moveDown" flags="mr" />
 	</map>
 	
-	<map context="KeyboardInputActions">
-		<key id="KEY_LEFT" mapto="left" flags="mr" />
-		<key id="KEY_RIGHT" mapto="right" flags="mr" />
-		<key id="KEY_HOME" mapto="home" flags="mr" />
-		<key id="KEY_END" mapto="end" flags="mr" />
-		<key id="KEY_BACK" mapto="home" flags="mr" />
-		<key id="KEY_FORWARD" mapto="end" flags="mr" />
-		<key id="KEY_DELETE" mapto="deleteForward" flags="mr" />
-		<key id="KEY_BACKSPACE" mapto="deleteBackward" flags="mr" />
-		<key id="KEY_TAB" mapto="tab" flags="mr" />
-		<key id="KEY_INSERT" mapto="toggleOverwrite" flags="m" />
-	</map>
-
 	<map context="SetupActions">
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 		<key id="KEY_LEFT" mapto="left" flags="mr" />
 		<key id="KEY_RIGHT" mapto="right" flags="mr" />
@@ -80,16 +61,17 @@
 	</map>
 
 	<map context="InfobarExtensions">
-		<key id="KEY_RED" mapto="extensions" flags="m" />
+		<key id="KEY_RED" mapto="evopanel" flags="m" />
+		<!--<key id="BTN_1" mapto="extensions" flags="m" /> -->
 	</map>
 	
 	<map context="InfobarChannelSelection">
-		<key id="KEY_LEFT" mapto="zapUp" flags="mr" />
-		<key id="KEY_RIGHT" mapto="zapDown" flags="mr" />
+		<key id="KEY_RIGHT" mapto="nextBouquet" flags="m" />
+		<key id="KEY_LEFT" mapto="prevBouquet" flags="m" />
 		<key id="KEY_PAGEUP" mapto="zapDown" flags="m" />
 		<key id="KEY_PAGEDOWN" mapto="zapUp" flags="m" />
-		<key id="KEY_UP" mapto="switchChannelUp" flags="mr" />
-		<key id="KEY_DOWN" mapto="switchChannelDown" flags="mr" />
+		<key id="KEY_UP" mapto="zapDown" flags="mr" />
+		<key id="KEY_DOWN" mapto="zapUp" flags="mr" />
 		<key id="KEY_REWIND" mapto="historyBack" flags="mr" />
 		<key id="KEY_FASTFORWARD" mapto="historyNext" flags="mr" />
 		<key id="KEY_OK" mapto="openServiceList" flags="m" />
@@ -99,8 +81,6 @@
 		<key id="KEY_UP" mapto="up" flags="mr" />
 		<key id="KEY_DOWN" mapto="down" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 	</map>
 
@@ -114,8 +94,6 @@
 		<key id="KEY_LEFT" mapto="left" flags="mr" />
 		<key id="KEY_RIGHT" mapto="right" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="back" flags="m" />
 		<key id="KEY_HOME" mapto="back" flags="m" />
 
 		<key id="KEY_FASTFORWARD" mapto="deleteForward" flags="mr" />
@@ -139,8 +117,6 @@
 		<key id="KEY_UP" mapto="up" flags="mr" />
 		<key id="KEY_DOWN" mapto="down" flags="mr" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="back" flags="m" />
 		<key id="KEY_HOME" mapto="back" flags="m" />
 	</map>
 	
@@ -154,8 +130,6 @@
 	
 	<map context="InfobarShowHideActions">
 		<key id="KEY_HELP" mapto="toggleShow" flags="m" />
-		<key id="KEY_ENTER" mapto="toggleShow" flags="m" />
-		<key id="KEY_EXIT" mapto="hide" flags="m" />
 		<key id="KEY_HOME" mapto="hide" flags="m" />
 	</map>
 
@@ -165,7 +139,6 @@
 		<!--key id="KEY_BLUE" mapto="showTv" flags="m" /-->
 	</map>
 
-
 	<map context="InfobarExtendedAudioSelectionActions">
 		<key id="KEY_YELLOW" mapto="audioSelection" flags="m" />
 	</map>
@@ -177,23 +150,15 @@
 	<map context="InfobarAspectSelectionActions">
 		<key id="KEY_GREEN" mapto="aspectSelection" flags="m" />
 	</map>
-	<map context="InfobarSubserviceSelectionActions">
-		<key id="KEY_GREEN" mapto="subserviceSelection" flags="b" />
-	</map>
 
 	<map context="InfobarSubserviceQuickzapActions">
-		<key id="KEY_PREVIOUS" mapto="prevSubservice" flags="m" />
-		<key id="KEY_NEXT" mapto="nextSubservice" flags="m" />
-		<key id="KEY_BACK" mapto="prevSubservice" flags="m" />
-		<key id="KEY_FORWARD" mapto="nextSubservice" flags="m" />
-		<key id="KEY_EXIT" mapto="exit" flags="m" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-
 	</map>
 
 	<map context="GlobalActions">
 		<key id="KEY_VOLUMEUP" mapto="volumeUp" flags="mr" />
 		<key id="KEY_VOLUMEDOWN" mapto="volumeDown" flags="mr" />
+		<key id="KEY_MUTE" mapto="volumeCorrect" flags="m" />
 		<key id="KEY_MUTE" mapto="volumeMute" flags="mr" />
 		<key id="KEY_POWER" mapto="power_long" flags="m" />
 	</map>
@@ -283,7 +248,7 @@
 	</map>
 	
 	<map context="MediaPlayerCueSheetActions">
-		<key id="KEY_0" mapto="toggleMark" flags="m" />
+			<key id="KEY_0" mapto="toggleMark" flags="m" />
 	</map>
 	
 	<map context="InfobarTeletextActions">
@@ -300,7 +265,6 @@
 		<key id="KEY_UP" mapto="prevPage" flags="mr" />
 		<key id="KEY_DOWN" mapto="nextPage" flags="mr" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-		<key id="KEY_ESC" mapto="exit" flags="m" />
 	</map>
 
 	<map context="ChannelSelectBaseActions">
@@ -310,6 +274,8 @@
 		<key id="KEY_BLUE" mapto="showFavourites" flags="m" />
 		<key id="KEY_REWIND" mapto="prevBouquet" flags="m" />
 		<key id="KEY_FASTFORWARD" mapto="nextBouquet" flags="m" />
+    		<key id="KEY_LEFT" mapto="prevBouquet" flags="mr" />
+		<key id="KEY_RIGHT" mapto="nextBouquet" flags="mr" />
 	</map>
 
 	<map context="ChannelSelectEPGActions">
@@ -323,6 +289,8 @@
 	<map context="TvRadioActions">
 		<key id="KEY_0" mapto="keyTV" flags="m" />
 		<key id="KEY_TEXT" mapto="keyRadio" flags="m" />
+		<key id="KEY_TV" mapto="keyTV" flags="m" />
+		<key id="KEY_RADIO" mapto="keyRadio" flags="m" />
 	</map>
 
 	<map context="TimerEditActions">
@@ -338,8 +306,6 @@
 		<key id="KEY_MENU" mapto="input_date_time" flags="m" />
 		<key id="KEY_CHANNELUP" mapto="nextBouquet" flags="m" />
 		<key id="KEY_CHANNELDOWN" mapto="prevBouquet" flags="m" />
-		<key id="KEY_NEXT" mapto="nextService" flags="m" />
-		<key id="KEY_PREVIOUS" mapto="prevService" flags="m" />
 	</map>
 
 	<map context="EventViewActions">
@@ -359,14 +325,7 @@
 	</map>
 
 	<map context="OkCancelActions">
-		<key id="\x0a" mapto="ok" flags="m" />
-		<key id="\x1b" mapto="cancel" flags="m" />
-
-		<!-- use this on rcu, ok? -->
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_EXIT" mapto="cancel" flags="m" />
-
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
 	</map>
 	
@@ -375,16 +334,6 @@
 		<key id="KEY_DOWN" mapto="down" flags="m" />
 		<key id="KEY_LEFT" mapto="left" flags="m" />
 		<key id="KEY_RIGHT" mapto="right" flags="m" />
-
-		<key id="KEY_UP" mapto="upRepeated" flags="r" />
-		<key id="KEY_DOWN" mapto="downRepeated" flags="r" />
-		<key id="KEY_LEFT" mapto="leftRepeated" flags="r" />
-		<key id="KEY_RIGHT" mapto="rightRepeated" flags="r" />
-		
-		<key id="KEY_LEFT" mapto="leftUp" flags="b" />
-		<key id="KEY_RIGHT" mapto="rightUp" flags="b" />
-		<key id="KEY_UP" mapto="upUp" flags="b" />
-		<key id="KEY_DOWN" mapto="downUp" flags="b" />
 	</map>
 	
 	<map context="ColorActions">
@@ -397,10 +346,8 @@
 	<map context="MsgBoxActions">
 		<key id="KEY_GREEN" mapto="alwaysOK" flags="m" />
 		<key id="KEY_OK" mapto="ok" flags="m" />
-		<key id="KEY_ENTER" mapto="ok" flags="m" />
 		<key id="KEY_RED" mapto="cancel" flags="m" />
 		<key id="KEY_HOME" mapto="cancel" flags="m" />
-		<key id="KEY_ESC" mapto="cancel" flags="m" />
 	</map>
 
 	<map context="WindowActions">
@@ -408,15 +355,9 @@
 	</map>
 	
 	<map context="HelpActions">
-		<!--key id="KEY_HELP" mapto="displayHelp" flags="m" -->
 	</map>
 
 	<map context="ShortcutActions">
-		<key id="KEY_F1" mapto="red" flags="mr" />
-		<key id="KEY_F2" mapto="yellow" flags="mr" />
-		<key id="KEY_F3" mapto="green" flags="mr" />
-		<key id="KEY_F4" mapto="blue" flags="mr" />
-
 		<key id="KEY_RED" mapto="red" flags="mr" />
 		<key id="KEY_YELLOW" mapto="yellow" flags="mr" />
 		<key id="KEY_GREEN" mapto="green" flags="mr" />
@@ -428,9 +369,7 @@
 	
 	<map context="SleepTimerEditorActions">
 		<key id="KEY_OK" mapto="select" flags="m" />
-		<key id="KEY_ENTER" mapto="select" flags="m" />
 		<key id="KEY_HOME" mapto="exit" flags="m" />
-		<key id="KEY_ESC" mapto="exit" flags="m" />
 		<key id="KEY_1" mapto="1" flags="m" />
 		<key id="KEY_2" mapto="2" flags="m" />
 		<key id="KEY_3" mapto="3" flags="m" />
@@ -468,9 +407,30 @@
 	</map>
 	
 	<map context="MediaPlayerActions">
+		<device name="dreambox remote control (native)">
+			<key id="KEY_YELLOW" mapto="pause" flags="m" />
+			<key id="KEY_GREEN" mapto="play" flags="m" />
+			<key id="KEY_TV" mapto="stop" flags="b" />
+			<key id="KEY_TV" mapto="shift_stop" flags="l" />
+			<key id="KEY_RADIO" mapto="shift_record" flags="l" />
+			<key id="KEY_PREVIOUS" mapto="previous" flags="m" />
+			<key id="KEY_NEXT" mapto="next" flags="m" />
+		</device>
+		<device name="dreambox advanced remote control (native)">
+			<key id="KEY_PLAYPAUSE" mapto="pause" flags="m" />
+			<key id="KEY_STOP" mapto="stop" flags="b" />
+			<key id="KEY_STOP" mapto="shift_stop" flags="l" />
+			<key id="KEY_RECORD" mapto="shift_record" flags="l" />
+			<key id="KEY_PREVIOUS" mapto="previous" flags="m" />
+			<key id="KEY_NEXT" mapto="next" flags="m" />
+			<key id="KEY_RED" mapto="previous" flags="m" />
+			<key id="KEY_BLUE" mapto="next" flags="m" />
+		</device>
 		<key id="KEY_PAUSE" mapto="pause" flags="m" />
 		<key id="KEY_PLAY" mapto="play" flags="m" />
 		<key id="KEY_STOP" mapto="stop" flags="b" />
+		<key id="KEY_LEFT" mapto="previous" flags="m" />
+		<key id="KEY_RIGHT" mapto="next" flags="m" />
 		
 		<key id="KEY_MENU" mapto="menu" flags="m" />
 
@@ -478,6 +438,6 @@
 		<key id="KEY_8" mapto="skipListend" flags="m" />
 		<key id="KEY_PAGEUP" mapto="nextBouquet" flags="m" />
 		<key id="KEY_PAGEDOWN" mapto="prevBouquet" flags="m" />
-		<key id="KEY_TEXT" mapto="subtitles" flags="m" />
+
 	</map>
 </keymap>


--- EVO/usr/local/share/enigma2/menu.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/menu.xml	2009-09-07 14:36:38.465829000 +0200
@@ -19,7 +19,6 @@
 		<!--<item text="Radio"><code>print "radio mode"</code></item>-->
 		<item level="0" text="Subtitles" entryID="subtitle_selection" weight="40"><screen module="Subtitles" screen="Subtitles" /></item>
 		<item level="0" text="Timer" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
-		<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
 
 		<menu level="0" text="Information" entryID="info_screen">
 			<id val="information" />
@@ -38,7 +37,7 @@
 			<menu weight="0" level="0" text="Service Searching" entryID="service_searching_selection">
 				<id val="scan" />
 				<item text="Tuner configuration" entryID="tuner_setup"><screen module="Satconfig" screen="NimSelection" /></item>
-				<item text="Default services lists" entryID="default_lists"><screen module="ScanSetup" screen="DefaultSatLists" /></item>
+				<!--<item text="Default services lists" entryID="default_lists"><screen module="ScanSetup" screen="DefaultSatLists" /></item>-->
 				<item text="Automatic Scan" entryID="auto_scan"><screen module="ScanSetup" screen="ScanSimple" /></item>
 				<!--<item text="Automatic Scan"><screen module="ServiceScan" /></item>-->
 				<item text="Manual Scan" entryID="manual_scan"><screen module="ScanSetup" /></item>
@@ -73,9 +72,10 @@
 				<item level="2" text="Timeshift path..." entryId="timeshift_path"><screen module="LocationBox" screen="TimeshiftLocationBox" /></item>
 			</menu>
 			<item weight="10" level="1" text="Common Interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection" /></item>
-			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
-			<!--item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
-			<item weight="20" level="0" text="Default settings" entryID="default_wizard">
+			<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
+			<!--<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
+			<item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
+			<!--<item weight="20" level="0" text="Default settings" entryID="default_wizard">
 				<code>
 from Screens.DefaultWizard import DefaultWizard
 self.session.open(DefaultWizard, silent = False)
@@ -92,7 +92,7 @@
 		_exit(0)
 self.session.openWithCallback(msgClosed, FactoryReset)
 </code>
-			</item>
+			</item>-->
 			<!--<item text="Parental Control"><setup id="parental" /></item>-->
 			<!--<item text="Expert -disabled-"><setup id="expert" /></item>-->
 		</menu>


--- EVO/usr/local/share/enigma2/setup.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/setup.xml	2009-09-13 00:06:55.467768000 +0200
@@ -31,6 +31,9 @@
 			<item level="1" text="Alternative radio mode">config.usage.e1like_radio_mode</item>
 			<item level="1" text="Action on long powerbutton press">config.usage.on_long_powerpress</item>
 			<item level="0" text="Infobar timeout">config.usage.infobar_timeout</item>
+			<item level="0" text="maximum Volume">config.audio.volume_max</item>
+			<item level="0" text="silenced Volume">config.audio.volume_silenced</item>
+			<item level="0" text="Volume timeout">config.audio.volume_timeout</item>
 			<item level="1" text="12V output" requires="12V_Output">config.usage.output_12V</item>
 			<item level="2" text="Show infobar on channel change">config.usage.show_infobar_on_zap</item>
 			<item level="2" text="Show infobar on skip forward/backward">config.usage.show_infobar_on_skip</item>


--- EVO/usr/local/share/enigma2/startwizard.xml	2009-09-17 22:05:54.000000000 +0200
+++ EVO/usr/local/share/enigma2/startwizard.xml	2009-09-07 14:47:51.157685000 +0200
@@ -44,7 +44,7 @@
 self.selectKey("RIGHT")
 			</code>
 		</step>
-		<step id="nimc">
+<!--		<step id="nimc">
 			<condition>
 from Components.NimManager import nimmanager
 self.condition = len(nimmanager.nim_slots) > 2 and not nimmanager.nim_slots[2].empty and config.misc.startwizard.shownimconfig.value
@@ -159,7 +159,7 @@
 			</code>
 
 			<text value="After the start wizard is completed, you need to protect single services. Refer to your dreambox's manual on how to do that." />
-		</step>
+		</step>-->
 		<step id="end">
 			<text value="Thank you for using the wizard. Your box is now ready to use.\nPlease press OK to start using your Dreambox." />
 		</step>

--- EVO/usr/lib/enigma2/python/Plugins/Extensions/GraphMultiEPG/plugin.py	2009-09-21 21:42:04.267784481 +0200
+++ EVO/usr/lib/enigma2/python/Plugins/Extensions/GraphMultiEPG/plugin.py	2009-09-21 21:41:13.963784395 +0200
@@ -94,5 +94,4 @@
 def Plugins(**kwargs):
 	name = _("Graphical Multi EPG")
 	descr = _("A graphical EPG for all services of an specific bouquet")
- 	return [ PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EVENTINFO, fnc=main),
-	  PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EXTENSIONSMENU, fnc=main) ]
+ 	return [ PluginDescriptor(name=name, description=descr, where = PluginDescriptor.WHERE_EVENTINFO, fnc=main) ]

--- EVO/usr/lib/enigma2/python/Screens/InfoBarGenerics.py	2009-09-19 14:45:24.000000000 +0200
+++ EVO/usr/lib/enigma2/python/Screens/InfoBarGenerics.py	1970-01-01 01:00:00.000000000 +0100
@@ -290,6 +290,8 @@
 				"zapDown": (self.zapDown, _("next channel")),
 				"historyBack": (self.historyBack, _("previous channel in history")),
 				"historyNext": (self.historyNext, _("next channel in history")),
+				"prevBouquet": (self.prevBouquet, _("previous bouquet")),
+				"nextBouquet": (self.nextBouquet, _("next bouquet")),
 				"openServiceList": (self.openServiceList, _("open servicelist")),
 			})
 
@@ -328,6 +330,16 @@
 	def openServiceList(self):
 		self.session.execDialog(self.servicelist)
 
+	def prevBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.prevBouquet()
+			self.servicelist.zap()
+
+	def nextBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.nextBouquet()
+			self.servicelist.zap()
+
 	def zapUp(self):
 		if self.servicelist.inBouquet():
 			prev = self.servicelist.getCurrentSelection()
@@ -1275,7 +1287,17 @@
 		self["InstantExtensionsActions"] = HelpableActionMap(self, "InfobarExtensions",
 			{
 				"extensions": (self.showExtensionSelection, _("view extensions...")),
-			}, 1) # lower priority
+# ------------------ Extra-Menu Patch Red----------------
+				"evopanel": (self.callEVOPanelRed, _("view EVOPanel...")),
+			}, 1)
+
+	def callEVOPanelRed(self):
+                from Plugins.Extensions.EVOPanel.plugin import EVOPanelButton, EVOPanelServiceList, EVOPanel
+	        EVOPanelButton(self,"red")
+	        EVOPanelServiceList(self,self.servicelist)
+		self.session.open(EVOPanel)
+                EVOPanelButton(self,"")
+# ------------------ Extra-Menu Patch Red----------------
 
 	def addExtension(self, extension, key = None, type = EXTENSION_SINGLE):
 		self.list.append((type, extension, key))
@@ -2558,7 +2580,6 @@
 			eDVBServicePMTHandler.eventNoResources: _("No free tuner!"),
 			eDVBServicePMTHandler.eventTuneFailed: _("Tune failed!"),
 			eDVBServicePMTHandler.eventNoPAT: _("No data on transponder!\n(Timeout reading PAT)"),
-			eDVBServicePMTHandler.eventNoPATEntry: _("Service not found!\n(SID not found in PAT)"),
 			eDVBServicePMTHandler.eventNoPMT: _("Service invalid!\n(Timeout reading PMT)"),
 			eDVBServicePMTHandler.eventNewProgramInfo: None,
 			eDVBServicePMTHandler.eventTuned: None,

--- EVO/usr/lib/enigma2/python/Components/Renderer/Progress.py	2009-11-15 11:12:02.000000000 +0100
+++ EVO/usr/lib/enigma2/python/Components/Renderer/Progress.py	2009-11-24 11:25:12.528756000 +0100
@@ -13,31 +13,40 @@
 	GUI_WIDGET = eSlider
 
 	def changed(self, what):
-		if what[0] == self.CHANGED_CLEAR:
-			(self.range, self.value) = ((0, 1), 0)
-			return
+		try:
+			if what[0] == self.CHANGED_CLEAR:
+				(self.range, self.value) = ((0, 1), 0)
+				return
 
 #--->
-#-		range = self.source.range or 100 
-#-		value = self.source.value 
+#-			range = self.source.range or 100 
+#-			value = self.source.value 
 #---<
 #+++>
-		range = (self.source and self.source.range) or 100
-		value = (self.source and self.source.value) or 0
+			range = (self.source and self.source.range) or 100
+			value = (self.source and self.source.value) or 0
 #+++<
-		if value is None:
-			value = 0
-		(self.range, self.value) = ((0, range), value)
+			if value is None:
+				value = 0
+			(self.range, self.value) = ((0, range), value)
+		except:
+			None
 
 	GUI_WIDGET = eSlider
 
 	def postWidgetCreate(self, instance):
-		instance.setRange(self.__start, self.__end)
+		try:
+			instance.setRange(self.__start, self.__end)
+		except:
+			pass
 
 	def setRange(self, range):
-		(self.__start, self.__end) = range
-		if self.instance is not None:
-			self.instance.setRange(self.__start, self.__end)
+		try:
+			(self.__start, self.__end) = range
+			if self.instance is not None:
+				self.instance.setRange(self.__start, self.__end)
+		except:
+			pass
 
 	def getRange(self):
 		return (self.__start, self.__end)
