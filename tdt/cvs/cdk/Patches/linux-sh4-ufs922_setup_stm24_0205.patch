--- a/arch/sh/boards/mach-mb448/setup.c	2011-02-13 23:17:08.000000000 +0100
+++ b/arch/sh/boards/mach-mb448/setup.c	2011-02-16 16:43:58.000000000 +0100
@@ -19,6 +19,7 @@
 #include <linux/mtd/physmap.h>
 #include <linux/stm/platform.h>
 #include <linux/stm/stx7100.h>
+#include <linux/bpa2.h>
 #include <asm/irl.h>
 
 
@@ -26,7 +27,25 @@
 #define MB448_PIO_SMC91X_RESET stm_gpio(2, 6)
 #define MB448_PIO_FLASH_VPP stm_gpio(2, 7)
 
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
 
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+      {
+	      .name  = "LMI_VID",
+	      .start = 0x10800000,
+	      .size  = 0x03800000,
+	      .flags = 0,
+	      .aka   = LMI_VID_partalias
+      },
+      {
+	      .name  = "LMI_SYS",
+	      .start = 0,
+	      .size  = 0x01600000,
+	      .flags = 0,
+	      .aka   = LMI_SYS_partalias
+      }
+};
 
 void __init mb448_setup(char **cmdline_p)
 {
@@ -37,12 +56,18 @@
 	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
 			.hw_flow_control = 0,
 			.is_console = 1, });
+ 
+ /* Dagobert: ufs922 uses the micom device 
+  * so we dont need uart3
+  */
+/*
 	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
 			.hw_flow_control = 0,
 			.is_console = 0, });
-}
-
+*/
 
+  	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}
 
 static struct resource mb448_smc91x_resources[] = {
 	[0] = {
@@ -124,7 +149,10 @@
 	stx7100_configure_sata();
 
 	stx7100_configure_ssc_i2c(0);
+/*	
 	stx7100_configure_ssc_spi(1, NULL);
+*/
+	stx7100_configure_ssc_i2c(1);	
 	stx7100_configure_ssc_i2c(2);
 
 	stx7100_configure_usb();
@@ -137,14 +165,14 @@
 	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
 	gpio_direction_output(MB448_PIO_FLASH_VPP, 0);
 
-	/* Reset the SMSC 91C111 Ethernet chip */
+	/* Reset the SMSC 91C111 Ethernet chip 
 	gpio_request(MB448_PIO_SMC91X_RESET, "SMC91x reset");
 	gpio_direction_output(MB448_PIO_SMC91X_RESET, 0);
 	udelay(1);
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 1);
 	udelay(1);
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 0);
-
+*/
 	return platform_add_devices(mb448_devices,
 			ARRAY_SIZE(mb448_devices));
 }
