--- enigma2-nightly.org/data/menu.xml	2011-10-30 11:06:40.252808194 +0100
+++ enigma2-nightly/data/menu.xml	2011-10-30 11:06:28.448749659 +0100
@@ -18,7 +18,7 @@
 		<!--<item text="CI"><screen module="Ci" screen="CiSelection" /></item>-->
 		<!--<item text="Radio"><code>print "radio mode"</code></item>-->
 		<item level="0" text="Timer" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
-		<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
+		<!--<item level="1" text="VCR scart" entryID="scart_switch" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>-->
 
 		<menu level="0" text="Information" entryID="info_screen">
 			<id val="information" />
@@ -64,7 +64,7 @@
 				<item level="0" text="Network" entryID="network_setup"><screen module="NetworkSetup" screen="NetworkAdapterSelection" /></item>
 				<item level="1" text="Input devices" entryID="input_device_setup"><screen module="InputDeviceSetup" screen="InputDeviceSelection" /></item>
 				<item requires="Display"><setup level="1" id="lcd" /></item>
-				<item text="Keyboard"><setup id="keyboard" /></item>
+				<!--<item text="Keyboard"><setup id="keyboard" /></item>-->
 				<!--<menu level="1" text="Network..." entryID="network_setup">
 					<id val="network" />
 					<item level="1" text="Device Setup..." entryID="device_setup"><screen module="NetworkSetup" screen="NetworkAdapterSelection"/></item>
@@ -72,7 +72,7 @@
 				</menu>-->
 				<item level="2" text="Recording paths" entryId="RecordPaths"><screen module="RecordPaths" screen="RecordPathsSettings" /></item>
 			</menu>
-			<item weight="10" level="1" text="Common Interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection" /></item>
+			<!--<item weight="10" level="1" text="Common Interface" entryID="ci_setup" requires="CommonInterface"><screen module="Ci" screen="CiSelection" /></item>-->
 			<item weight="15" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>
 			<!--item level="0" text="Startwizard" entryID="startwizzard"><screen module="StartWizard" screen="StartWizard" /></item-->
 			<item weight="25" level="0" text="Factory reset" entryID="factory_reset">

--- enigma2-nightly.org/lib/python/Screens/About.py	2011-10-09 16:27:00.873040403 +0200
+++ enigma2-nightly/lib/python/Screens/About.py	2011-10-09 16:26:44.828960832 +0200
@@ -12,7 +12,7 @@
 		Screen.__init__(self, session)
 
 		self["EnigmaVersion"] = StaticText("Enigma: " + about.getEnigmaVersionString())
-		self["ImageVersion"] = StaticText("Image: " + about.getImageVersionString())
+		self["ImageVersion"] = StaticText("Evolution: " + about.getImageVersionString())
 
 		self["TunerHeader"] = StaticText(_("Detected NIMs:"))

--- enigma2-nightly.org/lib/python/Components/Language.py	2011-10-07 19:08:57.371873384 +0200
+++ enigma2-nightly/lib/python/Components/Language.py	2011-10-07 19:09:07.563923919 +0200
@@ -15,33 +15,9 @@
 		# also, see "precalcLanguageList" below on how to re-create the language cache after you added a language
 		self.addLanguage(_("English"), "en", "EN")
 		self.addLanguage(_("German"), "de", "DE")
-		self.addLanguage(_("Arabic"), "ar", "AE")
-		self.addLanguage(_("Catalan"), "ca", "AD")
-		self.addLanguage(_("Croatian"), "hr", "HR")
-		self.addLanguage(_("Czech"), "cs", "CZ")
-		self.addLanguage(_("Danish"), "da", "DK")
-		self.addLanguage(_("Dutch"), "nl", "NL")
-		self.addLanguage(_("Estonian"), "et", "EE")
-		self.addLanguage(_("Finnish"), "fi", "FI")
-		self.addLanguage(_("French"), "fr", "FR")
-		self.addLanguage(_("Greek"), "el", "GR")
-		self.addLanguage(_("Hungarian"), "hu", "HU")
-		self.addLanguage(_("Lithuanian"), "lt", "LT")
-		self.addLanguage(_("Latvian"), "lv", "LV")
-		self.addLanguage(_("Icelandic"), "is", "IS")
-		self.addLanguage(_("Italian"), "it", "IT")
 		self.addLanguage(_("Norwegian"), "no", "NO")
 		self.addLanguage(_("Polish"), "pl", "PL")
-		self.addLanguage(_("Portuguese"), "pt", "PT")
 		self.addLanguage(_("Russian"), "ru", "RU")
-		self.addLanguage(_("Serbian"), "sr", "YU")
-		self.addLanguage(_("Slovakian"), "sk", "SK")
-		self.addLanguage(_("Slovenian"), "sl", "SI")
-		self.addLanguage(_("Spanish"), "es", "ES")
-		self.addLanguage(_("Swedish"), "sv", "SE")
-		self.addLanguage(_("Turkish"), "tr", "TR")
-		self.addLanguage(_("Ukrainian"), "uk", "UA")
-		self.addLanguage(_("Frisian"), "fy", "x-FY") # there is no separate country for frisian
 
 		self.callbacks = []

--- enigma2-nightly.org/lib/python/Screens/InfoBar.py	2011-10-03 23:01:44.000000000 +0200
+++ enigma2-nightly/lib/python/Screens/InfoBar.py	2011-10-04 15:26:13.818571915 +0200
@@ -53,7 +53,10 @@
 #+++>
 				"toogleTvRadio": (self.toogleTvRadio, _("toggels betwenn tv and radio...")), 
 				"volumeUp": (self._volUp, _("...")), 
-				"volumeDown": (self._volDown, _("...")), 
+				"volumeDown": (self._volDown, _("...")),
+# ------------------ Extra-Menu Patch Blue----------------
+				"pinkpanel": (self.callPinkPanelBlue, _("view PinkPanel...")),
+# ------------------ Extra-Menu Patch Blue----------------
 #+++<
 			}, prio=2)
 		
@@ -91,7 +94,13 @@
 		from Components.config import config, ConfigSubsection, ConfigInteger
 		config.audio = ConfigSubsection()
 		config.audio.volume = ConfigInteger(default = 100, limits = (0, 100))
-		
+# ------------------ Extra-Menu Patch Blue----------------
+	def callPinkPanelBlue(self):
+                from Plugins.Extensions.PinkPanel.plugin import PinkPanelMenu, PinkPanelButton
+	        PinkPanelButton(self,"blue")
+		self.session.open(PinkPanelMenu)
+                PinkPanelButton(self,"")
+# ------------------ Extra-Menu Patch Blue----------------		
 	def volHide(self):
 		self.volumeDialog.hide()

--- enigma2-nightly.org/lib/python/Screens/InfoBarGenerics.py	2011-10-03 23:01:44.000000000 +0200
+++ enigma2-nightly/lib/python/Screens/InfoBarGenerics.py	2011-10-04 20:39:10.978171232 +0200
@@ -328,6 +328,8 @@
 				"zapDown": (self.zapDown, _("next channel")),
 				"historyBack": (self.historyBack, _("previous channel in history")),
 				"historyNext": (self.historyNext, _("next channel in history")),
+				"prevBouquet": (self.prevBouquet, _("previous bouquet")),
+				"nextBouquet": (self.nextBouquet, _("next bouquet")),
 				"openServiceList": (self.openServiceList, _("open servicelist")),
 			})
 
@@ -366,6 +368,16 @@
 	def openServiceList(self):
 		self.session.execDialog(self.servicelist)
 
+	def prevBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.prevBouquet()
+			self.servicelist.zap()
+
+	def nextBouquet(self):
+		if self.servicelist.inBouquet():
+			self.servicelist.nextBouquet()
+			self.servicelist.zap()
+
 	def zapUp(self):
 		if self.servicelist.inBouquet():
 			prev = self.servicelist.getCurrentSelection()
@@ -2290,7 +2302,6 @@
 			eDVBServicePMTHandler.eventNoResources: _("No free tuner!"),
 			eDVBServicePMTHandler.eventTuneFailed: _("Tune failed!"),
 			eDVBServicePMTHandler.eventNoPAT: _("No data on transponder!\n(Timeout reading PAT)"),
-			eDVBServicePMTHandler.eventNoPATEntry: _("Service not found!\n(SID not found in PAT)"),
 			eDVBServicePMTHandler.eventNoPMT: _("Service invalid!\n(Timeout reading PMT)"),
 			eDVBServicePMTHandler.eventNewProgramInfo: None,
 			eDVBServicePMTHandler.eventTuned: None,

--- enigma2-nightly.org/lib/python/Components/Harddisk.py	2011-11-02 14:06:14.129546161 +0100
+++ enigma2-nightly/lib/python/Components/Harddisk.py	2011-11-02 14:05:59.077471517 +0100
@@ -22,30 +22,29 @@
 	return procFile
 #+++<
 
-def MajorMinor(path):
-	rdev = stat(path).st_rdev
-	return (major(rdev),minor(rdev))
-
 def readFile(filename):
 	file = open(filename)
 	data = file.read().strip()
 	file.close()
 	return data
 
-DEVTYPE_UDEV = 0
-DEVTYPE_DEVFS = 1
-	
 class Harddisk:
+	DEVTYPE_UDEV = 0
+	DEVTYPE_DEVFS = 1
+
 	def __init__(self, device):
 		self.device = device
 
-		if access("/dev/.udev", 0):
-			self.type = DEVTYPE_UDEV
-		elif access("/dev/.devfsd", 0):
-			self.type = DEVTYPE_DEVFS
-		else:
-			print "Unable to determine structure of /dev"
-
+#--->
+#-		if access("/dev/.udev", 0):
+#-			self.type = self.DEVTYPE_UDEV
+#-		elif access("/dev/.devfsd", 0):
+#-			self.type = self.DEVTYPE_DEVFS
+#-		else:
+#-			print "Unable to determine structure of /dev"
+#+++>
+		self.type = self.DEVTYPE_UDEV
+#+++<
 		self.max_idle_time = 0
 		self.idle_running = False
 		self.timer = None
@@ -54,11 +53,11 @@
 		self.disk_path = ''
 		self.phys_path = path.realpath(self.sysfsPath('device'))
 
-		if self.type == DEVTYPE_UDEV:
+		if self.type == self.DEVTYPE_UDEV:
 			self.dev_path = '/dev/' + self.device
 			self.disk_path = self.dev_path
 
-		elif self.type == DEVTYPE_DEVFS:
+		elif self.type == self.DEVTYPE_DEVFS:
 			tmp = readFile(self.sysfsPath('dev')).split(':')
 			s_major = int(tmp[0])
 			s_minor = int(tmp[1])
@@ -81,9 +80,9 @@
 		return self.device < ob.device
 
 	def partitionPath(self, n):
-		if self.type == DEVTYPE_UDEV:
+		if self.type == self.DEVTYPE_UDEV:
 			return self.dev_path + n
-		elif self.type == DEVTYPE_DEVFS:
+		elif self.type == self.DEVTYPE_DEVFS:
 			return self.dev_path + '/part' + n
 
 	def sysfsPath(self, filename):
@@ -96,9 +95,9 @@
 
 	def bus(self):
 		# CF (7025 specific)
-		if self.type == DEVTYPE_UDEV:
+		if self.type == self.DEVTYPE_UDEV:
 			ide_cf = False	# FIXME
-		elif self.type == DEVTYPE_DEVFS:
+		elif self.type == self.DEVTYPE_DEVFS:
 			ide_cf = self.device[:2] == "hd" and "host0" not in self.dev_path
 
 		internal = "pci" in self.phys_path
@@ -146,20 +145,18 @@
 
 		for line in lines:
 			parts = line.strip().split(" ")
-			real_path = path.realpath(parts[0])
-			if not real_path[-1].isdigit():
-				continue
-			try:
-				if MajorMinor(real_path) == MajorMinor(self.partitionPath(real_path[-1])):
+			if path.realpath(parts[0]).startswith(self.dev_path):
+				try:
 					stat = statvfs(parts[1])
-					return stat.f_bfree/1000 * stat.f_bsize/1000
-			except OSError:
-				pass
+				except OSError:
+					continue
+				return stat.f_bfree/1000 * stat.f_bsize/1000
+
 		return -1
 
 	def numPartitions(self):
 		numPart = -1
-		if self.type == DEVTYPE_UDEV:
+		if self.type == self.DEVTYPE_UDEV:
 			try:
 				devdir = listdir('/dev')
 			except OSError:
@@ -168,7 +165,7 @@
 				if filename.startswith(self.device):
 					numPart += 1
 
-		elif self.type == DEVTYPE_DEVFS:
+		elif self.type == self.DEVTYPE_DEVFS:
 			try:
 				idedir = listdir(self.dev_path)
 			except OSError:
@@ -191,28 +188,25 @@
 
 		cmd = "umount"
 
-                for line in lines:                                                                          
-                        parts = line.strip().split(" ")                                                     
-                        real_path = path.realpath(parts[0])                                                 
-                        if not real_path[-1].isdigit():                                                     
-                                continue                                                                    
-                        try:                                                                                
-                                if MajorMinor(real_path) == MajorMinor(self.partitionPath(real_path[-1])):
+		for line in lines:
+			parts = line.strip().split(" ")
+			if path.realpath(parts[0]).startswith(self.dev_path):
 #--->			
-#-					cmd = ' ' . join([cmd, parts[1]])
+#-				cmd = ' ' . join([cmd, parts[1]])
 #---<
 #+++>
-					cmd = ' -fl ' . join([cmd, parts[1]])
+				cmd = ' -fl ' . join([cmd, parts[1]])
 #+++<
-					break
-			except OSError:
-				pass
-
 		res = system(cmd)
 		return (res >> 8)
 
 	def createPartition(self):
+#--->
+#-		cmd = 'printf "0,\n;\n;\n;\ny\n" | sfdisk -f ' + self.disk_path
+#---<
+#+++>
 		cmd = 'echo "0,\n;\n;\n;\ny\n" | sfdisk -f ' + self.disk_path
+#+++<
 		res = system(cmd)
 		return (res >> 8)
 
@@ -247,16 +241,10 @@
 		res = -1
 		for line in lines:
 			parts = line.strip().split(" ")
-                        real_path = path.realpath(parts[0])                                                 
-                        if not real_path[-1].isdigit():                                                     
-                                continue                                                                    
-                        try:                                                                                
-                                if MajorMinor(real_path) == MajorMinor(self.partitionPath(real_path[-1])):
-					cmd = "mount -t ext3 " + parts[0]
-					res = system(cmd)
-					break
-			except OSError:
-				pass
+			if path.realpath(parts[0]) == self.partitionPath("1"):
+				cmd = "mount -t ext3 " + parts[0]
+				res = system(cmd)
+				break
 
 		return (res >> 8)
 
@@ -457,52 +445,46 @@
 				return True
 		return False
 
-DEVICEDB_SR = \
-	{"dm8000":
-		{
-			"/devices/pci0000:01/0000:01:00.0/host0/target0:0:0/0:0:0:0": _("DVD Drive"),
-			"/devices/pci0000:01/0000:01:00.0/host1/target1:0:0/1:0:0:0": _("DVD Drive"),
-			"/devices/platform/brcm-ehci-1.1/usb2/2-1/2-1:1.0/host3/target3:0:0/3:0:0:0": _("DVD Drive"),
-		},
-	"dm800":
-	{
-	},
-	"dm7025":
-	{
-	}
-	}
-
-DEVICEDB = \
-	{"ufs910":
+#--->
+#-DEVICEDB =  \
+#-	{"dm8000":
+#-		{
+#-			# dm8000:
+#-			"/devices/platform/brcm-ehci.0/usb1/1-1/1-1.1/1-1.1:1.0": "Front USB Slot",
+#-			"/devices/platform/brcm-ehci.0/usb1/1-1/1-1.2/1-1.2:1.0": "Back, upper USB Slot",
+#-			"/devices/platform/brcm-ehci.0/usb1/1-1/1-1.3/1-1.3:1.0": "Back, lower USB Slot",
+#-			"/devices/platform/brcm-ehci-1.1/usb2/2-1/2-1:1.0/host1/target1:0:0/1:0:0:0": "DVD Drive",
+#-		},
+#-	"dm800":
+#-	{
+#-		# dm800:
+#-		"/devices/platform/brcm-ehci.0/usb1/1-2/1-2:1.0": "Upper USB Slot",
+#-		"/devices/platform/brcm-ehci.0/usb1/1-1/1-1:1.0": "Lower USB Slot",
+#-	},
+#-	"dm7025":
+#-	{
+#-		# dm7025:
+#-		"/devices/pci0000:00/0000:00:14.1/ide1/1.0": "CF Card Slot", #hdc
+#-		"/devices/pci0000:00/0000:00:14.1/ide0/0.0": "Internal Harddisk"
+#-	}
+#-	}
+#---<
+#+++>
+DEVICEDB =  \
+	{"spark":
 		{
-			"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.4/1-1.4:1.0": "Front USB Slot",
-			"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.3/1-1.3:1.0": "Back, upper USB Slot",
-			"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.2/1-1.2:1.0": "Back, lower USB Slot",
-		},
-	"dm800":
-	{
-		"/devices/platform/brcm-ehci.0/usb1/1-2/1-2:1.0": "Upper USB Slot",
-		"/devices/platform/brcm-ehci.0/usb1/1-1/1-1:1.0": "Lower USB Slot",
-	},
-	"dm7025":
-	{
-		"/devices/pci0000:00/0000:00:14.1/ide1/1.0": "CF Card Slot", #hdc
-		"/devices/pci0000:00/0000:00:14.1/ide0/0.0": "Internal Harddisk",
-	},
-	"UFS922":
-	{
-		"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.1/1-1.1:1.0/": "Back, upper USB Slot",
-		"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.2/1-1.2:1.0/": "Back, lower USB Slot",
-		"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.3/1-1.3:1.0/": "Front USB Slot",
-	}
+			"/devices/platform/st-usb.0/stm-ehci.0/usb1/1-1/1-1:1.0": "USB Slot"
+#			"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.3/1-1.3:1.0": "Back, upper USB Slot",
+#			"/devices/platform/ST40-ehci.2/usb1/1-1/1-1.2/1-1.2:1.0": "Back, lower USB Slot",
+		}
 	}
+#+++<
 
 class HarddiskManager:
 	def __init__(self):
 		self.hdd = [ ]
 		self.cd = ""
 		self.partitions = [ ]
-		self.devices_scanned_on_init = [ ]
 
 		self.on_partition_list_change = CList()
 
@@ -575,23 +557,24 @@
 	def enumerateBlockDevices(self):
 		print "enumerating block devices..."
 		for blockdev in listdir("/sys/block"):
-			error, blacklisted, removable, is_cdrom, partitions, medium_found = self.addHotplugPartition(blockdev)
-			if not error and not blacklisted:
-				if medium_found:
-					for part in partitions:
-						self.addHotplugPartition(part)
-				self.devices_scanned_on_init.append((blockdev, removable, is_cdrom, medium_found))
+			error, blacklisted, removable, is_cdrom, partitions, medium_found = self.getBlockDevInfo(blockdev)
+			print "found block device '%s':" % blockdev, 
+			if error:
+				print "error querying properties"
+			elif blacklisted:
+				print "blacklisted"
+			elif not medium_found:
+				print "no medium"
+			else:
+				print "ok, removable=%s, cdrom=%s, partitions=%s, device=%s" % (removable, is_cdrom, partitions, blockdev)
+
+				self.addHotplugPartition(blockdev)
+				for part in partitions:
+					self.addHotplugPartition(part)
 
 	def getAutofsMountpoint(self, device):
 		return "/autofs/%s/" % (device)
 
-	def is_hard_mounted(self, device):
-		mounts = file('/proc/mounts').read().split('\n')
-		for x in mounts:
-			if x.find('/autofs') == -1 and x.find(device) != -1:
-				return True
-		return False
-
 	def addHotplugPartition(self, device, physdev = None):
 		if not physdev:
 			dev, part = self.splitDeviceName(device)
@@ -608,36 +591,22 @@
 			#Automount(device,"mount")
 #+++<		
 
-		error, blacklisted, removable, is_cdrom, partitions, medium_found = self.getBlockDevInfo(device)
-		print "found block device '%s':" % device,
-
-		if blacklisted:
-			print "blacklisted"
-		else:
-			if error:
-				print "error querying properties"
-			elif not medium_found:
-				print "no medium"
-			else:
-				print "ok, removable=%s, cdrom=%s, partitions=%s" % (removable, is_cdrom, partitions)
-
-			l = len(device)
-			if l:
-				# see if this is a harddrive
-				if not device[l-1].isdigit() and not removable and not is_cdrom:
-					self.hdd.append(Harddisk(device))
-					self.hdd.sort()
-					SystemInfo["Harddisk"] = len(self.hdd) > 0
-
-				if (not removable or medium_found) and not self.is_hard_mounted(device):
-					# device is the device name, without /dev
-					# physdev is the physical device path, which we (might) use to determine the userfriendly name
-					description = self.getUserfriendlyDeviceName(device, physdev)
-					p = Partition(mountpoint = self.getAutofsMountpoint(device), description = description, force_mounted = True, device = device)
-					self.partitions.append(p)
-					self.on_partition_list_change("add", p)
+		# device is the device name, without /dev
+		# physdev is the physical device path, which we (might) use to determine the userfriendly name
+		description = self.getUserfriendlyDeviceName(device, physdev)
+
+		p = Partition(mountpoint = self.getAutofsMountpoint(device), description = description, force_mounted = True, device = device)
+		self.partitions.append(p)
+		self.on_partition_list_change("add", p)
 
-		return error, blacklisted, removable, is_cdrom, partitions, medium_found
+		# see if this is a harddrive
+		l = len(device)
+		if l and not device[l-1].isdigit():
+			error, blacklisted, removable, is_cdrom, partitions, medium_found = self.getBlockDevInfo(device)
+			if not blacklisted and not is_cdrom and medium_found:
+				self.hdd.append(Harddisk(device))
+				self.hdd.sort()
+				SystemInfo["Harddisk"] = len(self.hdd) > 0
 
 	def removeHotplugPartition(self, device):
 		mountpoint = self.getAutofsMountpoint(device)
@@ -701,23 +670,15 @@
 	def getUserfriendlyDeviceName(self, dev, phys):
 		dev, part = self.splitDeviceName(dev)
 		description = "External Storage %s" % dev
-		have_model_descr = False
 		try:
 			description = readFile("/sys" + phys + "/model")
-			have_model_descr = True
 		except IOError, s:
 			print "couldn't read model: ", s
 		from Tools.HardwareInfo import HardwareInfo
-		if dev.find('sr') == 0 and dev[2].isdigit():
-			devicedb = DEVICEDB_SR
-		else:
-			devicedb = DEVICEDB
-		for physdevprefix, pdescription in devicedb.get(HardwareInfo().device_name,{}).items():
+		for physdevprefix, pdescription in DEVICEDB.get(HardwareInfo().device_name,{}).items():
 			if phys.startswith(physdevprefix):
-				if have_model_descr:
-					description = pdescription + ' - ' + description
-				else:
-					description = pdescription
+				description = pdescription
+
 		# not wholedisk and not partition 1
 		if part and part != 1:
 			description += " (Partition %d)" % part

--- enigma2-nightly.org/lib/python/Components/InputDevice.py	2011-11-04 23:16:03.373410299 +0100
+++ enigma2-nightly/lib/python/Components/InputDevice.py	2011-11-04 23:16:14.133463678 +0100
@@ -40,7 +40,7 @@
 				self.name = self.name[:self.name.find("\0")]
 				os_close(self.fd)
 			except (IOError,OSError), err:
-				print '[iInputDevices] getInputDevices  <ERROR: ioctl(EVIOCGNAME): ' + str(err) + ' >'
+				#print '[iInputDevices] getInputDevices  <ERROR: ioctl(EVIOCGNAME): ' + str(err) + ' >'
 				self.name = None
 			
 			if self.name:

--- enigma2-nightly.org/skin.py	2011-11-04 23:26:21.596475897 +0100
+++ enigma2-nightly/skin.py	2011-11-04 23:26:29.040512808 +0100
@@ -550,7 +550,7 @@
 						c = i
 
 				if c is None:
-					print "allocating new converter!"
+					#print "allocating new converter!"
 					c = converter_class(parms)
 					c.connect(source)
 				else:

--- enigma2-nightly.org/lib/dvb/pmt.cpp	2011-11-04 23:47:00.034616978 +0100
+++ enigma2-nightly/lib/dvb/pmt.cpp	2011-11-04 23:47:08.590659408 +0100
@@ -815,7 +815,7 @@
 
 eDVBCAService::~eDVBCAService()
 {
-	eDebug("[eDVBCAService] free service %s", m_service.toString().c_str());
+	//eDebug("[eDVBCAService] free service %s", m_service.toString().c_str());
 	::close(m_sock);
 }
 
@@ -879,7 +879,7 @@
 				{
 					if ( !freed && caservice->m_used_demux[iter] == demux_nums[i] )
 					{
-						eDebug("[eDVBCAService] free slot %d demux %d for service %s", iter, caservice->m_used_demux[iter], caservice->m_service.toString().c_str() );
+						//eDebug("[eDVBCAService] free slot %d demux %d for service %s", iter, caservice->m_used_demux[iter], caservice->m_service.toString().c_str() );
 						caservice->m_used_demux[iter] = 0xFF;
 						freed=true;
 					}
@@ -919,7 +919,7 @@
 {
 	if ( chan )
 	{
-		eDebug("[eDVBCAService] new channel %p!", chan);
+		//eDebug("[eDVBCAService] new channel %p!", chan);
 		channel_data *data = new channel_data();
 		data->m_channel = chan;
 		data->m_prevChannelState = -1;
@@ -943,12 +943,12 @@
 			{
 				case iDVBChannel::state_ok:
 				{
-					eDebug("[eDVBCAService] channel %p running", chan);
+					//eDebug("[eDVBCAService] channel %p running", chan);
 					break;
 				}
 				case iDVBChannel::state_release:
 				{
-					eDebug("[eDVBCAService] remove channel %p", chan);
+					//eDebug("[eDVBCAService] remove channel %p", chan);
 					unsigned char msg[8] = { 0x9f,0x80,0x3f,0x04,0x83,0x02,0x00,0x00 };
 					msg[7] = it->second->m_dataDemux & 0xFF;
 					int sock, clilen;
@@ -1235,7 +1235,7 @@
 	if ( write(m_sock, m_capmt, wp) == wp )
 	{
 		m_sendstate=0xFFFFFFFF;
-		eDebug("[eDVBCAService] send %d bytes",wp);
+		//eDebug("[eDVBCAService] send %d bytes",wp);
 		eDVBChannelID chid;
 		m_service.getChannelID(chid);
 		channel_data *data = getChannelData(chid);

--- enigma2-nightly.org/lib/dvb/epgcache.cpp	2011-11-04 21:21:58.822934284 +0100
+++ enigma2-nightly/lib/dvb/epgcache.cpp	2011-11-04 23:54:06.868733562 +0100
@@ -817,7 +817,7 @@
 	singleLock s(cache_lock);
 	if (!eventDB.empty())
 	{
-		eDebug("[EPGC] start cleanloop");
+		//eDebug("[EPGC] start cleanloop");
 
 		time_t now = ::time(0);
 
@@ -874,8 +874,8 @@
 			}
 #endif
 		}
-		eDebug("[EPGC] stop cleanloop");
-		eDebug("[EPGC] %i bytes for cache used", eventData::CacheSize);
+		//eDebug("[EPGC] stop cleanloop");
+		//eDebug("[EPGC] %i bytes for cache used", eventData::CacheSize);
 	}
 	cleanTimer->start(CLEAN_INTERVAL,true);
 }

--- enigma2-nightly.org/timer.py	2011-11-04 21:21:56.894924727 +0100
+++ enigma2-nightly/timer.py	2011-11-05 00:11:57.722043611 +0100
@@ -201,7 +201,7 @@
 	
 	def setNextActivation(self, when):
 		delay = int((when - time()) * 1000)
-		print "[timer.py] next activation: %d (in %d ms)" % (when, delay)
+		#print "[timer.py] next activation: %d (in %d ms)" % (when, delay)
 		
 		self.timer.start(delay, 1)
 		self.next = when

--- enigma2-nightly.org/data/skin.xml	2011-11-05 00:16:42.967458066 +0100
+++ enigma2-nightly/data/skin.xml	2011-11-05 19:07:27.931236326 +0100
@@ -281,6 +281,10 @@
 			<convert type="MenuEntryCompare">subtitle_selection</convert>
 			<convert type="ConditionalShowHide"/>
 		</widget>
+		<widget source="menu" render="Pixmap" pixmap="skin_default/menu/evomc.png" position="20,20" size="140,140" zPosition="1" alphatest="on">
+  			<convert type="MenuEntryCompare">EVO_MC</convert>
+  			<convert type="ConditionalShowHide"/>
+ 		</widget>
 	</screen>
 	<!-- Movieplayer infobar -->
 	<screen name="MoviePlayer" flags="wfNoBorder" position="0,380" size="720,160" title="InfoBar" backgroundColor="transparent">

--- enigma2-nightly.org/lib/python/Screens/Volume.py	2011-11-05 20:00:30.923019944 +0100
+++ enigma2-nightly/lib/python/Screens/Volume.py	2011-11-05 20:00:41.715073445 +0100
@@ -1,14 +1,13 @@
 from Screen import Screen
 from Components.VolumeBar import VolumeBar
-		
+from Components.Label import Label #NEW LINE		
 class Volume(Screen):
 	def __init__(self, session):
 		Screen.__init__(self, session)
-		
 		self.volumeBar = VolumeBar()
-		
 		self["Volume"] = self.volumeBar
-		
+		self["VolumeText"] = Label("") #NEW LINE
+
 	def setValue(self, vol):
-		print "setValue", vol
 		self.volumeBar.setValue(vol)
+		self["VolumeText"].setText(str(vol)) #NEW LINE
